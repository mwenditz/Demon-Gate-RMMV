[
null,
{"id":1,"autoRemovalTiming":0,"chanceByDamage":100,"iconIndex":1,"maxTurns":1,"message1":" has fallen!","message2":" is slain!","message3":"","message4":" revives!","minTurns":1,"motion":3,"name":"K.O.","note":"State #1 will be automatically added when\nHP reaches 0.\n\n<Help Description>\nUser is \\c[4]Knocked Out\\c[0] and cannot act until revived\n</Help Description>\n\n// Living Dead\n<Custom Apply Effect>\nif (user.isStateAffected(141) && !user._walkingDeadFailed) {\n  user.removeState(1);\n  user.removeState(141);\n  user.addState(142);\n  user.setHp(1);\n}\n</Custom Apply Effect>\n\n// Death Injuries\n<Custom Apply Effect>\nif (user.isDead()) {\nvar possibleInjuries = [];\npossibleInjuries.push(89, 90, 91, 92);\npossibleInjuries.push(93, 94, 95, 96);\npossibleInjuries.push(97, 98, 99, 100);\npossibleInjuries.push(101, 102, 103, 104);\nfor (var i = 0; i < possibleInjuries.length; ++i) {\n  var j = Math.floor(Math.random() * (i + 1));\n  var temp = possibleInjuries[i];\n  possibleInjuries[i] = possibleInjuries[j];\n  possibleInjuries[j] = temp;\n}\nvar received = 1;\nwhile (received) {\n  if (possibleInjuries.length > 0) {\n    var stateId = possibleInjuries.shift();\n    if (!target.isStateAffected(stateId)) {\n      target.addNewState(stateId);\n      received -= 1;\n    }\n  } else {\n    break;\n  }\n}\n} // user.isDead()\n</Custom Apply Effect>\n\n// Death Nova\n<Custom Apply Effect>\nvar deathNovaId = 271;\nif (target.isDead() && target.isStateAffected(deathNovaId)) {\n  var poisonId = 37;\n  var caster = target.stateOrigin(deathNovaId);\n  var dmg = caster.mat * 6;\n  var foes = target.opponentsUnit().aliveMembers();\n  for (var i = 0; i < foes.length; ++i) {\n    var foe = foes[i];\n    if (foe) {\n      foe.gainHp(-dmg);\n      foe.addState(poisonId);\n      foe.startDamagePopup();\n      if (foe.isDead()) {\n        foe.performCollapse();\n      }\n      foe.clearResult();\n    }\n  }\n  target.startAnimation(109);\n  target.removeState(deathNovaId);\n}\n</Custom Apply Effect>\n\n// Soul Heart Passive\n<Custom Apply Effect>\nif (user.isDead()) {\n  var soulHeartId = 329;\n  var group = user.friendsUnit().aliveMembers().concat(user.opponentsUnit().aliveMembers());\n  while (group.length > 0) {\n    var member = group.shift();\n    if (member && member.isStateAffected(soulHeartId)) {\n      var paramId = 4;\n      var turns = 5;\n      member.addBuff(paramId, turns);\n    }\n  }\n}\n</Custom Apply Effect>","overlay":0,"priority":100,"releaseByDamage":false,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":4,"stepsToRemove":100,"traits":[{"code":23,"dataId":9,"value":0}]},
{"id":2,"autoRemovalTiming":2,"chanceByDamage":100,"description":"","iconIndex":251,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Guard","note":"<Action Start: 1>\n<Hide Turns>\n\n<Help Description>\nUnit receives less \\dmg until unit uses an action\n</Help Description>\n\n<Custom React Effect>\nif (this.isHpEffect() && value > 0) {\n  var members = target.friendsUnit().aliveMembers();\n  var totalGuarding = 0;\n  for (var i = 0; i < members.length; ++i) {\n    var member = members[i];\n    if (member && member.isStateAffected(stateId)) {\n      totalGuarding += 1;\n    }\n  }\n  if (totalGuarding >= 4) {\n    var reduction = 0.65;\n  } else if (totalGuarding >= 3) {\n    var reduction = 0.60;\n  } else if (totalGuarding >= 2) {\n    var reduction = 0.55;\n  } else {\n    var reduction = 0.50;\n  }\n  value -= Math.floor(value * reduction);\n}\n</Custom React Effect>","overlay":0,"priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":true,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":3,"autoRemovalTiming":0,"chanceByDamage":100,"description":"","iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Immortal","note":"","overlay":0,"priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":14,"dataId":1,"value":0}]},
{"id":4,"autoRemovalTiming":2,"chanceByDamage":50,"iconIndex":78,"maxTurns":1,"message1":" is stunned.","message2":" is stunned.","message3":"","message4":" is no longer stunned.","minTurns":1,"motion":1,"name":"Stun","note":"<Help Description>\nFor \\c[4]1\\c[0] turn, unit cannot act\n</Help Description>","overlay":8,"priority":99,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":4,"stepsToRemove":100,"traits":[]},
{"id":5,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"----------T","note":"<Physical Taunt>\n<Magical Taunt>\n<Certain Taunt>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":6,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":81,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Barrier","note":"<Help Description>\nUnit is affected by a \\c[4]Barrier\\c[0]; received \\dmg will be dealt to \\c[4]Barrier\\c[0] before the unit's \\hp\n</Help Description>\n\n<Custom Regenerate Effect>\nuser.setStateCounter(stateId, user.barrierPoints());\n</Custom Regenerate Effect>\n\n<Custom Deselect Effect>\ntarget.setStateCounter(stateId, target.barrierPoints());\n</Custom Deselect Effect>\n\n<Custom Conclude Effect>\nuser.setStateCounter(stateId, user.barrierPoints());\n</Custom Conclude Effect>","overlay":0,"priority":99,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":7,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Global Passive","note":"<Custom Battle Effect>\nuser._isJumping = undefined;\nuser._criticalProtect = false;\n</Custom Battle Effect>\n\n<Custom Victory Effect>\nuser._isJumping = undefined;\nuser._criticalProtect = false;\n</Custom Victory Effect>\n\n<Custom Escape Effect>\nuser._isJumping = undefined;\nuser._criticalProtect = false;\n</Custom Escape Effect>\n\n<Custom Defeat Effect>\nuser._isJumping = undefined;\nuser._criticalProtect = false;\n</Custom Defeat Effect>\n\n<Custom Action Start Effect>\nvar action = user.currentAction();\nuser._lastUsedSkill = user._lastUsedSkill || 1;\nif (action && action.isSkill()) {\n  user._lastUsedSkill = action.item().id;\n}\n</Custom Action Start Effect>","overlay":0,"priority":99,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":8,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":22,"dataId":0,"value":1}],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Actor Passive","note":"","overlay":0,"priority":98,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":9,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Enemy Passive","note":"<Custom Confirm Effect>\nif (value !== 0 && this.item() && this.item().damage.variance > 0) {\n  var bonus = 0;\n  if (!this.isForDeadFriend()) {\n    bonus = Math.abs(value);\n    var levelmultiplier = 3 * Math.pow(1.01, user.level);\n    bonus += user.level * levelmultiplier.clamp(3, 50);\n    if (target.isGuard()) {\n      bonus /= 2;\n    }\n  }\n  if (bonus) {\n    if (value > 0) {\n      value += bonus;\n    } else if (value < 0) {\n      value -= bonus;\n    }\n  }\n  value = Math.floor(value);\n}\n</Custom Confirm Effect>","overlay":0,"priority":98,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":10,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":13,"dataId":1,"value":0}],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Boss Passive","note":"<Category: Boss>","overlay":0,"priority":97,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":11,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"----------B","note":"","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":12,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Row 1 State","note":"","overlay":0,"priority":1,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":13,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Row 2 State","note":"<Custom React Effect>\nif (this.isPhysical() && this.isWeaponRanged()) {\n  if (!user.isWeaponRanged() && value > 0) {\n    value = Math.floor(value * 0.50);\n  }\n}\n</Custom React Effect>\n\n<Custom Confirm Effect>\nif (this.isPhysical() && this.isWeaponRanged()) {\n  if (!user.isWeaponRanged() && value > 0) {\n    value = Math.floor(value * 0.50);\n  }\n}\n</Custom Confirm Effect>","overlay":0,"priority":1,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":14,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Row 3 State","note":"<Custom React Effect>\nif (this.isPhysical() && this.isWeaponRanged()) {\n  if (!user.isWeaponRanged() && value > 0) {\n    value = Math.floor(value * 0.25);\n  }\n}\n</Custom React Effect>\n\n<Custom Confirm Effect>\nif (this.isPhysical() && this.isWeaponRanged()) {\n  if (!user.isWeaponRanged() && value > 0) {\n    value = Math.floor(value * 0.25);\n  }\n}\n</Custom Confirm Effect>","overlay":0,"priority":1,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":15,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":21,"dataId":3,"value":0},{"code":21,"dataId":5,"value":0},{"code":11,"dataId":9,"value":10}],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"----------D","note":"","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":16,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":162,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Turn Start","note":"<Turn Start: 5>\n<Reapply Add Turns>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":17,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":164,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Action Start","note":"<Action Start: 5 to 5>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":18,"autoRemovalTiming":1,"chanceByDamage":100,"traits":[],"iconIndex":165,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Action End","note":"<Custom Action End Effect>\nconsole.log('action end')\n</Custom Action End Effect>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":19,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":166,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Turn End","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":20,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"----------F","note":"<Force Element Fire Rate: 100%>\n<Force Element Water Rate: 100%>\n<Force Element Air Rate: 100%>\n<Force Element Ice Rate: 100%>\n<Force Element Volt Rate: 100%>\n<Force Element Earth Rate: 100%>\n<Force Element Holy Rate: 100%>\n<Force Element Dark Rate: 100%>\n<Force Element Time Rate: 100%>\n<Force Element Chaos Rate: 100%>\n\n<Custom React Effect>\nif ($gameTroop.turnCount() >= 7) {\n  if (this.isPhysical()) {\n    value = Math.floor(target.mhp * 0.32);\n    user._firstHitLanded = true;\n  } else if (user._firstHitLanded) {\n    value = Math.floor(target.mhp * 0.32);\n  } else {\n    value = Math.floor(target.mhp * 0.48);\n  }\n  if (value > target.hp) {\n    value = Math.ceil(target.hp * 0.95);\n  }\n}\n</Custom React Effect>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":21,"autoRemovalTiming":1,"chanceByDamage":50,"iconIndex":5,"maxTurns":4,"message1":" is enraged!","message2":" is enraged!","message3":"","message4":" is no longer enraged!","minTurns":4,"motion":1,"name":"Berserk","note":"<Category: Ailment>\n<Help Description>\nFor \\c[4]4\\c[0] actions, unit will involuntarily \\c[4]attack\\c[0] foes\n</Help Description>","overlay":4,"priority":70,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":1,"stepsToRemove":100,"traits":[]},
{"id":22,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":5,"maxTurns":2,"message1":" is burning!","message2":" is burning!","message3":"","message4":" is no longer burning!","minTurns":2,"motion":1,"overlay":0,"name":"Burning","note":"<Category: Ailment>\n<Help Description>\nFor \\c[4]2\\c[0] turns, unit loses \\c[4]-20% HP\\c[0] each turn\n</Help Description>\n\n<Custom Apply Effect>\nuser.setStateCounter(stateId, '-20%');\n</Custom Apply Effect>\n\n<Custom Regenerate Effect>\nvar damage = Math.ceil(user.mhp * 0.20);\ndamage = Math.min(damage, 9999);\nif (damage !== 0) {\n  user.startAnimation(67);\n  user.gainHp(-damage);\n  user.startDamagePopup();\n  user.clearResult();\n}\n</Custom Regenerate Effect>","priority":50,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":23,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":21,"dataId":2,"value":1.6},{"code":21,"dataId":4,"value":1.6}],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"-ATK/MAT","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":24,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":25,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":26,"autoRemovalTiming":1,"chanceByDamage":50,"iconIndex":65,"maxTurns":3,"message1":" is chilled.","message2":" is chilled.","message3":"","message4":" is no longer chilled.","minTurns":3,"motion":1,"name":"Chilled","note":"<Category: Ailment>\n<Help Description>\nFor \\c[4]3\\c[0] actions, unit's actions will not charge \\c[4]TP\\c[0]\n</Help Description>","overlay":0,"priority":50,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":23,"dataId":5,"value":0}]},
{"id":27,"autoRemovalTiming":2,"chanceByDamage":50,"iconIndex":65,"maxTurns":3,"message1":" is frozen.","message2":" is frozen.","message3":"","message4":" is no longer frozen.","minTurns":3,"motion":1,"name":"Frozen","note":"<Category: Ailment>\n<Help Description>\nFor \\c[4]3\\c[0] turns, unit cannot act; user's \\c[4]MaxHP\\c[0] is greatly \\c[4]Debuffed\\c[0] if struck by \\c[4]Physical DMG\\c[0]; if user receives \\c[4]Fire\\c[0] or \\c[4]Physical DMG\\c[0], remove \\c[4]Frozen\\c[0]\n</Help Description>\n\n<Custom Respond Effect>\nvar fire = 7;\nif (this.getItemElements().contains(fire)) {\n  target.removeState(stateId);\n} else if (this.isPhysical() && target.result().hpDamage > 0) {\n  target.addDebuff(0, 5);\n  target.addDebuff(0, 5);\n  target.removeState(stateId);\n}\n</Custom Respond Effect>","overlay":0,"priority":50,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":4,"stepsToRemove":100,"traits":[]},
{"id":28,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":29,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":30,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":31,"autoRemovalTiming":2,"chanceByDamage":50,"iconIndex":9,"maxTurns":5,"message1":"","message2":"","message3":" is paralyzed and cannot move!","message4":"","minTurns":5,"motion":1,"name":"Paralysis","note":"<Cancel Instant Skill: 1 to 2000>\n<Cancel Instant Item: 1 to 2000>\n<Help Description>\nFor \\c[4]5\\c[0] turns, unit cannot use instant actions and has a \\c[4]25%\\c[0] chance to fail an action\n</Help Description>\n\n<Custom Action Start Effect>\nvar paralyzeRate = 0.25;\nif (Math.random() < paralyzeRate) {\n  user.startAnimation(64);\n  if (user.currentAction()) {\n    user.useItem(user.currentAction().item());\n  }\n  user.clearActions();\n  var logWindow = SceneManager._scene._logWindow;\n  if (state.message3) {\n    var msg = '<CENTER>' + user.name() + state.message3;\n    logWindow.addText(msg);\n  }\n  BattleManager.actionWaitForAnimation();\n  logWindow.push('clear');\n}\n</Custom Action Start Effect>","overlay":8,"priority":80,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":32,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":33,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":34,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":35,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":36,"autoRemovalTiming":1,"chanceByDamage":100,"iconIndex":7,"maxTurns":3,"message1":" is charmed!","message2":" is charmed!","message3":"","message4":" is no longer charmed!","minTurns":3,"motion":1,"name":"Charm","note":"<Category: Ailment>\n<Help Description>\nFor \\c[4]3\\c[0] actions, unit will involuntarily \\c[4]attack\\c[0] allies\n</Help Description>","overlay":6,"priority":80,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":true,"removeByRestriction":false,"removeByWalking":false,"restriction":3,"stepsToRemove":100,"traits":[]},
{"id":37,"autoRemovalTiming":0,"chanceByDamage":100,"iconIndex":2,"maxTurns":5,"message1":" is poisoned!","message2":" is poisoned!","message3":"","message4":" is no longer poisoned!","minTurns":5,"motion":1,"overlay":1,"name":"Poison","note":"<Category: Ailment>\n<Help Description>\nUnit loses \\c[4]-5% HP\\c[0] each turn\n</Help Description>\n\n<Custom Apply Effect>\nuser.setStateCounter(stateId, '-5%');\n</Custom Apply Effect>\n\n<Custom Regenerate Effect>\nvar damage = Math.ceil(user.mhp * 0.05);\ndamage = Math.min(damage, 9999);\nif (damage !== 0) {\n  user.startAnimation(173);\n  user.gainHp(-damage);\n  user.startDamagePopup();\n  user.clearResult();\n}\n</Custom Regenerate Effect>","priority":50,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":38,"autoRemovalTiming":0,"chanceByDamage":100,"iconIndex":18,"maxTurns":1,"message1":" is poisoned!","message2":" is poisoned!","message3":"","message4":" is no longer poisoned!","minTurns":1,"motion":1,"overlay":1,"name":"Toxic","note":"<Category: Ailment>\n<Help Description>\nDeal \\c[4]Toxic DMG\\c[0] to unit each turn; each turn, \\c[4]Toxic DMG\\c[0] increases \\c[4]6.25%\\c[0]\n</Help Description>\n\n<Custom Apply Effect>\nthis._toxicCounter = 1;\nuser.setStateCounter(stateId, '-6%');\n</Custom Apply Effect>\n\n<Custom Regenerate Effect>\nvar n = this._toxicCounter / 16;\nvar damage = Math.floor(n * user.mhp);\ndamage = Math.min(damage, 9999);\nif (damage !== 0) {\n  user.startAnimation(173);\n  user.startAnimation(2);\n  user.gainHp(-damage);\n  user.startDamagePopup();\n  user.clearResult();\n  n = Math.floor(n * 100);\n  user.setStateCounter(stateId, '-' + n + '%');\n}\nthis._toxicCounter += 1;\n</Custom Regenerate Effect>","priority":90,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":39,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":40,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":41,"autoRemovalTiming":1,"chanceByDamage":100,"iconIndex":74,"maxTurns":3,"message1":" is crippled!","message2":" is crippled!","message3":"","message4":" is no longer crippled!","minTurns":3,"motion":1,"name":"Cripple","note":"<Category: Ailment>\n<Help Description>\nFor \\c[4]2\\c[0] actions, unit cannot use \\c[4]Physical\\c[0] skills\n</Help Description>","overlay":8,"priority":65,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":42,"dataId":2,"value":0},{"code":42,"dataId":3,"value":0},{"code":42,"dataId":4,"value":0},{"code":42,"dataId":5,"value":0},{"code":42,"dataId":6,"value":0},{"code":42,"dataId":7,"value":0},{"code":42,"dataId":8,"value":0},{"code":42,"dataId":9,"value":0},{"code":42,"dataId":10,"value":0},{"code":42,"dataId":11,"value":0},{"code":42,"dataId":12,"value":0},{"code":42,"dataId":13,"value":0}]},
{"id":42,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":162,"maxTurns":5,"message1":" is bleeding!","message2":" is bleeding!","message3":"","message4":" is no longer bleeding!","minTurns":5,"motion":1,"overlay":0,"name":"Bleed","note":"<Category: Ailment>\n<Help Description>\nStacks \\c[4]50%\\c[0] user's \\c[4]ATK\\c[0] as \\c[4]Bleed DMG\\c[0]; for \\c[4]5\\c[0] turns, unit loses \\c[4]Bleed DMG\\c[0] each turn\n</Help Description>\n\n<Custom Apply Effect>\nuser._bleedDmg = user._bleedDmg || 0;\nuser._bleedDmg += Math.ceil(origin.atk * 0.50);\n</Custom Apply Effect>\n\n<Custom Remove Effect>\nuser._bleedDmg = 0;\n</Custom Remove Effect>\n\n<Custom Regenerate Effect>\nvar damage = user._bleedDmg || 0;\ndamage = Math.min(damage, 9999);\nif (damage !== 0) {\n  user.startAnimation(174);\n  user.gainHp(-damage);\n  user.startDamagePopup();\n  user.clearResult();\n}\n</Custom Regenerate Effect>","priority":50,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":43,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":48,"maxTurns":5,"message1":" is wounded!","message2":" is wounded!","message3":"","message4":" is no longer wounded!","minTurns":5,"motion":1,"overlay":0,"name":"Wound","note":"<Category: Ailment>\n<Help Description>\nFor \\c[4]5\\c[0] turns, unit's \\c[4]MaxHP\\c[0] to \\c[4]80%\\c[0] and receive \\c[4]50%\\c[0] less \\c[4]healing\\c[0]\n</Help Description>\n\n<Custom React Effect>\nif (this.isHpEffect() && value < 0) {\n  value = Math.ceil(value * 0.50);\n}\n</Custom React Effect>","priority":51,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":21,"dataId":0,"value":0.8}]},
{"id":44,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":45,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":46,"autoRemovalTiming":1,"chanceByDamage":100,"iconIndex":4,"maxTurns":3,"message1":" is silenced!","message2":" is silenced!","message3":"","message4":" is no longer silenced!","minTurns":3,"motion":1,"name":"Silence","note":"<Category: Ailment>\n<Help Description>\nFor \\c[4]3\\c[0] actions, unit cannot use \\c[4]Magical\\c[0] skills\n</Help Description>","overlay":3,"priority":65,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":42,"dataId":14,"value":0},{"code":42,"dataId":15,"value":0},{"code":42,"dataId":16,"value":0},{"code":42,"dataId":17,"value":0},{"code":42,"dataId":18,"value":0},{"code":42,"dataId":19,"value":0},{"code":42,"dataId":20,"value":0},{"code":42,"dataId":21,"value":0},{"code":42,"dataId":22,"value":0},{"code":42,"dataId":23,"value":0},{"code":42,"dataId":24,"value":0},{"code":42,"dataId":25,"value":0}]},
{"id":47,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":48,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":49,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":50,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":51,"autoRemovalTiming":1,"chanceByDamage":100,"iconIndex":3,"maxTurns":3,"message1":" is blinded!","message2":" is blinded!","message3":"","message4":" is no longer blinded!","minTurns":3,"motion":1,"name":"Blind","note":"<Category: Ailment>\n<Help Description>\nFor \\c[4]3\\c[0] actions, unit's \\c[4]HIT\\c[0] accuracy is reduced \\c[4]-50%\\c[0]\n</Help Description>","overlay":2,"priority":60,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":22,"dataId":0,"value":-0.5}]},
{"id":52,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":53,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":54,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":55,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":56,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":10,"maxTurns":3,"message1":" is afraid!","message2":" is afraid!","message3":"","message4":" is no longer afraid!","minTurns":3,"motion":1,"name":"Fear","note":"<Category: Ailment>\n<Help Description>\nFor \\c[4]3\\c[0] turns, unit's deals \\c[4]-50% DMG\\c[0] and receives \\c[4]+25% DMG\\c[0]\n</Help Description>\n\n<Custom Confirm Effect>\nif (this.isHpEffect() && value > 0) {\n  value = Math.floor(value * 0.50);\n}\n</Custom Confirm Effect>\n\n<Custom React Effect>\nif (this.isHpEffect() && value > 0) {\n  value = Math.ceil(value * 1.25);\n}\n</Custom React Effect>","overlay":10,"priority":90,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":57,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":299,"maxTurns":3,"message1":" becomes greedy.","message2":" becomes greedy.","message3":"","message4":" suddenly wants to share with the world!","minTurns":3,"motion":0,"name":"Greed","note":"<Category: Ailment>\n<Help Description>\nFor \\c[4]5\\c[0] turns, when unit uses a friendly item, unit will select itself as a target\n</Help Description>\n\n<Custom Action Start Effect>\nvar action = user.currentAction();\nif (action && action.isItem() && action.isForFriend()) {\n  var index = user.index();\n  action.setTarget(index);\n}\n</Custom Action Start Effect>","overlay":0,"priority":100,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":58,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":26,"maxTurns":3,"message1":" is afraid!","message2":" is afraid!","message3":"","message4":" is no longer afraid!","minTurns":3,"motion":1,"name":"Paranoia","note":"<Category: Ailment>\n<Help Description>\nFor \\c[4]3\\c[0] turns, unit will instinctively dodge friendly actions by other allies that target the unit\n</Help Description>\n\n<Custom Select Effect>\nif (this.item()) {\n  this._paranoiaActionSuccessRate = this.item().successRate;\n}\nif (user !== target) {\n  if (this.item() && this.isForFriend()) {\n    this.item().successRate = 0;\n  }\n}\n</Custom Select Effect>\n\n<Custom Deselect Effect>\nif (this.item() && this._paranoiaActionSuccessRate !== undefined) {\n  this.item().successRate = this._paranoiaActionSuccessRate;\n}\n</Custom Deselect Effect>","overlay":9,"priority":100,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":59,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":60,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":169,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Vulnerable","note":"<Category: Ailment>\n<Help Description>\nFor \\c[4]5\\c[0] turns, actions that can inflict a \\c[4]critical hit\\c[0] against unit will have a \\c[4]100%\\c[0] chance to inflict a \\c[4]critical hit\\c[0]\n</Help Description>\n\n<Custom Select Effect>\nvar skill = this.item();\nif (skill && skill.damage.critical) {\n  this._prevForcedCriticalHit = $gameSystem._forceCritical;\n  this._prevForcedNoCriticalHit = $gameSystem._forceNoCritical;\n  BattleManager.actionForceCritical();\n}\n</Custom Select Effect>\n\n<Custom Deselect Effect>\nif (this._prevForcedCriticalHit !== undefined) {\n  $gameSystem._forceCritical = this._prevForcedCriticalHit;\n  $gameSystem._forceNoCritical = this._prevForcedNoCriticalHit;\n}\n</Custom Deselect Effect>","overlay":0,"priority":100,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":61,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":75,"maxTurns":3,"message1":" is warped!","message2":" is warped!","message3":"","message4":" is no longer warped!","minTurns":3,"motion":0,"name":"Warp","note":"<Category: Ailment>\n<Help Description>\nFor \\c[4]3\\c[0] turns, all skills used by unit will have \\c[4]+2 Cooldown\\c[0]\n</Help Description>\n\n<Global Cooldown: +2>","overlay":0,"priority":60,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":62,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":63,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":64,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":65,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":66,"autoRemovalTiming":2,"chanceByDamage":100,"iconIndex":6,"maxTurns":5,"message1":" is confused!","message2":" is confused!","message3":"","message4":" is no longer confused!","minTurns":5,"motion":0,"name":"Confusion","note":"<Category: Ailment>\n<Help Description>\nFor \\c[4]5\\c[0] turns, unit's actions have a \\c[4]50%\\c[0] chance to attack self instead\n</Help Description>\n\n<Custom Action Start Effect>\nvar confuseRate = 0.50;\nif (Math.random() < confuseRate) {\n  var confusionSkill = 10;\n  user.startAnimation(63);\n  var action = user.currentAction();\n  action.setSkill(confusionSkill);\n}\n</Custom Action Start Effect>","overlay":5,"priority":75,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[]},
{"id":67,"autoRemovalTiming":1,"chanceByDamage":100,"iconIndex":6,"maxTurns":5,"message1":" is confused!","message2":" is confused!","message3":"","message4":" is no longer confused!","minTurns":5,"motion":1,"name":"Befuddlement","note":"<Category: Ailment>\n<Help Description>\nFor \\c[4]5\\c[0] actions, unit will involuntarily \\c[4]attack\\c[0] allies or foes; if unit is damaged, remove \\c[4]Confusion\\c[0]\n</Help Description>","overlay":5,"priority":75,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":true,"removeByRestriction":false,"removeByWalking":false,"restriction":2,"stepsToRemove":100,"traits":[]},
{"id":68,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":69,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":70,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":526,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Illness","note":"<Category: Ailment>\n<Help Description>\nEach turn, unit is afflicted with a random \\c[4]Ailment\\c[0] or \\c[4]Debuff\\c[0]\n</Help Description>\n\n<Custom Regenerate Effect>\nvar debuffChance = 0.25;\nif (Math.random() < debuffChance) {\n  var allowedParams = [];\n  // Insert Param ID's you want to randomly add here:\n  allowedParams.push(2, 3, 4, 5, 6, 7);\n  var id = allowedParams[Math.floor(Math.random() * allowedParams.length)];\n  var turns = 5;\n  target.addDebuff(id, turns);\n  target.startAnimation(54);\n} else {\n  var allowedStates = [];\n  // Insert states you want to randomly add here:\n  allowedStates.push(21, 22, 26, 27);\n  allowedStates.push(31, 36, 37, 38);\n  allowedStates.push(41, 42, 43, 46);\n  allowedStates.push(51, 56, 57, 58);\n  allowedStates.push(60, 61, 66, 67);\n  while (allowedStates.length > 0) {\n    var id = allowedStates[Math.floor(Math.random() * allowedStates.length)];\n    allowedStates.splice(allowedStates.indexOf(id), 1);\n    if (!target.isStateAffected(id)) {\n      target.addState(id);\n      target.startAnimation(55);\n      break;\n    }\n  }\n}\n</Custom Regenerate Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":71,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":14,"dataId":72,"value":1},{"code":14,"dataId":73,"value":1},{"code":14,"dataId":74,"value":1},{"code":14,"dataId":75,"value":1},{"code":14,"dataId":76,"value":1},{"code":14,"dataId":77,"value":1},{"code":14,"dataId":78,"value":1},{"code":14,"dataId":79,"value":1},{"code":14,"dataId":80,"value":1}],"iconIndex":64,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Fire Attunement","note":"<Category: Attune>\n<State Animation: 179>\n<Help Description>\nUnit's \\c[4]Elemental Resistances\\c[0] will match the \\fire \\c[4]Element\\c[0]\n</Help Description>\n\n<Force Element Fire Rate: -100%>\n<Force Element Water Rate: 200%>\n<Force Element Air Rate: 200%>\n<Force Element Ice Rate: 50%>\n<Force Element Volt Rate: 50%>\n<Force Element Earth Rate: 100%>\n<Force Element Holy Rate: 100%>\n<Force Element Dark Rate: 100%>\n<Force Element Time Rate: 100%>\n<Force Element Chaos Rate: 100%>","overlay":0,"priority":10,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":72,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":14,"dataId":71,"value":1},{"code":14,"dataId":73,"value":1},{"code":14,"dataId":74,"value":1},{"code":14,"dataId":75,"value":1},{"code":14,"dataId":76,"value":1},{"code":14,"dataId":77,"value":1},{"code":14,"dataId":78,"value":1},{"code":14,"dataId":79,"value":1},{"code":14,"dataId":80,"value":1}],"iconIndex":65,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Ice Attunement","note":"<Category: Attune>\n<State Animation: 180>\n<Help Description>\nUnit's \\c[4]Elemental Resistances\\c[0] will match the \\ice \\c[4]Element\\c[0]\n</Help Description>\n\n<Force Element Ice Rate: -100%>\n<Force Element Fire Rate: 200%>\n<Force Element Earth Rate: 200%>\n<Force Element Water Rate: 50%>\n<Force Element Air Rate: 50%>\n<Force Element Volt Rate: 100%>\n<Force Element Holy Rate: 100%>\n<Force Element Dark Rate: 100%>\n<Force Element Time Rate: 100%>\n<Force Element Chaos Rate: 100%>","overlay":0,"priority":10,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":73,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":14,"dataId":71,"value":1},{"code":14,"dataId":72,"value":1},{"code":14,"dataId":74,"value":1},{"code":14,"dataId":75,"value":1},{"code":14,"dataId":76,"value":1},{"code":14,"dataId":77,"value":1},{"code":14,"dataId":78,"value":1},{"code":14,"dataId":79,"value":1},{"code":14,"dataId":80,"value":1}],"iconIndex":66,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Volt Attunement","note":"<Category: Attune>\n<State Animation: 181>\n<Help Description>\nUnit's \\c[4]Elemental Resistances\\c[0] will match the \\volt \\c[4]Element\\c[0]\n</Help Description>\n\n<Force Element Volt Rate: -100%>\n<Force Element Earth Rate: 200%>\n<Force Element Fire Rate: 200%>\n<Force Element Water Rate: 50%>\n<Force Element Air Rate: 50%>\n<Force Element Ice Rate: 100%>\n<Force Element Holy Rate: 100%>\n<Force Element Dark Rate: 100%>\n<Force Element Time Rate: 100%>\n<Force Element Chaos Rate: 100%>","overlay":0,"priority":10,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":74,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":14,"dataId":71,"value":1},{"code":14,"dataId":72,"value":1},{"code":14,"dataId":73,"value":1},{"code":14,"dataId":75,"value":1},{"code":14,"dataId":76,"value":1},{"code":14,"dataId":77,"value":1},{"code":14,"dataId":78,"value":1},{"code":14,"dataId":79,"value":1},{"code":14,"dataId":80,"value":1}],"iconIndex":67,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Water Attunement","note":"<Category: Attune>\n<State Animation: 182>\n<Help Description>\nUnit's \\c[4]Elemental Resistances\\c[0] will match the \\water \\c[4]Element\\c[0]\n</Help Description>\n\n<Force Element Water Rate: -100%>\n<Force Element Volt Rate: 200%>\n<Force Element Ice Rate: 200%>\n<Force Element Fire Rate: 50%>\n<Force Element Earth Rate: 50%>\n<Force Element Air Rate: 100%>\n<Force Element Holy Rate: 100%>\n<Force Element Dark Rate: 100%>\n<Force Element Time Rate: 100%>\n<Force Element Chaos Rate: 100%>","overlay":0,"priority":10,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":75,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":14,"dataId":71,"value":1},{"code":14,"dataId":72,"value":1},{"code":14,"dataId":73,"value":1},{"code":14,"dataId":74,"value":1},{"code":14,"dataId":76,"value":1},{"code":14,"dataId":77,"value":1},{"code":14,"dataId":78,"value":1},{"code":14,"dataId":79,"value":1},{"code":14,"dataId":80,"value":1}],"iconIndex":68,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Earth Attunement","note":"<Category: Attune>\n<State Animation: 183>\n<Help Description>\nUnit's \\c[4]Elemental Resistances\\c[0] will match the \\earth \\c[4]Element\\c[0]\n</Help Description>\n\n<Force Element Earth Rate: -100%>\n<Force Element Air Rate: 200%>\n<Force Element Water Rate: 200%>\n<Force Element Volt Rate: 50%>\n<Force Element Ice Rate: 50%>\n<Force Element Fire Rate: 100%>\n<Force Element Holy Rate: 100%>\n<Force Element Dark Rate: 100%>\n<Force Element Time Rate: 100%>\n<Force Element Chaos Rate: 100%>","overlay":0,"priority":10,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":76,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":14,"dataId":71,"value":1},{"code":14,"dataId":72,"value":1},{"code":14,"dataId":73,"value":1},{"code":14,"dataId":74,"value":1},{"code":14,"dataId":75,"value":1},{"code":14,"dataId":77,"value":1},{"code":14,"dataId":78,"value":1},{"code":14,"dataId":79,"value":1},{"code":14,"dataId":80,"value":1}],"iconIndex":69,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Air Attunement","note":"<Category: Attune>\n<State Animation: 184>\n<Help Description>\nUnit's \\c[4]Elemental Resistances\\c[0] will match the \\air \\c[4]Element\\c[0]\n</Help Description>\n\n<Force Element Air Rate: -100%>\n<Force Element Ice Rate: 200%>\n<Force Element Volt Rate: 200%>\n<Force Element Earth Rate: 50%>\n<Force Element Fire Rate: 50%>\n<Force Element Water Rate: 100%>\n<Force Element Holy Rate: 100%>\n<Force Element Dark Rate: 100%>\n<Force Element Time Rate: 100%>\n<Force Element Chaos Rate: 100%>","overlay":0,"priority":10,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":77,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":14,"dataId":71,"value":1},{"code":14,"dataId":72,"value":1},{"code":14,"dataId":73,"value":1},{"code":14,"dataId":74,"value":1},{"code":14,"dataId":75,"value":1},{"code":14,"dataId":76,"value":1},{"code":14,"dataId":78,"value":1},{"code":14,"dataId":79,"value":1},{"code":14,"dataId":80,"value":1}],"iconIndex":70,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Holy Attunement","note":"<Category: Attune>\n<State Animation: 185>\n<Help Description>\nUnit's \\c[4]Elemental Resistances\\c[0] will match the \\holy \\c[4]Element\\c[0]\n</Help Description>\n\n<Force Element Fire Rate: 100%>\n<Force Element Ice Rate: 100%>\n<Force Element Volt Rate: 100%>\n<Force Element Water Rate: 100%>\n<Force Element Earth Rate: 100%>\n<Force Element Air Rate: 100%>\n<Force Element Holy Rate: -100%>\n<Force Element Dark Rate: 200%>\n<Force Element Time Rate: 50%>\n<Force Element Chaos Rate: 150%>","overlay":0,"priority":10,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":78,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":14,"dataId":71,"value":1},{"code":14,"dataId":72,"value":1},{"code":14,"dataId":73,"value":1},{"code":14,"dataId":74,"value":1},{"code":14,"dataId":75,"value":1},{"code":14,"dataId":76,"value":1},{"code":14,"dataId":77,"value":1},{"code":14,"dataId":79,"value":1},{"code":14,"dataId":80,"value":1}],"iconIndex":71,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Dark Attunement","note":"<Category: Attune>\n<State Animation: 186>\n<Help Description>\nUnit's \\c[4]Elemental Resistances\\c[0] will match the \\dark \\c[4]Element\\c[0]\n</Help Description>\n\n<Force Element Fire Rate: 100%>\n<Force Element Ice Rate: 100%>\n<Force Element Volt Rate: 100%>\n<Force Element Water Rate: 100%>\n<Force Element Earth Rate: 100%>\n<Force Element Air Rate: 100%>\n<Force Element Holy Rate: 200%>\n<Force Element Dark Rate: -100%>\n<Force Element Time Rate: 150%>\n<Force Element Chaos Rate: 50%>","overlay":0,"priority":10,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":79,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":14,"dataId":71,"value":1},{"code":14,"dataId":72,"value":1},{"code":14,"dataId":73,"value":1},{"code":14,"dataId":74,"value":1},{"code":14,"dataId":75,"value":1},{"code":14,"dataId":76,"value":1},{"code":14,"dataId":77,"value":1},{"code":14,"dataId":78,"value":1},{"code":14,"dataId":80,"value":1}],"iconIndex":83,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Time Attunement","note":"<Category: Attune>\n<State Animation: 187>\n<Help Description>\nUnit's \\c[4]Elemental Resistances\\c[0] will match the \\time \\c[4]Element\\c[0]\n</Help Description>\n\n<Force Element Fire Rate: 100%>\n<Force Element Ice Rate: 100%>\n<Force Element Volt Rate: 100%>\n<Force Element Water Rate: 100%>\n<Force Element Earth Rate: 100%>\n<Force Element Air Rate: 100%>\n<Force Element Holy Rate: 50%>\n<Force Element Dark Rate: 150%>\n<Force Element Time Rate: -100%>\n<Force Element Chaos Rate: 200%>","overlay":0,"priority":10,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":80,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":14,"dataId":71,"value":1},{"code":14,"dataId":72,"value":1},{"code":14,"dataId":73,"value":1},{"code":14,"dataId":74,"value":1},{"code":14,"dataId":75,"value":1},{"code":14,"dataId":76,"value":1},{"code":14,"dataId":77,"value":1},{"code":14,"dataId":78,"value":1},{"code":14,"dataId":79,"value":1}],"iconIndex":118,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Chaos Attunement","note":"<Category: Attune>\n<State Animation: 188>\n<Help Description>\nUnit's \\c[4]Elemental Resistances\\c[0] will match the \\chaos \\c[4]Element\\c[0]\n</Help Description>\n\n<Force Element Fire Rate: 100%>\n<Force Element Ice Rate: 100%>\n<Force Element Volt Rate: 100%>\n<Force Element Water Rate: 100%>\n<Force Element Earth Rate: 100%>\n<Force Element Air Rate: 100%>\n<Force Element Holy Rate: 150%>\n<Force Element Dark Rate: 50%>\n<Force Element Time Rate: 200%>\n<Force Element Chaos Rate: -100%>","overlay":0,"priority":10,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":81,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":76,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Elemental Exposure","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]5\\c[0] turns, any elemental \\dmg dealt by user will \\c[4]hex\\c[0] target with \\c[4]\\nt[82]\\c[0] for 3 turns; \\c[4]exposed\\c[0] units will receive +10% \\dmg per stack of \\c[4]\\nt[82]\\c[0] up to \\c[4]5\\c[0] stacks\n</Help Description>\n\n<Custom Establish Effect>\nif (this.isHpEffect() && value > 0) {\n  var actionElements = this.getItemElements();\n  var matchingElements = [7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n  var condition = false;\n  for (var i = 0; i < actionElements.length; ++i) {\n    if (matchingElements.contains(actionElements[i])) {\n      condition = true;\n      break;\n    }\n  }\n  if (condition) {\n    var exposedState = 82;\n    target.addState(exposedState);\n  }\n}\n</Custom Establish Effect>","overlay":0,"priority":20,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":82,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":78,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Exposed Weakness","note":"<Category: Hex>\n<Help Description>\nUnit will receive extra damage\n</Help Description>\n\n<Custom Apply Effect>\ntarget._exposedWeakness = target._exposedWeakness || 0;\ntarget._exposedWeakness = Math.min(5, target._exposedWeakness + 1);\nvar counterText = '+' + (target._exposedWeakness * 10) + '%';\ntarget.setStateCounter(stateId, counterText);\n</Custom Apply Effect>\n\n<Custom Remove Effect>\ntarget._exposedWeakness = undefined;\ntarget.removeStateCounter(stateId);\n</Custom Remove Effect>\n\n<Custom React Effect>\nif (this.isHpEffect() && value > 0) {\n  target._exposedWeakness = target._exposedWeakness || 0;\n  var multiplier = 1;\n  multiplier += target._exposedWeakness * 0.10;\n  value *= multiplier;\n  value = Math.ceil(value);\n}\n</Custom React Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":83,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":79,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Promised Guard","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]3\\c[0] turns, delay direct \\dmg and \\c[4]healing\\c[0] until \\c[4]\\nt[83]\\c[0] ends; any delayed \\c[4]healing\\c[0] by \\c[4]Promise Guard\\c[0] is doubled\n</Help Description>\n\n<Physical Taunt>\n<Reapply Ignore Turns>\n\n<Custom Apply Effect>\ntarget._promisedDmg = target._promisedDmg || 0;\n</Custom Apply Effect>\n\n<Custom React Effect>\nif (this.isHpEffect()) {\n  target._promisedDmg = target._promisedDmg || 0;\n  if (value > 0) {\n    target._promisedDmg += value;\n  } else {\n    target._promisedDmg += value * 2;\n  }\n  value = 0;\n}\n</Custom React Effect>\n\n<Custom Remove Effect>\ntarget._promisedDmg = target._promisedDmg || 0;\nif (target._promisedDmg > 0) {\n  target.startAnimation(11);\n} else {\n  target.startAnimation(41);\n}\ntarget.gainHp(-target._promisedDmg);\ntarget.startDamagePopup();\ntarget.clearResult();\nif (target.isDead()) {\n  target.performCollapse();\n}\ntarget._promisedDmg = undefined;\n</Custom Remove Effect>","overlay":0,"priority":60,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":84,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":72,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Mending","note":"<Category: Enchant>\n<Category: Upkeep>\n<Help Description>\nCaster Maintenance: \\c[4]1 MP Upkeep\\c[0]; Mended unit regenerates \\c[4]HP\\c[0] based on the caster's \\c[4]RES\\c[0]\n</Help Description>\n\n<Custom Regenerate Effect>\nvar mpUpkeep = 1;\nif (origin.isAlive() && origin.mp >= mpUpkeep) {\n  origin.gainMp(-mpUpkeep);\n  origin.startDamagePopup();\n  origin.clearResult();\n  var regen = origin.mdf;\n  user.gainHp(regen);\n  user.startDamagePopup();\n  user.clearResult();\n} else {\n  user.removeState(stateId);\n}\n</Custom Regenerate Effect>","overlay":0,"priority":11,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":85,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":1624,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"First Aid","note":"<Help Description>\nStacks \\c[4]50%\\c[0] user's \\c[4]RES\\c[0] as \\c[4]First Aid\\c[0]; for \\c[4]3\\c[0] turns, affected unit regenerates \\c[4]HP\\c[0] based on \\c[4]First Aid\\c[0] each turn\n</Help Description>\n\n<Custom Apply Effect>\nuser._healingAid = user._healingAid || 0;\nuser._healingAid += Math.ceil(origin.mdf * 0.50);\n</Custom Apply Effect>\n\n<Custom Remove Effect>\nuser._healingAid = 0;\n</Custom Remove Effect>\n\n<Custom Regenerate Effect>\nvar heal = user._healingAid || 0;\nif (heal!== 0) {\n  user.gainHp(heal);\n  user.startDamagePopup();\n  user.clearResult();\n}\n</Custom Regenerate Effect>","overlay":0,"priority":11,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":86,"autoRemovalTiming":1,"chanceByDamage":100,"traits":[],"iconIndex":74,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Disruption Stance","note":"<Category: Stance>\n<Help Description>\nFor \\c[4]5\\c[0] actions, when user deals \\phys \\dmg, user will apply a random \\debuff to target for \\c[4]5\\c[0] turns\n</Help Description>\n\n<Custom Establish Effect>\nif (target.isAlive() && this.isPhysical() && value > 0) {\n  var paramId = Math.floor(Math.random() * 8);\n  var chance = target.debuffRate(paramId);\n  if (Math.random() < chance) {\n    target.addDebuff(paramId, 5);\n    target.startAnimation(2);\n  }\n}\n</Custom Establish Effect>","overlay":0,"priority":60,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":87,"autoRemovalTiming":1,"chanceByDamage":100,"traits":[],"iconIndex":77,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Punishment Stance","note":"<Category: Stance>\n<Help Description>\nFor \\c[4]5\\c[0] actions, when user deals \\phys \\dmg, increase \\dmg +15% for each \\debuff target has\n</Help Description>\n\n<Custom Confirm Effect>\nif (this.isPhysical() && value > 0) {\n  var rate = 1.00;\n  for (var i = 0; i < 8; ++i) {\n    if (target.isDebuffAffected(i)) {\n      rate += 0.15;\n    }\n  }\n  value = Math.floor(rate * value);\n}\n</Custom Confirm Effect>","overlay":0,"priority":60,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":88,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"----------","note":"","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":89,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":21,"dataId":0,"value":0.9}],"iconIndex":1600,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":1,"name":"Gaping Wound","note":"<Category: Injury>\n<Category: Bypass Death Removal>\n<Help Description>\nUnit's \\c[4]MaxHP\\c[0] is lowered \\c[4]-10%\\c[0]\n</Help Description>\n\n","overlay":0,"priority":1,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":90,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":21,"dataId":1,"value":0.9}],"iconIndex":1601,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":1,"name":"Concussion","note":"<Category: Injury>\n<Category: Bypass Death Removal>\n<Help Description>\nUnit's \\c[4]MaxMP\\c[0] is lowered \\c[4]-10%\\c[0]\n</Help Description>\n\n","overlay":0,"priority":1,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":91,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":21,"dataId":2,"value":0.9}],"iconIndex":1602,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":1,"name":"Fractured Arm","note":"<Category: Injury>\n<Category: Bypass Death Removal>\n<Help Description>\nUnit's \\c[4]ATK\\c[0] is lowered \\c[4]-10%\\c[0]\n</Help Description>\n\n","overlay":0,"priority":1,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":92,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":21,"dataId":3,"value":0.9}],"iconIndex":1603,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":1,"name":"Broken Ribs","note":"<Category: Injury>\n<Category: Bypass Death Removal>\n<Help Description>\nUnit's \\c[4]DEF\\c[0] is lowered \\c[4]-10%\\c[0]\n</Help Description>\n\n","overlay":0,"priority":1,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":93,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":21,"dataId":4,"value":0.9}],"iconIndex":1604,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":1,"name":"Cracked Skull","note":"<Category: Injury>\n<Category: Bypass Death Removal>\n<Help Description>\nUnit's \\c[4]INT\\c[0] is lowered \\c[4]-10%\\c[0]\n</Help Description>\n\n","overlay":0,"priority":1,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":94,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":21,"dataId":5,"value":0.9}],"iconIndex":1605,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":1,"name":"Bruised Abdomen","note":"<Category: Injury>\n<Category: Bypass Death Removal>\n<Help Description>\nUnit's \\c[4]RES\\c[0] is lowered \\c[4]-10%\\c[0]\n</Help Description>\n\n","overlay":0,"priority":1,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":95,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":21,"dataId":6,"value":0.9}],"iconIndex":1606,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":1,"name":"Sprained Ankle","note":"<Category: Injury>\n<Category: Bypass Death Removal>\n<Help Description>\nUnit's \\c[4]AGI\\c[0] is lowered \\c[4]-10%\\c[0]\n</Help Description>\n\n","overlay":0,"priority":1,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":96,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":21,"dataId":7,"value":0.9}],"iconIndex":1607,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":1,"name":"Slashed Back","note":"<Category: Injury>\n<Category: Bypass Death Removal>\n<Help Description>\nUnit's \\c[4]LUK\\c[0] is lowered \\c[4]-10%\\c[0]\n</Help Description>\n\n","overlay":0,"priority":1,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":97,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":22,"dataId":0,"value":-0.1}],"iconIndex":1608,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":1,"name":"Damaged Eye","note":"<Category: Injury>\n<Category: Bypass Death Removal>\n<Help Description>\nUnit's \\c[4]accuracy\\c[0] is lowered \\c[4]-10%\\c[0]\n</Help Description>\n\n","overlay":0,"priority":1,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":98,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":1609,"maxTurns":1,"message1":"","message2":"","message3":"'s arm begins hurting!","message4":"","minTurns":1,"motion":1,"name":"Twisted Arm","note":"<Category: Injury>\n<Category: Bypass Death Removal>\n<Help Description>\nUnit cannot use instant actions and has a \\c[4]10%\\c[0] chance to fail a physical action\n</Help Description>\n\n<Cancel Instant Skill: 1 to 2000>\n<Cancel Instant Item: 1 to 2000>\n\n<Custom Action Start Effect>\nif (user.currentAction() && user.currentAction().isPhysical()) {\nvar paralyzeRate = 0.10;\n  if (Math.random() < paralyzeRate) {\n    user.startAnimation(64);\n    user.useItem(user.currentAction().item());\n    user.clearActions();\n    var logWindow = SceneManager._scene._logWindow;\n    if (state.message3) {\n      var msg = '<CENTER>' + user.name() + state.message3;\n      logWindow.addText(msg);\n    }\n    BattleManager.actionWaitForAnimation();\n    logWindow.push('clear');\n  }\n}\n</Custom Action Start Effect>","overlay":0,"priority":1,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":99,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":1613,"maxTurns":1,"message1":"","message2":"","message3":"'s throat begins hurting!","message4":"","minTurns":1,"motion":1,"name":"Torn Jugular","note":"<Category: Injury>\n<Category: Bypass Death Removal>\n<Help Description>\nUnit cannot use instant actions and has a \\c[4]10%\\c[0] chance to fail a magical action\n</Help Description>\n\n<Cancel Instant Skill: 1 to 2000>\n<Cancel Instant Item: 1 to 2000>\n\n<Custom Action Start Effect>\nif (user.currentAction() && user.currentAction().isMagical()) {\nvar paralyzeRate = 0.10;\n  if (Math.random() < paralyzeRate) {\n    user.startAnimation(61);\n    user.useItem(user.currentAction().item());\n    user.clearActions();\n    var logWindow = SceneManager._scene._logWindow;\n    if (state.message3) {\n      var msg = '<CENTER>' + user.name() + state.message3;\n      logWindow.addText(msg);\n    }\n    BattleManager.actionWaitForAnimation();\n    logWindow.push('clear');\n  }\n}\n</Custom Action Start Effect>","overlay":0,"priority":1,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":100,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":1610,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":1,"name":"Short Breath","note":"<Category: Injury>\n<Category: Bypass Death Removal>\n<Help Description>\nUnit has a \\c[4]10%\\c[0] chance to be \\c[4]Stunned\\c[0] upon receiving \\c[4]DMG\\c[0]\n</Help Description>\n\n<Custom React Effect>\nif (value > 0) {\n  var stunRate = 0.10;\n  if (Math.random() < stunRate) {\n    target.addState(4);\n    target.startAnimation(2);\n  }\n}\n</Custom React Effect>","overlay":0,"priority":1,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":101,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":1611,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":1,"name":"Wrenched Limb","note":"<Category: Injury>\n<Category: Bypass Death Removal>\n<Help Description>\nAll skills used by unit will have \\c[4]+1 Cooldown\\c[0]\n</Help Description>\n\n<Global Cooldown: +1>","overlay":0,"priority":1,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":102,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":1612,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":1,"name":"Internal Bleeding","note":"<Category: Injury>\n<Category: Bypass Death Removal>\n<Help Description>\nUnit loses \\c[4]-1% HP\\c[0] each turn\n</Help Description>\n\n<Custom Regenerate Effect>\nvar damage = Math.floor(user.mhp * 0.01);\nif (damage !== 0 && user.isAlive()) {\n  user.gainHp(-damage);\n  user.startDamagePopup();\n  user.clearResult();\n}\n</Custom Regenerate Effect>","overlay":0,"priority":1,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":103,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":1614,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":1,"name":"Reactive Trauma","note":"<Category: Injury>\n<Category: Bypass Death Removal>\n<Help Description>\nUnit receives \\c[4]+10% DMG\\c[0] or \\c[4]-10% Healing\\c[0]\n</Help Description>\n\n<Custom React Effect>\nif (value > 0) {\n  value = Math.ceil(value * 1.10);\n} else if (value < 0) {\n  value = Math.floor(value * 0.90);\n}\n</Custom React Effect>","overlay":0,"priority":1,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":104,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":1615,"maxTurns":1,"message1":"","message2":"","message3":" is numb and cannot move!","message4":"","minTurns":1,"motion":1,"name":"Numbness","note":"<Category: Injury>\n<Category: Bypass Death Removal>\n<Help Description>\nUnit cannot use instant actions and has a \\c[4]5%\\c[0] chance to fail any action\n</Help Description>\n\n<Cancel Instant Skill: 1 to 2000>\n<Cancel Instant Item: 1 to 2000>\n\n<Custom Action Start Effect>\nvar paralyzeRate = 0.05;\nif (Math.random() < paralyzeRate) {\n  user.startAnimation(64);\n  if (user.currentAction()) {\n    user.useItem(user.currentAction().item());\n  }\n  user.clearActions();\n  var logWindow = SceneManager._scene._logWindow;\n  if (state.message3) {\n    var msg = '<CENTER>' + user.name() + state.message3;\n    logWindow.addText(msg);\n  }\n  BattleManager.actionWaitForAnimation();\n  logWindow.push('clear');\n}\n</Custom Action Start Effect>","overlay":0,"priority":1,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":105,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"----------","note":"","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":106,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":175,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Spirit Shackles","note":"<Category: Hex>\n<Help Description>\nFor \\c[4]5\\c[0] turns, if unit performs a \\c[4]basic attack\\c[0], unit loses \\c[4]5 MP\\c[0]\n</Help Description>\n\n<Custom Initiate Effect>\nif (this.isAttack()) {\n  var mp = 5;\n  user.gainMp(-mp);\n  user.startDamagePopup();\n  user.clearResult();\n}\n</Custom Initiate Effect>","overlay":0,"priority":40,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":107,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":160,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Healing Link","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]5\\c[0] turns, if unit receives \\c[4]HP Healing\\c[0], then \\heal caster for \\c[4]50%\\c[0] the amount\n</Help Description>\n\n<Custom React Effect>\nif (this.isHpEffect() && value < 0) {\n  var heal = Math.floor(value * 0.5);\n  origin.startAnimation(126);\n  origin.gainHp(-heal);\n  origin.startDamagePopup();\n  origin.clearResult();\n}\n</Custom React Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":108,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":79,"maxTurns":10,"message1":"","message2":"","message3":"","message4":"","minTurns":10,"motion":0,"name":"Magic Guard","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]10\\c[0] turns, when unit receives direct \\c[4]HP DMG\\c[0], \\c[4]50%\\c[0] of it will be shifted to the unit's \\c[4]MP\\c[0] instead; if the unit doesn't have enough \\c[4]MP\\c[0], remove \\c[4]Magic Guard\\c[0]\n</Help Description>\n\n<Custom React Effect>\nif (this.isHpEffect() && value > 0) {\n  var mpDmg = Math.floor(value * 0.50);\n  mpDmg = Math.min(mpDmg, target.mp);\n  target.gainMp(-mpDmg);\n  value -= mpDmg;\n  if (target.mp === 0) {\n    target.removeState(stateId);\n  }\n}\n</Custom React Effect>","overlay":0,"priority":20,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":109,"autoRemovalTiming":1,"chanceByDamage":100,"traits":[{"code":21,"dataId":6,"value":2}],"iconIndex":46,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Sprint","note":"<Category: Stance>\n<Help Description>\nFor \\c[4]1\\c[0] action, unit has \\c[4]200% AGI\\c[0] and \\c[4]+50%\\c[4] \\DMG\n</Help Description>\n\n<Custom Confirm Effect>\nif (this.isHpEffect() && value > 0) {\n  value = Math.floor(value * 1.50);\n}\n</Custom Confirm Effect>\n","overlay":0,"priority":60,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":110,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":26,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Death Mark","note":"<Category: Hex>\n<Help Description>\nFor \\c[4]3\\c[0] turns, store \\c[4]50%\\c[0] of \\dmg dealt by caster to unit while marked; when \\c[4]Death Mark\\c[0] expires, unit receives the stored \\dmg\n</Help Description>\n\n<Custom Apply Effect>\ntarget._deathMarkDmg = 0;\n</Custom Apply Effect>\n\n<Custom Respond Effect>\nif (attacker === origin && this.isHpEffect()) {\n  if (target.result().hpDamage > 0) {\n      target._deathMarkDmg += target.result().hpDamage;\n  }\n}\n</Custom Respond Effect>\n\n<Custom Leave Effect>\ntarget.startAnimation(101);\ntarget.startAnimation(7, false, 20);\ntarget.startAnimation(7, true, 30);\ntarget.startAnimation(7, false, 40);\nvar dmg = Math.round(-0.50 * target._deathMarkDmg);\ntarget.clearResult();\ntarget.gainHp(dmg);\ntarget._deathMarkDmg = 0;\ntarget.startDamagePopup();\ntarget.clearResult();\nif (target.isDead()) {\n  target.performCollapse();\n}\n</Custom Leave Effect>","overlay":0,"priority":60,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":111,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":23,"dataId":0,"value":10}],"iconIndex":132,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Taunt","note":"<Physical Taunt>\n<Help Description>\nFor \\c[4]5\\c[0] turns, foes must target unit with \\phys actions if possible\n</Help Description>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":112,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":167,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Lure","note":"<Magical Taunt>\n<Help Description>\nFor \\c[4]5\\c[0] turns, foes must target unit with \\magic actions if possible\n</Help Description>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":113,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":191,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Challenge","note":"<Help Description>\nFor \\c[4]5\\c[0] turns, any \\c[4]HP \\dmg\\c[0] dealt between unit and challenger is increased \\c[4]+50%\\c[0]\n</Help Description>\n\n<Custom Confirm Effect>\nif (this.isHpEffect() && value > 0) {\n  if (target === origin) {\n    value = Math.ceil(value * 1.50);\n    target.startAnimation(2);\n  }\n}\n</Custom Confirm Effect>\n\n<Custom React Effect>\nif (this.isHpEffect() && value > 0) {\n  if (user === origin) {\n    value = Math.ceil(value * 1.50);\n    target.startAnimation(2);\n  }\n}\n</Custom React Effect>","overlay":0,"priority":90,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":114,"autoRemovalTiming":1,"chanceByDamage":100,"traits":[],"iconIndex":154,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Mincing Minuet","note":"<Category: Stance>\n<Category: Dance>\n<Reapply Ignore Turns>\n<CUSTOM Motion: Victory>\n<Help Description>\nFor \\c[4]3\\c[0] actions, deal \\tier1 \\atk+\\agi \\phys \\dmg to all enemies\n</Help Description>\n\n<Replace Attack: 481>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":1,"stepsToRemove":100},
{"id":115,"autoRemovalTiming":1,"chanceByDamage":100,"traits":[],"iconIndex":154,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Witch Hunt","note":"<Category: Stance>\n<Category: Dance>\n<Reapply Ignore Turns>\n<State Motion: Victory>\n<Help Description>\nFor \\c[4]3\\c[0] actions, deal \\tier1 \\atk+\\agi \\phys \\mp \\dmg to all enemies\n</Help Description>\n\n<Replace Attack: 482>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":1,"stepsToRemove":100},
{"id":116,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":69,"maxTurns":2,"message1":"","message2":"","message3":"","message4":"","minTurns":2,"motion":0,"name":"Jump","note":"<Cannot Select: All>\n<Help Description>\nUser jumps into the air and becomes unselectable. After \\c[4]2\\c[0] turns, deal \\tier2 \\phys \\dmg to target foe\n</Help Description>\n\n<Custom Leave Effect>\nvar skill = 1001;\nvar target = -2;\nuser._isJumping = true;\nBattleManager.queueForceAction(user, skill, target);\n</Custom Leave Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":4,"stepsToRemove":100},
{"id":117,"autoRemovalTiming":1,"chanceByDamage":100,"traits":[],"iconIndex":165,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Poison Tip","note":"\n<Help Description>\nFor \\c[4]3\\c[0] actions, targets \\c[4]physically attacked\\c[0] by user will become \\c[4]Poisoned\\c[0]\n</Help Description>\n\n<Custom Confirm Effect>\nif (this.isPhysical() && this.isHpEffect() && value > 0) {\n  var chance = 1.00;\n  var poison = 37;\n  chance *= target.stateRate(poison);\n  chance *= this.lukEffectRate(target);\n  if (Math.random() < chance) {\n    target.startAnimation(173);\n    target.addState(poison);\n  }\n}\n</Custom Confirm Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":118,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":23,"dataId":4,"value":1.5}],"iconIndex":79,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Heighten Magic","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]5\\c[0] turns, user's skills cost \\c[4]+50%\\c[0] more \\c[4]MP\\c[0] and user deals \\c[4]+50%\\c[0] more \\magic \\dmg\n</Help Description>\n\n<Custom Confirm Effect>\nif (this.isMagical() && value !== 0) {\n  value = Math.ceil(value * 1.50);\n}\n</Custom Confirm Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":119,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":21,"dataId":2,"value":2},{"code":21,"dataId":3,"value":2},{"code":21,"dataId":4,"value":2},{"code":21,"dataId":5,"value":2},{"code":21,"dataId":6,"value":2},{"code":21,"dataId":7,"value":2}],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Berserker Power","note":"<State Animation: 191>\n<Help Description>\nWhile unit has more than \\c[4]80 TP\\c[0], all of units stats are doubled\n</Help Description>\n\n<Custom Passive Condition>\nif ($gameParty.inBattle()) {\n  condition = user.tp >= 80;\n} else {\n  condition = false;\n}\n</Custom Passive Condition>","overlay":0,"priority":95,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":120,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Adapting Armor","note":"<Custom Respond Effect>\nif (target.result().hpDamage > 0) {\n  var elements = this.getItemElements();\n  while (elements.length > 0) {\n    var element = elements.shift();\n    var state = 0;\n    if (element === 7) {\n      state = 121;\n    } else if (element === 8) {\n      state = 122;\n    } else if (element === 9) {\n      state = 123;\n    } else if (element === 10) {\n      state = 124;\n    } else if (element === 11) {\n      state = 125;\n    } else if (element === 12) {\n      state = 126;\n    } else if (element === 13) {\n      state = 127;\n    } else if (element === 14) {\n      state = 128;\n    } else if (element === 15) {\n      state = 129;\n    } else if (element === 16) {\n      state = 130;\n    }\n    if (state) {\n      target.addState(state);\n      target.startAnimation(53);\n    }\n  }\n}\n</Custom Respond Effect>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":121,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":11,"dataId":7,"value":0.75}],"iconIndex":64,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Fire Guard","note":"<Category: Enchant>\n<Help Description>\nUnit receives \\c[4]-25%\\c[0] less \\fire \\c[4]DMG\\c[0]\n</Help Description>","overlay":0,"priority":25,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":122,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":11,"dataId":8,"value":0.75}],"iconIndex":65,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Ice Guard","note":"<Category: Enchant>\n<Help Description>\nUnit receives \\c[4]-25%\\c[0] less \\ice \\c[4]DMG\\c[0]\n</Help Description>","overlay":0,"priority":25,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":123,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":11,"dataId":9,"value":0.75}],"iconIndex":66,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Volt Guard","note":"<Category: Enchant>\n<Help Description>\nUnit receives \\c[4]-25%\\c[0] less \\volt \\c[4]DMG\\c[0]\n</Help Description>","overlay":0,"priority":25,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":124,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":11,"dataId":10,"value":0.75}],"iconIndex":67,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Water Guard","note":"<Category: Enchant>\n<Help Description>\nUnit receives \\c[4]-25%\\c[0] less \\water \\c[4]DMG\\c[0]\n</Help Description>","overlay":0,"priority":25,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":125,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":11,"dataId":11,"value":0.75}],"iconIndex":68,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Earth Guard","note":"<Category: Enchant>\n<Help Description>\nUnit receives \\c[4]-25%\\c[0] less \\earth \\c[4]DMG\\c[0]\n</Help Description>","overlay":0,"priority":25,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":126,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":11,"dataId":12,"value":0.75}],"iconIndex":69,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Air Guard","note":"<Category: Enchant>\n<Help Description>\nUnit receives \\c[4]-25%\\c[0] less \\air \\c[4]DMG\\c[0]\n</Help Description>","overlay":0,"priority":25,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":127,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":11,"dataId":13,"value":0.75}],"iconIndex":70,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Holy Guard","note":"<Category: Enchant>\n<Help Description>\nUnit receives \\c[4]-25%\\c[0] less \\holy \\c[4]DMG\\c[0]\n</Help Description>","overlay":0,"priority":25,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":128,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":11,"dataId":14,"value":0.75}],"iconIndex":71,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Dark Guard","note":"<Category: Enchant>\n<Help Description>\nUnit receives \\c[4]-25%\\c[0] less \\dark \\c[4]DMG\\c[0]\n</Help Description>","overlay":0,"priority":25,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":129,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":11,"dataId":15,"value":0.75}],"iconIndex":83,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Time Guard","note":"<Category: Enchant>\n<Help Description>\nUnit receives \\c[4]-25%\\c[0] less \\time \\c[4]DMG\\c[0]\n</Help Description>","overlay":0,"priority":25,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":130,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":11,"dataId":16,"value":0.75}],"iconIndex":118,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Chaos Guard","note":"<Category: Enchant>\n<Help Description>\nUnit receives \\c[4]-25%\\c[0] less \\chaos \\c[4]DMG\\c[0]\n</Help Description>","overlay":0,"priority":25,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":131,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":68,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Earth Shield","note":"<Category: Enchant>\n<Category: Element Shield>\n<Help Description>\n\\c[4]9\\c[0] charges; if unit takes \\c[4]HP \\dmg\\c[0], unit will \\c[4]Heal HP\\c[0] equal to \\c[4]50%\\c[0] of caster's \\c[4]INT\\c[0] and consume \\c[4]1\\c[0] charge; if unit is \\c[4]Healed\\c[0], increase \\c[4]Heal\\c[0] by \\c[4]+20%\\c[0] and consume \\c[4]1\\c[0] charge\n</Help Description>\n\n<Custom Apply Effect>\ntarget._earthShieldHeal = Math.floor(origin.mat * 0.50);\ntarget.setStateCounter(stateId, 9);\n</Custom Apply Effect>\n\n<Custom Remove Effect>\ntarget._earthShieldHeal = undefined;\ntarget.removeStateCounter(stateId);\n</Custom Remove Effect>\n\n<Custom React Effect>\nif (this.isHpEffect() && value < 0) {\n  value = Math.floor(value * 1.20);\n  target.addStateCounter(stateId, -1);\n  if (target.getStateCounter(stateId) <= 0) {\n    target.removeState(stateId);\n  }\n}\n</Custom React Effect>\n\n<Custom Deselect Effect>\nvar result = JsonEx.makeDeepCopy(target.result());\nif (target.isAlive() && result.hpDamage > 0) {\n  var hpHealed = target._earthShieldHeal || 0;\n  target.gainHp(hpHealed);\n  target.startDamagePopup();\n  target.clearResult();\n  target.addStateCounter(stateId, -1);\n  if (target.getStateCounter(stateId) <= 0) {\n    target.removeState(stateId);\n  }\n  target._result = result;\n}\n</Custom Deselect Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":132,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Critical Protect","note":"<Custom Respond Effect>\nvar crisis = 0.25;\nif ($gameParty.inBattle() && target.isAlive() && target.hpRate() <= crisis && !target._criticalProtect) {\n  target._criticalProtect = true;\n  var turns = 5;\n  target.addBuff(3, turns);\n  target.startAnimation(53);\n}\n</Custom Respond Effect>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":133,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Cyclone Bridge","note":"<Custom Apply Effect>\ntarget._cycloneTimes = target._cycloneTimes || 0;\nvar turns = Math.max(5 - target._cycloneTimes * 2, 1);\ntarget.addState(134);\ntarget.setStateTurns(134, turns);\ntarget._cycloneTimes += 1;\n</Custom Apply Effect>\n\n<Custom Remove Effect>\ntarget._cycloneTimes = undefined;\n</Custom Remove Effect>","overlay":0,"priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":134,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":69,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Cyclone","note":"<Category: Hex>\n<State Animation: 190>\n<Help Description>\nFor up to \\c[4]3\\c[0] turns, unit cannot act; unit gains duration resistance to \\c[4]\\nt[134]\\c[0] for current battle; only one unit can be affected by \\c[4]\\nt[134]\\c[0] at a time\n</Help Description>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":4,"stepsToRemove":100},
{"id":135,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":21,"dataId":2,"value":1.5},{"code":21,"dataId":3,"value":1.5},{"code":21,"dataId":4,"value":1.5},{"code":21,"dataId":5,"value":1.5},{"code":21,"dataId":6,"value":1.5},{"code":21,"dataId":7,"value":1.5}],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Trance","note":"<State Animation: 192>\n<Help Description>\nActivates when unit reaches \\c[4]100 TP\\c[0]; unit's stats are increased \\c[4]+50%\\c[0] while active; each turn, unit loses \\c[4]-10 TP\\c[0]; if unit reaches \\c[4]0 TP\\c[0], deactivate \\c[4]Trance\\c[0]\n</Help Description>\n\n<Custom Passive Condition>\nif ($gameParty.inBattle()) {\n  user._trance = user._trance || false;\n  condition = user._trance || user.tp === user.maxTp();\n} else {\n  condition = false;\n}\nif (condition) {\n  if (!user._trance) {\n    user.startAnimation(120);\n  }\n  user._trance = true;\n}\n</Custom Passive Condition>\n\n<Custom Regenerate Effect>\nvar tp = 10;\nuser.gainTp(-tp);\nif (user.tp === 0) {\n  user._trance = false;\n}\n<Custom Regenerate Effect>","overlay":0,"priority":95,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":136,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":196,"maxTurns":10,"message1":"","message2":"","message3":"","message4":"","minTurns":10,"motion":0,"name":"Combo Attack","note":"<Help Description>\nFor \\c[4]10\\c[0] turns, \\phys \\dmg dealt by unit is increased by \\c[4]+10%\\c[0] per \\c[4]Combo Stack\\c[0]; unit gains \\c[4]+1 \\i[196]Combo Stack\\c[0] each time unit performs a \\phys \\c[4]Action\\c[0] except from actions with \\c[4]Combo\\c[0] in their name\n</Help Description>\n\n<Custom Apply Effect>\nuser._comboStacks = user._comboStacks || 0;\nvar stacks = user._comboStacks.clamp(0, 10);\nuser.setStateCounter(stateId, 'x' + stacks);\n</Custom Apply Effect>\n\n<Custom Remove Effect>\nuser._comboStacks = 0;\nvar stacks = user._comboStacks.clamp(0, 10);\nuser.setStateCounter(stateId, 'x' + stacks);\n</Custom Remove Effect>\n\n<Custom Confirm Effect>\nif (this.isPhysical() && value > 0 && !this.item().name.match('Combo')) {\n  user._comboStacks = user._comboStacks || 0;\n  var stacks = user._comboStacks.clamp(0, 10);\n  var rate = 1.00 + stacks * 0.10;\n  value = Math.ceil(value * rate);\n  stacks += 1;\n  stacks = stacks.clamp(0, 10);\n  user.setStateCounter(stateId, 'x' + stacks);\n  user._comboStacks = stacks;\n}\n</Custom Confirm Effect>","overlay":0,"priority":90,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":137,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":252,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Double Cast","note":"\n<Help Description>\nFor \\c[4]5\\c[0] turns, if unit performs a \\magic \\c[4]Action\\c[0], unit will perform that \\c[4]Action\\c[0] again if unit can pay the cost\n</Help Description>\n\n<Custom Action Start Effect>\nif ($gameTemp._chainAction === undefined) {\n  $gameTemp._chainAction = user.currentAction();\n} else {\n  $gameTemp._chainAction = undefined;\n}\n</Custom Action Start Effect>\n\n<Custom Action End Effect>\nif ($gameTemp._chainAction) {\n  var action = $gameTemp._chainAction;\n  if (action && action.isSkill() && action.isMagical()) {\n    var skill = action.item();\n    if (user.canPaySkillCost(skill)) {\n      if (BattleManager.isDTB()) {\n        user.setAction(0, action);\n      } else {\n        BattleManager.queueForceAction(user, skill.id, -2);\n      }\n    }\n  }\n}\n</Custom Action End Effect>\n\n<Custom Remove Effect>\n$gameTemp._chainAction = undefined;\n</Custom Remove Effect>","overlay":0,"priority":40,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":138,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":43,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Parry Stance","note":"<Category: Stance>\n<Help Description>\nUnit will guard next received \\phys \\c[4]Action\\c[0] and \\debuff the attacker's \\c[4]ATK\\c[0] for \\c[4]5\\c[0] turns\n</Help Description>\n\n<Custom React Effect>\nif (this.isPhysical() && value > 0) {\n  value = 0;\n  user.startAnimation(2);\n  user.addDebuff(2, 5);\n}\n</Custom React Effect>","overlay":0,"priority":60,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":139,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":127,"maxTurns":2,"message1":"","message2":"","message3":"","message4":"","minTurns":2,"motion":0,"name":"Anchor Howl","note":"<Help Description>\nFor \\c[4]2\\c[0] turns, if affected unit attacks a target except the user while the user is in the \\c[4]Front Row\\c[0], user will deal \\tier2 \\c[4]ATK\\c[0]+\\c[4]DEF\\c[0] \\dmg to affected unit\n</Help Description>\n\n<Custom Establish Effect>\nif (this.isDamage() && value > 0 && target !== origin && origin.row() === 1) {\n  var dmg = origin.atk + origin.def;\n  dmg *= 2;\n  user.startAnimation(5);\n  user.gainHp(-dmg);\n  user.startDamagePopup();\n  user.clearResult();\n  if (user.isDead()) {\n    user.performCollapse();\n  }\n}\n</Custom Establish Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":140,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":22,"dataId":6,"value":1}],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Auto-Potion","note":"<Counter Skills: 24>\n<Counter Total: +20>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":141,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":167,"maxTurns":4,"message1":"","message2":"","message3":"","message4":"","minTurns":4,"motion":0,"name":"Living Dead","note":"<Help Description>\nIf unit dies within \\c[4]4\\c[0] turns, unit becomes a \\c[4]Walking Dead\\c[0]: unit's \\c[4]HP\\c[0] can't go below \\c[4]1\\c[0]; if unit didn't receive total \\c[4]healing\\c[0] greater than unit's \\c[4]MaxHP\\c[0] when \\c[4]Walking Dead\\c[0] ends, \\c[4]K.O.\\c[0] this unit\n</Help Description>\n\n<Category: Bypass Death Removal>","overlay":0,"priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":142,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":14,"dataId":1,"value":1}],"iconIndex":71,"maxTurns":4,"message1":"","message2":"","message3":"","message4":"","minTurns":4,"motion":0,"name":"Walking Dead","note":"<Help Description>\nUnit's \\c[4]HP\\c[0] cannot go below \\c[4]1\\c[0]; if unit didn't receive total \\c[4]healing\\c[0] greater than or equal to unit's \\c[4]MaxHP\\c[0] when \\c[4]Walking Dead\\c[0] ends, \\c[4]K.O.\\c[0] this unit\n</Help Description>\n\n<Custom Regenerate Effect>\nif (user.isStateAffected(142)) {\n  if (user.hp <= 0) {\n    user.setHp(1);\n  }\n}\n</Custom Regenerate Effect>\n\n<Custom Apply Effect>\nuser._walkingDeadHp = user.mhp;\nuser._walkingDeadFailed = false;\nuser.startAnimation(65);\n</Custom Apply Effect>\n\n<Custom Remove Effect>\nif (user._walkingDeadHp === undefined) {\n  user._walkingDeadHp = user.mhp;\n}\nif (user._walkingDeadHp > 0) {\n  user._walkingDeadFailed = true;\n  user.setHp(0);\n}\n</Custom Remove Effect>\n\n<Custom Respond Effect>\nif (target.result().hpDamage < 0) {\n  target._walkingDeadHp += target.result().hpDamage;\n}\nif (target.hp <= 0) {\n  target.setHp(1);\n}\n</Custom Respond Effect>","overlay":0,"priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":143,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":171,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Shared Flesh","note":"<Category: Hex>\n<Help Description>\nFor \\c[4]5\\c[0] turns, if unit receives \\phys \\dmg, that \\dmg is split amongst that unit's allies that are affected by \\c[4]Shared Flesh\\c[0]\n</Help Description>\n\n<Custom React Effect>\nif (value > 0 && this.isPhysical()) {\n  var members = target.friendsUnit().aliveMembers();\n  var affected = [];\n  for (var i = 0; i < members.length; ++i) {\n    var member = members[i];\n    if (member && member.isStateAffected(91)) {\n      affected.push(member);\n    }\n  }\n  value = Math.ceil(value / affected.length);\n  for (var i = 0; i < affected.length; ++i) {\n    var member = affected[i];\n    if (member !== target) {\n      member.startAnimation(12);\n      member.gainHp(-value);\n      member.startDamagePopup();\n      member.clearResult();\n      if (member.isDead()) {\n        member.performCollapse();\n      }\n    }\n  }\n}\n</Custom React Effect>","overlay":0,"priority":80,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":144,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":174,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Shared Mind","note":"<Category: Hex>\n<Help Description>\nFor \\c[4]5\\c[0] turns, if unit receives \\magic \\dmg, that \\dmg is split amongst that unit's allies that are affected by \\c[4]Shared Mind\\c[0]\n</Help Description>\n\n<Custom React Effect>\nif (value > 0 && this.isMagical()) {\n  var members = target.friendsUnit().aliveMembers();\n  var affected = [];\n  for (var i = 0; i < members.length; ++i) {\n    var member = members[i];\n    if (member && member.isStateAffected(91)) {\n      affected.push(member);\n    }\n  }\n  value = Math.ceil(value / affected.length);\n  for (var i = 0; i < affected.length; ++i) {\n    var member = affected[i];\n    if (member !== target) {\n      member.startAnimation(12);\n      member.gainHp(-value);\n      member.startDamagePopup();\n      member.clearResult();\n      if (member.isDead()) {\n        member.performCollapse();\n      }\n    }\n  }\n}\n</Custom React Effect>","overlay":0,"priority":80,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":145,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Bloodthirster","note":"<Custom Confirm Effect>\nuser._confirmHp = user.hp;\n</Custom Confirm Effect>\n\n<Custom Establish Effect>\nif (value > 0 && this.isHpEffect() && this.isPhysical()) {\n  if (user.hp === user.mhp) {\n    var result = user.result();\n    var overheal = -1 * result.hpDamage + user._confirmHp - user.mhp;\n    if (overheal > 0) {\n      user.gainBarrier(overheal, 2);\n    }\n  }\n}\n</Custom Establish Effect>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":146,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Cool Breeze","note":"<Custom Victory Effect>\nvar rate = 0.08;\nvar value = Math.ceil(user.mhp * rate);\nuser.gainHp(value);\nvar rate = 0.08;\nvar value = Math.ceil(user.mmp * rate);\nuser.gainMp(value);\n</Custom Victory Effect>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":147,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Victory Cry","note":"<Custom Victory Effect>\nvar rate = 0.50;\nvar value = Math.ceil(user.mhp * rate);\nuser.gainHp(value);\nvar rate = 0.50;\nvar value = Math.ceil(user.mmp * rate);\nuser.gainMp(value);\n</Custom Victory Effect>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":148,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Full Victory Cry","note":"<Custom Victory Effect>\nvar rate = 1.00;\nvar value = Math.ceil(user.mhp * rate);\nuser.gainHp(value);\nvar rate = 1.00;\nvar value = Math.ceil(user.mmp * rate);\nuser.gainMp(value);\n</Custom Victory Effect>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":149,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Thornmail","note":"<Custom React Effect>\nif (value > 0 && this.isPhysical()) {\n  var rate = 0.15;\n  var recoil = value * rate;\n  var rate = 0.25;\n  var bonus = target.def * rate;\n  var dmg = Math.ceil(bonus + recoil);\n  user.gainHp(-1 * dmg);\n  if (user.isDead()) {\n    user.performCollapse();\n  }\n}\n</Custom React Effect>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":150,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":72,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Healing Fate","note":"<Category: Enchant>\n<Help Description>\nWhen unit receives more than \\c[4]20% MaxHP total DMG\\c[0], remove \\c[4]Healing Fate\\c[0] and heal caster's teammates for \\tier1 \\healing\n</Help Description>\n\n<Custom Apply Effect>\ntarget._healingFateDmg = 0;\n</Custom Apply Effect>\n\n<Custom Remove Effect>\ntarget._healingFateDmg = 0;\n</Custom Remove Effect>\n\n<Custom Respond Effect>\nif (this.isHpEffect() && target.result().hpDamage > 0) {\n  target._healingFateDmg += target.result().hpDamage;\n  if (target._healingFateDmg >= target.mhp * 0.20) {\n    target.removeState(stateId);\n    var members = origin.friendsUnit().aliveMembers();\n    var hpHealed = origin.mdf * 2;\n    for (var i = 0; i < members.length; ++i) {\n      member = members[i];\n      if (member) {\n        member.gainHp(hpHealed);\n        member.startAnimation(46);\n        member.startDamagePopup();\n        member.clearResult();\n      }\n    }\n  }\n}\n</Custom Respond Effect>","overlay":0,"priority":30,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":151,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":166,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Reverence","note":"<Category: Enchant>\n<Help Description>\nWhen unit spends \\c[4]MP\\c[0] for a skill cost, unit will \\c[4]Heal HP\\c[0] equal to \\c[4]2000%\\c[0] the \\c[4]MP\\c[0] spent\n</Help Description>\n\n<Custom Action Start Effect>\nuser._reverenceMp = user.mp;\n</Custom Action Start Effect>\n\n<Custom Initiate Effect>\nif (user._reverenceMp !== undefined) {\n  var difference = user._reverenceMp - user.mp;\n  if (difference > 0) {\n    var hp = Math.ceil(difference * 20.00);\n    user.gainHp(hp);\n    user.startDamagePopup();\n    user.clearResult();\n  }\n  user._reverenceMp = undefined;\n}\n</Custom Initiate Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":152,"autoRemovalTiming":1,"chanceByDamage":100,"traits":[],"iconIndex":1089,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Overkill","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]1\\c[0] action, unit will deal bonus \\dmg equal to excess \\dmg dealt to last killed enemy\n</Help Description>\n\n<Custom Confirm Effect>\nif (this.isHpEffect() && value > 0) {\n  user._overkillBonus = user._overkillBonus || 0;\n  value += Math.min(value * 5, user._overkillBonus);\n  target.startAnimation(13);\n}\n</Custom Confirm Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":153,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":366,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Black Blood","note":"<Category: Potion>\n<Help Description>\nFor \\c[4]5\\c[0] turns, any attacker that tries to \\c[4]Life Steal\\c[0] from unit will be damaged instead\n</Help Description>\n\n<Guard HP Life Steal>\n\n<Custom Respond Effect>\nif (this.isHpEffect() && target.result().hpDamage) {\n  var type = 'hp';\n  if (this.isPhysical()) {\n    type += 'Physical';\n  } else if (this.isMagical()) {\n    type += 'Magical';\n  } else {\n    type += 'Certain';\n  }\n  var rate = this.getLifeStealRate(target, target.result().hpDamage, 'hp');\n  rate += user.getLifeStealRate(type + 'Rate', target);\n  var flat = this.getLifeStealFlat(target, target.result().hpDamage, 'hp');\n  flat += user.getLifeStealFlat(type + 'Flat', target);\n  var dmg = Math.floor(target.result().hpDamage * rate + flat);\n  if (dmg > 0) {\n  var result = JsonEx.makeDeepCopy(user._result);\n    user.gainHp(-dmg);\n    user.startDamagePopup();\n    user.startAnimation(2);\n    user.clearResult();\n    user._result = result;\n  }\n}\n</Custom Respond Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":154,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":481,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Blood Magic","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]5\\c[0] turns, \\c[4]Dark Magic\\c[0] will use \\hp instead of \\mp for skill costs; \\hp cost is double the base \\mp cost\n</Help Description>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":155,"autoRemovalTiming":1,"chanceByDamage":100,"traits":[],"iconIndex":73,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Cleric Stance","note":"<Category: Stance>\n<Help Description>\nFor \\c[4]5\\c[0] actions, unit will deal \\c[4]+20%\\c[0] \\magic \\dmg, and \\heal \\c[4]-20%\\c[0] less \\c[4]HP\\c[0]\n</Help Description>\n\n<Custom Confirm Effect>\nif (this.isMagical() && this.isHpEffect() && value > 0) {\n  value = Math.ceil(value * 1.20);\n} else if (this.isMagical() && this.isHpEffect() && value < 0) {\n  value = Math.ceil(value * 0.80);\n}\n</Custom Confirm Effect>","overlay":0,"priority":60,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":156,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":13,"maxTurns":3,"message1":" is biding!","message2":" is biding!","message3":"","message4":" releases stored damage!","minTurns":3,"motion":0,"name":"Bide","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]3\\c[0] turns, unit cannot act; When \\c[4]Bide\\c[0] is removed, unit deals \\dmg to all foes equal to the \\c[4]200%\\c[0] \\dmg received while \\c[4]Bide\\c[0] was active\n</Help Description>\n\n<Custom Apply Effect>\nuser._bide = 0;\n</Custom Apply Effect>\n\n<Custom Respond Effect>\nif (target.result().hpDamage > 0) {\n  target._bide += target.result().hpDamage;\n}\n</Custom Respond Effect>\n\n<Custom Remove Effect>\nif ($gameParty.inBattle()) {\n  user.startAnimation(97);\n  var damage = Math.ceil(user._bide * 2);\n  var enemies = user.opponentsUnit().aliveMembers();\n  for (var i = 0; i < enemies.length; ++i) {\n    var enemy = enemies[i];\n    enemy.startAnimation(107);\n    enemy.gainHp(-damage);\n    enemy.startDamagePopup();\n    enemy.clearResult();\n    if (enemy.isDead()) {\n      enemy.performCollapse();\n    }\n  }\n  user._bide = 0;\n}\n</Custom Remove Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":4,"stepsToRemove":100},
{"id":157,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":34,"dataId":0,"value":1}],"iconIndex":13,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Overlimit Level 1","note":"<Help Description>\nFor \\c[4]3\\c[0] turns, user gains \\c[4]+1\\c[0] additional attack to \\c[4]Basic Attacks\\c[0]\n</Help Description>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":158,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":34,"dataId":0,"value":1},{"code":14,"dataId":157,"value":1}],"iconIndex":13,"maxTurns":4,"message1":"","message2":"","message3":"","message4":"","minTurns":4,"motion":0,"name":"Overlimit Level 2","note":"<Help Description>\nFor \\c[4]4\\c[0] turns, user gains \\c[4]+1\\c[0] additional attack to \\c[4]Basic Attacks\\c[0] and \\c[4]Basic Attacks\\c[0] deal \\c[4]+20%\\c[0] \\dmg to foes with \\c[4]Ailments\\c[0]\n</Help Description>\n\n<Custom Confirm Effect>\nif (this.isAttack() && target.isStateCategoryAffected('ailment')) {\n  // Increase damage by +20%\n  value = Math.ceil(value * 1.20);\n}\n</Custom Confirm Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":159,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":34,"dataId":0,"value":1},{"code":23,"dataId":4,"value":0},{"code":14,"dataId":157,"value":1},{"code":14,"dataId":158,"value":1}],"iconIndex":13,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Overlimit Level 3","note":"<Help Description>\nFor \\c[4]5\\c[0] turns, user gains \\c[4]+1\\c[0] additional attack to \\c[4]Basic Attacks\\c[0], \\c[4]Basic Attacks\\c[0] deal \\c[4]+20%\\c[0] \\dmg to foes with \\c[4]Ailments\\c[0], and all skills cost \\c[4]0 MP\\c[0]\n</Help Description>\n\n<Custom Confirm Effect>\nif (this.isAttack() && target.isStateCategoryAffected('ailment')) {\n  // Increase damage by +20%\n  value = Math.ceil(value * 1.20);\n}\n</Custom Confirm Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":160,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":34,"dataId":0,"value":1},{"code":23,"dataId":4,"value":0},{"code":14,"dataId":157,"value":1},{"code":14,"dataId":158,"value":1},{"code":14,"dataId":159,"value":1}],"iconIndex":13,"maxTurns":6,"message1":"","message2":"","message3":"","message4":"","minTurns":6,"motion":0,"name":"Overlimit Level 4","note":"<Help Description>\nFor \\c[4]6\\c[0] turns, unit gains \\c[4]+1\\c[0] additional attack to \\c[4]Basic Attacks\\c[0], \\c[4]Basic Attacks\\c[0] deal \\c[4]+20%\\c[0] \\dmg to foes with \\c[4]Ailments\\c[0], all skills cost \\c[4]0 MP\\c[0], and unit receives \\c[4]0 Direct DMG\\c[0]\n</Help Description>\n\n<Custom Confirm Effect>\nif (this.isAttack() && target.isStateCategoryAffected('ailment')) {\n  // Increase damage by +20%\n  value = Math.ceil(value * 1.20);\n}\n</Custom Confirm Effect>\n\n<Custom React Effect>\nif (this.isHpEffect() && value > 0) {\n  value = 0;\n}\n</Custom React Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":161,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Damage Stagger","note":"<Custom React Effect>\nif (this.isPhysical() && this.isHpEffect() && value > 0) {\n  target._staggerDmg = target._staggerDmg || 0;\n  var reduce = Math.ceil(value * 0.35);\n  value -= reduce;\n  target.addState(162);\n  target._staggerDmg += reduce;\n}\n</Custom React Effect>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":162,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":170,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Staggered Damage","note":"<Help Description>\nFor \\c[4]3\\c[0] turns, unit will take \\c[4]Staggered DMG\\c[0] equal to \\c[4]35%\\c[0] of received direct \\phys \\dmg across the duration of \\c[4]Staggered Damage\\c[0]\n</Help Description>\n\n<Custom Regenerate Effect>\nuser._staggerDmg = user._staggerDmg || 0;\nif (user.isAlive() && user._staggerDmg > 0) {\n  var turns = Math.max(1, user.stateTurns(stateId));\n  var dmg = Math.ceil(user._staggerDmg / turns);\n  user._staggerDmg -= dmg;\n  user.gainHp(-dmg);\n  user.startAnimation(2);\n  user.startDamagePopup();\n  user.clearResult();\n  if (user.isDead()) {\n    user.performCollapse();\n  }\n}\n</Custom Regenerate Effect>\n\n<Custom Remove Effect>\nuser._staggerDmg = 0;\n</Custom Remove Effect>","overlay":0,"priority":30,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":163,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Echo of Light Passive","note":"<Custom Establish Effect>\nif (this.isHpEffect() && target.result().hpDamage < 0 && target.isAlive()) {\n  target.addState(164);\n  var healing = Math.abs(Math.ceil(target.result().hpDamage * 0.20));\n  target._echoHealing = target._echoHealing || 0;\n  target._echoHealing += healing;\n}\n</Custom Establish Effect>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":164,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":72,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Echo Healing","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]3\\c[0] turns, unit receive \\c[4]HP Regeneration\\c[0] equal to \\c[4]20%\\c[0] of direct \\c[4]Healing\\c[0] done by a caster with \\c[4]Echo of Light\\c[0] across the duration of \\c[4]Echo Healing\\c[0]\n</Help Description>\n\n<Custom Regenerate Effect>\nuser._echoHealing = user._echoHealing || 0;\nif (user.isAlive() && user._echoHealing > 0) {\n  var turns = Math.max(1, user.stateTurns(stateId));\n  var dmg = Math.ceil(user._echoHealing / turns);\n  user._echoHealing -= dmg;\n  user.gainHp(dmg);\n  user.startAnimation(45);\n  user.startDamagePopup();\n  user.clearResult();\n  if (user.isDead()) {\n    user.performCollapse();\n  }\n}\n</Custom Regenerate Effect>\n\n<Custom Remove Effect>\nuser._echoHealing = 0;\n</Custom Remove Effect>","overlay":0,"priority":30,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":165,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Hexdrinker","note":"<Custom Regenerate Effect>\nuser._hexdrinkerCooldown = user._hexdrinkerCooldown || 0;\nif (user._hexdrinkerCooldown > 0) {\n  user._hexdrinkerCooldown -= 1;\n}\n</Custom Regenerate Effect>\n\n<Custom Respond Effect>\ntarget._hexdrinkerCooldown = target._hexdrinkerCooldown || 0;\nif (this.isMagical() && target.result().hpDamage > 0 && target.hpRate() <= 0.30 && target.hp >= 0 && target._hexdrinkerCooldown <= 0) {\n  var barrier = 250;\n  var turns = 3;\n  target.gainBarrier(barrier, turns);\n  target._hexdrinkerCooldown = 5;\n  target.startAnimation(53);\n}\n</Custom Respond Effect>","overlay":0,"priority":99,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":166,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Second Chance","note":"<Help Description>\nUser will survive a fatal attack with \\c[4]1 HP\\c[0] remaining if user has more than \\c[4]1 HP\\c[0] prior to receiving \\dmg\n</Help Description>\n\n<Custom React Effect>\nif ($gameParty.inBattle()) {\n  target._secondChance = target.hp > 1;\n}\n</Custom React Effect>\n\n<Custom Respond Effect>\nif ($gameParty.inBattle() && target._secondChance && target.hp <= 0) {\n  target.startAnimation(49);\n  target.setHp(1);\n}\n</Custom Respond Effect>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":167,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Warmog's Armor","note":"<Custom Passive Condition>\ncondition = user.mhp >= 3000;\n</Custom Passive Condition>\n\n<Custom Respond Effect>\nif (target.result().hpDamage > 0) {\n  target._warmogTurns = 0;\n}\n</Custom Respond Effect>\n\n<Custom Regenerate Effect>\nuser._warmogTurns = user._warmogTurns || 0;\nuser._warmogTurns += 1;\nif (user._warmogTurns >= 3) {\n  var rate = 0.15;\n  var value = Math.ceil(rate * user.mhp);\n  user.gainHp(value);\n}\n</Custom Regenerate Effect>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":168,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":10,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Unstable Affliction","note":"<Category: Hex>\n<Help Description>\nFor \\c[4]5\\c[0] turns, unit takes \\c[4]Dark\\c[0] \\magic \\dmg each turn; if \\c[4]Unstable Affliction\\c[0] is removed, removing unit will take \\c[4]Dark\\c[0] \\magic \\dmg and is afflicted with \\c[4]\\it[46]\\c[0]\n</Help Description>\n\n<Custom Regenerate Effect>\nvar elementId = 14;\nvar damage = origin.mat;\ndamage *= user.elementRate(elementId);\ndamage = Math.floor(damage);\nuser.gainHp(-damage);\n</Custom Regenerate Effect>\n\n<Custom Remove Effect>\nvar dispeller = BattleManager._subject;\nvar notLeaveEffect = !$gameTemp._customLeaveEffectEval;\nif (dispeller && notLeaveEffect) {\n  var stateId = 46;\n  var elementId = 14;\n  var damage = origin.mat;\n  damage *= 3;\n  damage *= dispeller.elementRate(elementId);\n  dispeller.startAnimation(102);\n  dispeller.addState(stateId);\n  dispeller.gainHp(-damage);\n  dispeller.startDamagePopup();\n  if (dispeller.isDead()) {\n    dispeller.performCollapse();\n  }\n  dispeller.clearResult();\n}\n</Custom Remove Effect>","overlay":9,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":169,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":175,"maxTurns":10,"message1":"","message2":"","message3":"","message4":"","minTurns":10,"motion":0,"name":"Distortion","note":"<Category: Hex>\n<Help Description>\nFor \\c[4]10\\c[0] turns, unit is unselectable; when \\c[4]Distortion\\c[0] expires, unit takes \\tier6 \\magic \\c[4]Armor-Ignoring\\c[0] \\dmg\n</Help Description>\n<State Animation: 193>\n<Cannot Select: All>\n\n<Custom Apply Effect>\nvar members = target.friendsUnit().aliveMembers();\nvar length = members.length;\nif (length <= 1) {\n  target.setStateTurns(stateId, 5);\n}\n</Custom Apply Effect>\n\n<Custom Leave Effect>\ntarget.startAnimation(169);\nvar dmg = origin.mat * 12;\ndmg = Math.ceil(dmg);\ntarget.gainHp(-dmg);\ntarget.startDamagePopup();\nif (target.isDead()) {\n  target.performCollapse();\n}\ntarget.clearResult();\n</Custom Leave Effect>\n\n<Custom Regenerate Effect>\nvar turns = target.stateTurns(stateId) - 1;\nvar aniId = 200 + turns;\nvar mirror = target.isActor();\ntarget.startAnimation(aniId, mirror);\n</Custom Regenerate Effect>","overlay":0,"priority":99,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":170,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":417,"maxTurns":10,"message1":"","message2":"","message3":"","message4":"","minTurns":10,"motion":0,"name":"Blood Leech","note":"<Category: Hex>\n<Help Description>\nFor \\c[4]10\\c[0] turns, the caster will absorb \\c[4]⅒\\c[0] of unit's current \\c[4]HP\\c[0]; caster cannot absorb more than \\c[4]20%\\c[0] of caster's \\c[4]MaxHP\\c[0] at a time\n</Help Description>\n\n<Custom Regenerate Effect>\nif (origin !== target && origin.isAlive()) {\n  var damage = target.hp / 10;\n  damage = Math.min(origin.mhp * 0.25, damage);\n  damage = Math.ceil(damage);\n  origin.startAnimation(46);\n  origin.gainHp(damage);\n  origin.startDamagePopup();\n  origin.clearResult();\n  target.startAnimation(58);\n  target.gainHp(-damage);\n  target.startDamagePopup();\n  if (target.isDead()) {\n    target.performCollapse();\n  }\n  target.clearResult();\n}\n</Custom Regenerate Effect>","overlay":0,"priority":30,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":171,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":517,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Biotic Blast","note":"<Category: Hex>\n<Category: Enchant>\n<Help Description>\nFor \\c[4]3\\c[0] turns, allies receive \\c[4]+100% Direct Healing\\c[0] and foes receive \\c[4]0% Direct Healing\\c[0]\n</Help Description>\n\n<Custom React Effect>\nif (this.isHpEffect() && value < 0) {\n  if (target.isActor() === user.isActor()) {\n    value *= 2;\n  } else {\n    value = 0;\n  }\n}\n</Custom React Effect>","overlay":0,"priority":90,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":172,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Wit's End","note":"<Custom Confirm Effect>\nif (this.isAttack()) {\n  var turns = user.buffTurns(5);\n  turns = Math.max(3, turns);\n  user.addBuff(5, turns);\n  var turns = target.buffTurns(5);\n  turns = Math.max(3, turns);\n  target.addDebuff(5, turns);\n  var damage = (user.mat - target.mdf) * 0.40;\n  damage = Math.ceil(damage);\n  value += Math.max(0, damage);\n  var color = [0, 255, 255, 64];\n  var duration = 8;\n  $gameScreen.startFlash(color, duration);\n}\n</Custom Confirm Effect>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":173,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":76,"maxTurns":2,"message1":"","message2":"","message3":"","message4":"","minTurns":2,"motion":0,"name":"Runic Blade","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]2\\c[0] turns, unit attracts enemy \\c[4]magic\\c[0] and nullify \\magic \\dmg; \\magic \\dmg nullified this way will recover the unit's \\c[4]MP\\c[0] based on the cost of the \\magic \\c[4]action\\c[0]'s cost\n</Help Description>\n\n<Magical Taunt>\n\n<Custom React Effect>\nif (this.isMagical() && this.isHpEffect() && value > 0) {\n  value = 0;\n  if (DataManager.isSkill(this.item())) {\n    var mp = user.skillMpCost(this.item());\n    target.gainMp(mp);\n  }\n  target.startAnimation(58);\n}\n</Custom React Effect>","overlay":0,"priority":100,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":174,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Undead","note":"<Custom React Effect>\nif (this.isHpRecover()) {\n  value = Math.abs(value);\n}\n</Custom React Effect>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":175,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":81,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Disrupt Guard","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]5\\c[0] turns, unit will nullify \\c[4]1 Disrupt\\c[0] skill, then, remove \\c[4]Disrupt Guard\\c[0]\n</Help Description>\n\n<Custom Select Effect>\nif (this.item() && DataManager.isSkill(this.item()) && this.isForOpponent()) {\n  var blockedtypes = [];\n  blockedtypes.push(7);\n  var blockedskills = [];\n  blockedskills.push(249, 250, 251, 252);\n  blockedskills.push(253, 254, 255, 256);\n  if (blockedtypes.contains(this.item().stypeId) || blockedskills.contains(this.item().id)) {\n    this._formerItemSuccessRate = this.item().successRate;\n    this.item().successRate = 0;\n    target.startAnimation(53);\n  }\n}\n</Custom Select Effect>\n\n<Custom Deselect Effect>\nif (this._formerItemSuccessRate !== undefined) {\n  this.item().successRate = this._formerItemSuccessRate;\n  target.removeState(stateId);\n}\n</Custom Deselect Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":176,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":22,"dataId":0,"value":10}],"iconIndex":42,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Power Charge","note":"<Category: Enchant>\n<Help Description>\nUnit's next \\c[4]basic attack\\c[0] has increased \\c[4]accuracy\\c[0] and deals \\c[4]+125%\\c[0] more \\dmg\n</Help Description>\n\n<Custom Action Start Effect>\nvar action = user.currentAction();\nif (action.isPhysical() && action.isAttack() && action.isHpEffect()) {\n  user.startAnimation(2);  \n}\n</Custom Action Start Effect>\n\n<Custom Confirm Effect>\nif (this.isPhysical() && this.isAttack() && this.isHpEffect() && value > 0) {\n  value *= 2.0;\n  value = Math.ceil(value);\n  user.removeState(stateId);\n}\n</Custom Confirm Effect>","overlay":0,"priority":100,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":177,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":44,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Mind Charge","note":"<Category: Enchant>\n<Help Description>\nUnit's next \\c[4]magic attack\\c[0] deals \\c[4]+125%\\c[0] more \\dmg\n</Help Description>\n\n<Custom Action Start Effect>\nvar action = user.currentAction();\nif (action.isMagical() && action.isHpEffect()) {\n  user.startAnimation(2);  \n}\n</Custom Action Start Effect>\n\n<Custom Confirm Effect>\nif (this.isMagical() && this.isHpEffect() && value > 0) {\n  value *= 2.0;\n  value = Math.ceil(value);\n  user.removeState(stateId);\n}\n</Custom Confirm Effect>","overlay":0,"priority":100,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":178,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":172,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Heal Jammer","note":"<Category: Hex>\n<Help Description>\nBlocks up to \\c[4]3,000 HP\\c[0] from being directly healed; \\c[4]Heal Jammer\\c[0] is removed once it runs out\n</Help Description>\n\n<Custom Apply Effect>\ntarget._antiHealBarrier = 3000;\ntarget.setStateCounter(stateId, 3000);\n</Custom Apply Effect>\n\n<Custom Remove Effect>\ntarget._antiHealBarrier = undefined;\ntarget.setStateCounter(stateId, 0);\n</Custom Remove Effect>\n\n<Custom React Effect>\nif (this.isHpEffect() && value < 0) {\n  target._antiHealBarrier = target._antiHealBarrier || 0;\n  var offset = Math.min(target._antiHealBarrier, Math.abs(value));\n  value += offset;\n  target._antiHealBarrier -= offset;\n  target.setStateCounter(stateId, target._antiHealBarrier);\n  if (target._antiHealBarrier <= 0) {\n    target.removeState(stateId);\n  }\n  target.startAnimation(5);\n  var text = '<CENTER>\\\\c[4]\\\\i[' + $dataStates[stateId].iconIndex + ']' + $dataStates[stateId].name + '\\\\c[0] blocked \\\\c[4]\\\\i[' + this.item().iconIndex + ']' + this.item().name + '\\\\c[0] from healing \\\\c[6]' + target.name() + '\\\\c[0]!';\n  var wait = 90;\n  BattleManager.addText(text, wait);\n}\n</Custom React Effect>","overlay":0,"priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":179,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":319,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Light Prism","note":"<Help Description>\nThe number of \\c[4]Light Prisms\\c[0] currently controlled by this unit will affect certain \\c[4]skills\\c[0] differently\n</Help Description>\n\n<Custom Apply Effect>\nuser._LightPrisms = user._LightPrisms || 0;\nuser._LightPrisms += 1;\nuser.setStateCounter(stateId, user._LightPrisms);\n</Custom Apply Effect>\n\n<Custom Remove Effect>\nuser._LightPrisms = 0;\nuser.setStateCounter(stateId, 0);\n</Custom Remove Effect>","overlay":0,"priority":5,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":180,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":14,"dataId":1,"value":1}],"iconIndex":64,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Fiery Wish","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]1\\c[0] turn, unit gains \\c[4]100% All Armor Penetration\\c[0] and cannot be \\ko'd\n</Help Description>\n\n<Physical Armor Penetration: 100%>\n<Magical Armor Penetration: 100%>\n<Certain Armor Penetration: 100%>\n\n<Custom Respond Effect>\nif (target.hp <= 0) {\n  target.setHp(1);\n}\n</Custom Respond Effect>","overlay":0,"priority":25,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":181,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Brilliance Origin","note":"<Category: Aura>\n\n<Ally Aura: 182>\n\n<State Animation: 227>","overlay":0,"priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":182,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":22,"dataId":8,"value":0.1}],"iconIndex":166,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Brilliance Aura","note":"<Category: Aura Effect>\n<Help Description>\nEach turn, unit regenerates \\c[4]10%\\c[0] of \\maxmp\n</Help Description>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":183,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Disruption Origin","note":"<Category: Aura>\n\n<Foe Aura: 184>\n\n<State Animation: 228>","overlay":0,"priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":184,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":21,"dataId":2,"value":0.8},{"code":21,"dataId":3,"value":0.8},{"code":21,"dataId":4,"value":0.8},{"code":21,"dataId":5,"value":0.8},{"code":21,"dataId":6,"value":0.8},{"code":21,"dataId":7,"value":0.8}],"iconIndex":170,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Disruption Aura","note":"<Category: Aura Effect>\n<Help Description>\nUnit's \\atk, \\def, \\int, \\res, \\agi, and \\luk are reduced by \\c[4]-20%\\c[0]\n</Help Description>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":185,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Balancer Origin","note":"<Category: Aura>\n\n<All Aura: 186>\n\n<State Animation: 229>","overlay":0,"priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":186,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":160,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Balancer Aura","note":"<Category: Aura Effect>\n<Help Description>\nUnit becomes neutral to all elements\n</Help Description>\n\n<Force Element Fire Rate: 100%>\n<Force Element Water Rate: 100%>\n<Force Element Air Rate: 100%>\n<Force Element Ice Rate: 100%>\n<Force Element Volt Rate: 100%>\n<Force Element Earth Rate: 100%>\n<Force Element Holy Rate: 100%>\n<Force Element Dark Rate: 100%>\n<Force Element Time Rate: 100%>\n<Force Element Chaos Rate: 100%>","overlay":0,"priority":100,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":187,"autoRemovalTiming":1,"chanceByDamage":100,"traits":[],"iconIndex":166,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Manabank","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]5\\c[0] actions, unit recovers all \\c[4]MP\\c[0] after each action; when \\c[4]Manabank\\c[0] expires, unit's \\c[4]MP\\c[0] goes to \\c[4]0\\c[0] and \\c[4]hex\\c[0] unit with \\it[188] for \\c[4]3\\c[0] turns\n</Help Description>\n\n<Custom Action End Effect>\nuser.startAnimation(45);\nuser.gainMp(user.mmp - user.mp);\nuser.startDamagePopup();\nuser.clearResult();\n</Custom Action End Effect>\n\n<Custom Leave Effect>\nvar ManaNerfID = 188;\nuser.addState(188);\nuser.setMp(0);\nuser.startAnimation(54);\n</Custom Leave Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":188,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":174,"maxTurns":3,"message1":"","message2":"","message3":"","message4":"","minTurns":3,"motion":0,"name":"Mananerf","note":"<Category: Hex>\n<Help Description>\nFor \\c[4]3\\c[0] turns, unit cannot regenerate \\c[4]MP\\c[0]\n</Help Description>\n\n<mrg Rate: 0%>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":189,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":5,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Provoked","note":"<Help Description>\nFor \\c[4]5\\c[0] turns, unit will always attack the provoker\n</Help Description>\n\n<Ignore Physical Taunt>\n<Ignore Magical Taunt>\n<Ignore Certain Taunt>\n\n<Custom Action Start Effect>\nvar action = user.currentAction();\nif (action && action.isForOpponent() && origin.isActor() !== user.isActor()) {\n  action.setTarget(origin.index());\n}\n</Custom Action Start Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":190,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":26,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Doom","note":"<Category: Hex>\n<Help Description>\nAfter \\c[4]5\\c[0] turns, unit will be \\ko'd\n</Help Description>\n\n<Reapply Ignore Turns>\n\n<Custom Regenerate Effect>\nvar turns = target.stateTurns(stateId) - 1;\nvar aniId = 200 + turns;\nvar mirror = target.isActor();\ntarget.startAnimation(aniId, mirror);\n</Custom Regenerate Effect>\n\n<Custom Leave Effect>\nvar deathState = user.deathStateId();\nif (user.stateRate(deathState) > 0.01 && !user.isStateResist(deathState)) {\n  user.startAnimation(65);\n  user.setHp(0);\n  if (user.isDead()) {\n    user.performCollapse();\n  }\n}\n</Custom Leave Effect>","overlay":0,"priority":99,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":191,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Seraphic Armor","note":"<Custom Respond Effect>\nif (target.isAlive() && target.hp > 0) {\n  if (this.isHpEffect() && this.isPhysical() && user.isActor() !== target.isActor()) {\n    var dmg = Math.ceil(target.mat * 0.50);\n    user.gainHp(-dmg);\n    user.startDamagePopup();\n    if (user.isDead()) {\n      user.performCollapse();\n    }\n    user.clearResult();\n    var result = JsonEx.makeDeepCopy(target._result);\n    var heal = Math.ceil(dmg * 0.50);\n    target.gainHp(heal);\n    target.startDamagePopup();\n    target.clearResult();\n    target._result = result;\n  }\n}\n</Custom Respond Effect>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":192,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"----------","note":"<Physical Taunt>\n<Magical Taunt>\n<Certain Taunt>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":193,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":11,"dataId":11,"value":2},{"code":11,"dataId":12,"value":2}],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Factory Zone","note":"<Custom Passive Condition>\nif ($gameParty.inBattle()) {\n  var background1 = ['SF_Factory', 'SF_Factory_Damaged', 'SF_Metal1', 'SF_Metal2', 'SF_Metal2_Damaged', 'SF_MetalLattice'];\n  var background2 = ['SF_Factory', 'SF_Laboratory', 'SF_Metal'];\n  var spriteset = SceneManager._scene._spriteset;\n  if (spriteset) {\n    condition = background1.contains(spriteset.battleback1Name()) && background2.contains(spriteset.battleback2Name());\n  } else {\n    condition = false;\n  }\n} else {\n  condition = false;\n}\n</Custom Passive Condition>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":194,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":11,"dataId":7,"value":2}],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Drylands","note":"<Custom Passive Condition>\nif ($gameParty.inBattle()) {\n  var background1 = ['Dirt1', 'Dirt2', 'Grassmaze', 'Wasteland'];\n  var background2 = ['Grassmaze', 'Wasteland'];\n  var spriteset = SceneManager._scene._spriteset;\n  if (spriteset) {\n    condition = background1.contains(spriteset.battleback1Name()) && background2.contains(spriteset.battleback2Name());\n  } else {\n    condition = false;\n  }\n} else {\n  condition = false;\n}\n</Custom Passive Condition>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":195,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":11,"dataId":7,"value":0.5}],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Map Effect","note":"<Custom Passive Condition>\nvar condition = true;\nif (BattleManager.isBattleTest()) {\n  condition = false;\n} else if ($gameMap && $gameParty.inBattle()) {\n  var activeMaps = [];\n  // Insert the ID's of the maps you want this state to be active on.\n  activeMaps.push(123, 124, 125, 126, 75);\n  activeMaps.push(127, 128, 129, 130);\n\n  var terrainTags = [];\n  // Insert the terrain tags you want this state to be active on.\n  terrainTags.push(0, 1, 2, 3);\n  \n  var regionIds = [];\n  // Insert the region ID's you want this state to be active on.\n  regionIds.push(10, 11, 12, 13, 0);\n  regionIds.push(14, 15, 16, 17);\n\n  if (activeMaps.length > 0) {\n    if (!activeMaps.contains($gameMap.mapId())) {\n      condition = false;\n    }\n  }\n\n  if (terrainTags.length > 0) {\n    if (!terrainTags.contains($gamePlayer.terrainTag())) {\n      condition = false;\n    }\n  }\n\n  if (regionIds.length > 0) {\n    if (!regionIds.contains($gamePlayer.regionId())) {\n      condition = false;\n    }\n  }\n} else {\n  condition = false;\n}\n</Custom Passive Condition>","overlay":0,"priority":100,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":196,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"----------","note":"<Physical Taunt>\n<Magical Taunt>\n<Certain Taunt>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":197,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":10,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Destiny Bond","note":"<Category: Hex>\n<Help Description>\nIf this unit is \\ko'd this turn, the attacker will be \\ko'd, too\n</Help Description>\n\n<Category: Bypass Death Removal>\n\n<Custom Respond Effect>\nif (target.hp <= 0) {\n  target.removeState(stateId);\n  var deathState = user.deathStateId();\n  if (user.stateRate(deathState) > 0.01 && !user.isStateResist(deathState)) {\n    user.startAnimation(65);\n    user.setHp(0);\n    if (user.isDead()) {\n      user.performCollapse();\n    }\n  }\n}\n</Custom Respond Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":198,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":1091,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Statikk Shiv","note":"<Custom Regenerate Effect>\nuser.addStateCounter(stateId, 6);\nuser.clampStateCounter(stateId, 0, 100);\n</Custom Regenerate Effect>\n\n<Custom Confirm Effect>\nif (this.isAttack() && target.isActor() !== user.isActor()) {\n  user.addStateCounter(stateId, 12);\n  user.clampStateCounter(stateId, 0, 100);\n  if (user.getStateCounter(stateId) >= 100) {\n    user.removeStateCounter(stateId);\n    var elementId = 9;\n    var damage = user.mat * 2;\n    if (target.result().critical) {\n      damage = this.applyCritical(damage);\n    }\n    var members = this.opponentsUnit().aliveMembers();\n    members.splice(members.indexOf(target), 1);\n    target.startAnimation(77);\n    value += Math.ceil(damage * target.elementRate(elementId));\n    var extraTargets = 4;\n    while (extraTargets--) {\n      var member = members[Math.floor(Math.random() * members.length)];\n      if (member) {\n        member.startAnimation(77);\n        member.gainHp(-Math.ceil(damage * member.elementRate(elementId)));\n        member.startDamagePopup();\n        member.clearResult();\n        members.splice(members.indexOf(member), 1);\n        if (member.isDead()) {\n          member.performCollapse();\n        }\n      }\n    }\n  }\n}\n</Custom Confirm Effect>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":199,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":70,"maxTurns":10,"message1":" will revive upon dying.","message2":" will revive upon dying.","message3":"","message4":"","minTurns":10,"motion":0,"name":"Reraise","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]10\\c[0] turns, if unit is \\ko'd, then revive unit with \\c[4]10%\\c[0] of unit's \\c[4]MaxHP\\c[0] and remove \\c[4]Reraise\\c[0]\n</Help Description>\n\n<Category: Bypass Death Removal>\n\n<Custom Deselect Effect>\nif (target.hp <= 0 || target.isDead()) {\n  target.startAnimation(49);\n  var rate = 0.10;\n  var heal = Math.floor(target.mhp * rate);\n  target.removeState(stateId);\n  target.gainHp(heal);\n  target.startDamagePopup();\n  target.clearResult();\n}\n</Custom Deselect Effect>","overlay":0,"priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":200,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Critical Hunter","note":"// Critical Bonus\n<Custom Establish Effect>\nif (this.isPhysical() && target.result().hpDamage > 0 && target.result().critical) {\n  var param = 2;\n  var turns = 5;\n  user.addBuff(param, turns);\n  var param = 6;\n  var turns = 5;\n  user.addBuff(param, turns);\n  if (target.isAlive()) {\n    var param = 3;\n    var turns = 5;\n    target.addDebuff(param, turns);\n    var param = 6;\n    var turns = 5;\n    target.addDebuff(param, turns);\n  }\n}\n</Custom Establish Effect>","overlay":0,"priority":99,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":201,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Undo Global","note":"<Custom Battle Effect>\nuser._undoHp0 = user.hp;\nuser._undoHp1 = user.hp;\nuser._undoHp2 = user.hp;\nuser._undoHp3 = user.hp;\nuser._undoMp0 = user.mp;\nuser._undoMp1 = user.mp;\nuser._undoMp2 = user.mp;\nuser._undoMp3 = user.mp;\nuser._undoTp0 = user.tp;\nuser._undoTp1 = user.tp;\nuser._undoTp2 = user.tp;\nuser._undoTp3 = user.tp;\n</Custom Battle Effect>\n\n<Custom Turn End Effect>\nuser._undoHp3 = user._undoHp2;\nuser._undoHp2 = user._undoHp1;\nuser._undoHp1 = user._undoHp0;\nuser._undoHp0 = user.hp;\nuser._undoMp3 = user._undoMp2;\nuser._undoMp2 = user._undoMp1;\nuser._undoMp1 = user._undoMp0;\nuser._undoMp0 = user.mp;\nuser._undoTp3 = user._undoTp2;\nuser._undoTp2 = user._undoTp1;\nuser._undoTp1 = user._undoTp0;\nuser._undoTp0 = user.tp;\n</Custom Turn End Effect>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":202,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":1037,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Undo Deux","note":"<Category: Enchant>\n<Help Description>\nIncrease the time range of all \\c[4]Undo\\c[0] abilities from \\c[4]1\\c[0] turn to \\c[4]2\\c[0] turns\n</Help Description>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":203,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":14,"dataId":201,"value":1}],"iconIndex":1039,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Undo Trois","note":"<Category: Enchant>\n<Help Description>\nIncrease the time range of all \\c[4]Undo\\c[0] abilities from \\c[4]1\\c[0] turn to \\c[4]3\\c[0] turns\n</Help Description>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":204,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":23,"dataId":4,"value":0.5}],"iconIndex":175,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Martyr","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]5\\c[0] turns, unit spends \\c[4]-50%\\c[0] less \\c[4]MP Cost\\c[0]; foes must target unit with \\phys actions if possible\n</Help Description>\n\n<Physical Taunt>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":205,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":354,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Frenzy Virus","note":"<Help Description>\nIf unit receives \\c[4]HP DMG\\c[0] at least \\c[4]5\\c[0] times, this virus becomes a \\c[4]\\it[206]\\c[0]; If unit deals \\c[4]HP DMG\\c[0] at least \\c[4]5\\c[0] times, this virus becomes a \\c[4]\\it[207]\\c[0]\n</Help Description>\n\n<Reapply Ignore Turns>\n\n<Custom Apply Effect>\nuser._frenzyA = 5;\nuser._frenzyB = 5;\n</Custom Apply Effect>\n\n<Custom Remove Effect>\nuser._frenzyA = undefined;\nuser._frenzyB = undefined;\n</Custom Remove Effect>\n\n<Custom Respond Effect>\ntarget._frenzyA = target._frenzyA || 5;\ntarget._frenzyB = target._frenzyB || 5;\nif (target.result().hpDamage > 0) {\n  target._frenzyA -= 1;\n}\nif (target._frenzyA <= 0) {\n  target.removeState(stateId);\n  target.addState(206);\n}\n</Custom Respond Effect>\n\n<Custom Establish Effect>\nuser._frenzyA = user._frenzyA || 5;\nuser._frenzyB = user._frenzyB || 5;\nif (target.result().hpDamage > 0) {\n  user._frenzyB -= 1;\n}\nif (user._frenzyB <= 0) {\n  user.removeState(stateId);\n  user.addState(207);\n}\n</Custom Establish Effect>","overlay":0,"priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":206,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":22,"dataId":7,"value":-0.15},{"code":23,"dataId":2,"value":0.5},{"code":14,"dataId":205,"value":1}],"iconIndex":2,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Venom Virus","note":"<Category: Hex>\n<Help Description>\nFor \\c[4]5\\c[0] turns, unit loses \\c[4]-15% HP\\c[0] each turn and receives \\c[4]-50%\\c[0] less \\c[4]Healing\\c[0]\n</Help Description>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":207,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":22,"dataId":2,"value":0.5},{"code":21,"dataId":7,"value":1.5},{"code":14,"dataId":205,"value":1}],"iconIndex":77,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Booster Virus","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]5\\c[0] turns, unit gains \\c[4]+50% Critical Rate\\c[0] and \\c[4]+50% LUK\\c[0]\n</Help Description>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":208,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":128,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Kyrie's Shield","note":"<Category: Enchant>\n<Help Description>\nBlocks \\c[4]10\\c[0] physical hits for unit or \\c[4]30%\\c[0] of unit's \\c[4]MaxHP\\c[0], then removes itself\n</Help Description>\n\n<Custom Apply Effect>\nuser._KyrieHits = 10;\nuser._KyrieHP = Math.floor(user.mhp * 0.30);\nuser.setStateCounter(stateId, user._KyrieHP);\n</Custom Apply Effect>\n\n<Custom Remove Effect>\nuser._KyrieHits = undefined;\nuser._KyrieHP = undefined;\nuser.setStateCounter(stateId, 0);\n</Custom Remove Effect>\n\n<Custom React Effect>\nif (this.isHpEffect() && value > 0) {\n  target.startAnimation(53);\n  var reduce = Math.min(value, target._KyrieHP);\n  value -= reduce;\n  target._KyrieHP -= reduce;\n  target._KyrieHits -= 1;\n  target.setStateCounter(stateId, target._KyrieHP);\n  var text = \"<CENTER>\" + target.name() + \"'s shield blocks \" + reduce + \" damage and has \" + target._KyrieHits + (target._KyrieHits !== 1 ? \" hits\" : \" hit\") + \" left.\"\n  var wait = 90;\n  BattleManager.addText(text, wait);\n}\nif (target._KyrieHP <= 0 || target._KyrieHits <= 0) {\n  target.removeState(stateId);\n}\n</Custom React Effect>","overlay":0,"priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":209,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"----------","note":"<Physical Taunt>\n<Magical Taunt>\n<Certain Taunt>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":210,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":64,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"EnFire","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]5\\c[0] turns, \\c[4]basic attacks\\c[0] will deal a tiny amount of bonus \\fire \\dmg\n</Help Description>\n\n<Custom Confirm Effect>\nif (this.isHpEffect() && this.isAttack() && this.isPhysical()) {\n  var elementId = 7;\n  var baseDamage = 20;\n  var damage = Math.ceil(target.elementRate(elementId) * baseDamage);\n  var result = JsonEx.makeDeepCopy(target._result);\n  target.clearResult();\n  target.startAnimation(130);\n  target.gainHp(-damage);\n  target.startDamagePopup();\n  if (target.isDead()) {\n    target.performCollapse();\n  }\n  target.clearResult();\n  target._result = result;\n}\n</Custom Confirm Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":211,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":65,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"EnIce","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]5\\c[0] turns, \\c[4]basic attacks\\c[0] will deal a tiny amount of bonus \\ice \\dmg\n</Help Description>\n\n<Custom Confirm Effect>\nif (this.isHpEffect() && this.isAttack() && this.isPhysical()) {\n  var elementId = 8;\n  var baseDamage = 20;\n  var damage = Math.ceil(target.elementRate(elementId) * baseDamage);\n  var result = JsonEx.makeDeepCopy(target._result);\n  target.clearResult();\n  target.startAnimation(134);\n  target.gainHp(-damage);\n  target.startDamagePopup();\n  if (target.isDead()) {\n    target.performCollapse();\n  }\n  target.clearResult();\n  target._result = result;\n}\n</Custom Confirm Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":212,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":66,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"EnThunder","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]5\\c[0] turns, \\c[4]basic attacks\\c[0] will deal a tiny amount of bonus \\volt \\dmg\n</Help Description>\n\n<Custom Confirm Effect>\nif (this.isHpEffect() && this.isAttack() && this.isPhysical()) {\n  var elementId = 9;\n  var baseDamage = 20;\n  var damage = Math.ceil(target.elementRate(elementId) * baseDamage);\n  var result = JsonEx.makeDeepCopy(target._result);\n  target.clearResult();\n  target.startAnimation(138);\n  target.gainHp(-damage);\n  target.startDamagePopup();\n  if (target.isDead()) {\n    target.performCollapse();\n  }\n  target.clearResult();\n  target._result = result;\n}\n</Custom Confirm Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":213,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":67,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"EnWater","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]5\\c[0] turns, \\c[4]basic attacks\\c[0] will deal a tiny amount of bonus \\water \\dmg\n</Help Description>\n\n<Custom Confirm Effect>\nif (this.isHpEffect() && this.isAttack() && this.isPhysical()) {\n  var elementId = 10;\n  var baseDamage = 20;\n  var damage = Math.ceil(target.elementRate(elementId) * baseDamage);\n  var result = JsonEx.makeDeepCopy(target._result);\n  target.clearResult();\n  target.startAnimation(142);\n  target.gainHp(-damage);\n  target.startDamagePopup();\n  if (target.isDead()) {\n    target.performCollapse();\n  }\n  target.clearResult();\n  target._result = result;\n}\n</Custom Confirm Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":214,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":68,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"EnEarth","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]5\\c[0] turns, \\c[4]basic attacks\\c[0] will deal a tiny amount of bonus \\earth \\dmg\n</Help Description>\n\n<Custom Confirm Effect>\nif (this.isHpEffect() && this.isAttack() && this.isPhysical()) {\n  var elementId = 11;\n  var baseDamage = 20;\n  var damage = Math.ceil(target.elementRate(elementId) * baseDamage);\n  var result = JsonEx.makeDeepCopy(target._result);\n  target.clearResult();\n  target.startAnimation(146);\n  target.gainHp(-damage);\n  target.startDamagePopup();\n  if (target.isDead()) {\n    target.performCollapse();\n  }\n  target.clearResult();\n  target._result = result;\n}\n</Custom Confirm Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":215,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":69,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"EnWind","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]5\\c[0] turns, \\c[4]basic attacks\\c[0] will deal a tiny amount of bonus \\air \\dmg\n</Help Description>\n\n<Custom Confirm Effect>\nif (this.isHpEffect() && this.isAttack() && this.isPhysical()) {\n  var elementId = 12;\n  var baseDamage = 20;\n  var damage = Math.ceil(target.elementRate(elementId) * baseDamage);\n  var result = JsonEx.makeDeepCopy(target._result);\n  target.clearResult();\n  target.startAnimation(150);\n  target.gainHp(-damage);\n  target.startDamagePopup();\n  if (target.isDead()) {\n    target.performCollapse();\n  }\n  target.clearResult();\n  target._result = result;\n}\n</Custom Confirm Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":216,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":70,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"EnHoly","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]5\\c[0] turns, \\c[4]basic attacks\\c[0] will deal a tiny amount of bonus \\holy \\dmg\n</Help Description>\n\n<Custom Confirm Effect>\nif (this.isHpEffect() && this.isAttack() && this.isPhysical()) {\n  var elementId = 13;\n  var baseDamage = 20;\n  var damage = Math.ceil(target.elementRate(elementId) * baseDamage);\n  var result = JsonEx.makeDeepCopy(target._result);\n  target.clearResult();\n  target.startAnimation(154);\n  target.gainHp(-damage);\n  target.startDamagePopup();\n  if (target.isDead()) {\n    target.performCollapse();\n  }\n  target.clearResult();\n  target._result = result;\n}\n</Custom Confirm Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":217,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":71,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"EnDark","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]5\\c[0] turns, \\c[4]basic attacks\\c[0] will deal a tiny amount of bonus \\dark \\dmg\n</Help Description>\n\n<Custom Confirm Effect>\nif (this.isHpEffect() && this.isAttack() && this.isPhysical()) {\n  var elementId = 14;\n  var baseDamage = 20;\n  var damage = Math.ceil(target.elementRate(elementId) * baseDamage);\n  var result = JsonEx.makeDeepCopy(target._result);\n  target.clearResult();\n  target.startAnimation(158);\n  target.gainHp(-damage);\n  target.startDamagePopup();\n  if (target.isDead()) {\n    target.performCollapse();\n  }\n  target.clearResult();\n  target._result = result;\n}\n</Custom Confirm Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":218,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":83,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"EnTime","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]5\\c[0] turns, \\c[4]basic attacks\\c[0] will deal a tiny amount of bonus \\time \\dmg\n</Help Description>\n\n<Custom Confirm Effect>\nif (this.isHpEffect() && this.isAttack() && this.isPhysical()) {\n  var elementId = 15;\n  var baseDamage = 20;\n  var damage = Math.ceil(target.elementRate(elementId) * baseDamage);\n  var result = JsonEx.makeDeepCopy(target._result);\n  target.clearResult();\n  target.startAnimation(162);\n  target.gainHp(-damage);\n  target.startDamagePopup();\n  if (target.isDead()) {\n    target.performCollapse();\n  }\n  target.clearResult();\n  target._result = result;\n}\n</Custom Confirm Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":219,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":118,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"EnChaos","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]5\\c[0] turns, \\c[4]basic attacks\\c[0] will deal a tiny amount of bonus \\chaos \\dmg\n</Help Description>\n\n<Custom Confirm Effect>\nif (this.isHpEffect() && this.isAttack() && this.isPhysical()) {\n  var elementId = 16;\n  var baseDamage = 20;\n  var damage = Math.ceil(target.elementRate(elementId) * baseDamage);\n  var result = JsonEx.makeDeepCopy(target._result);\n  target.clearResult();\n  target.startAnimation(166);\n  target.gainHp(-damage);\n  target.startDamagePopup();\n  if (target.isDead()) {\n    target.performCollapse();\n  }\n  target.clearResult();\n  target._result = result;\n}\n</Custom Confirm Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":220,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"----------","note":"<Physical Taunt>\n<Magical Taunt>\n<Certain Taunt>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":221,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":164,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Negative Ions","note":"<Category: Hex>\n<Help Description>\nFor \\c[4]5\\c[0] turns, if unit is struck by \\c[4]Volt\\c[0] \\DMG, deal \\c[4]50%\\c[0] of that \\c[4]Volt\\c[0] \\DMG to a neary ally, then, remove \\c[4]Negative Ions\\c[0]\n</Help Description>\n\n<Custom Respond Effect>\nvar elements = this.getItemElements();\nvar lightningId = 9;\nif (elements.contains(lightningId) && target.result().hpDamage > 0) {\n  var dmg = Math.ceil(target.result().hpDamage * 0.50);\n  var group = target.friendsUnit().aliveMembers();\n  group.splice(group.indexOf(target), 1);\n  var member = group[Math.floor(Math.random() * group.length)];\n  if (member) {\n    target.removeState(stateId);\n    dmg = Math.ceil(dmg * member.elementRate(lightningId));\n    member.startAnimation(76);\n    member.gainHp(-dmg);\n    member.startDamagePopup();\n    if (member.isDead()) {\n      member.performCollapse();\n    }\n    member.clearResult();\n  }\n}\n</Custom Respond Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":222,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Victory Rush","note":"<Custom Establish Effect>\nif (this.isHpEffect() && !this._victoryRushTriggered) {\n  if (target.isDead() || target.hp <= 0) {\n    this._victoryRushTriggered = true;\n    var param = 2;\n    var turns = 5;\n    user.addBuff(param, turns);\n  }\n}\n</Custom Establish Effect>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":223,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":169,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Hell Power","note":"<Category: Hex>\n<Help Description>\nThis effect is not removed by \\c[4]K.O.\\c[0]; for \\c[4]5\\c[0] turns, unit cannot be ressurected\n</Help Description>\n\n<Category: Bypass Death Removal>\n\n<Custom Apply Effect>\ntarget._bypassFirstHellPower = true;\n</Custom Apply Effect>\n\n<Custom Apply Effect>\ntarget._bypassFirstHellPower = true;\n</Custom Apply Effect>\n \n<Custom Select Effect>\nif (target && target.isAlive()) {\n  target._bypassFirstHellPower = true;\n}\n</Custom Select Effect>\n \n<Custom React Effect>\nif (this.isHpEffect() && value < 0) {\n  value = 0;\n}\n</Custom React Effect>\n \n<Custom Deselect Effect>\nif (target && target._bypassFirstHellPower) {\n  target._bypassFirstHellPower = false;\n} else if (target) {\n  var death = target.deathStateId();\n  if (!target.isStateAffected(death)) {\n    target.addNewState(death);\n  }\n}\n</Custom Deselect Effect>","overlay":0,"priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":224,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Atonement Global","note":"<Custom Establish Effect>\nvar attonement = 225;\nvar group = user.friendsUnit().aliveMembers();\nif (this.isHpEffect() && this.isMagical() && value > 0) {\n  var hpHealed = Math.floor(value * 0.401);\n  for (var i = 0; i < group.length; ++i) {\n    var ally = group[i];\n    if (ally && ally.isStateAffected(attonement) && ally.stateOrigin(attonement) === user) {\n      ally.gainHp(hpHealed);\n      ally.startDamagePopup();\n      ally.clearResult();\n    }\n  } \n}\n</Custom Establish Effect>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":225,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":221,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Atonement","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]5\\c[0] turns, if the caster of this state deals \\magic \\dmg, unit will be healed for \\c[4]40.1%\\c[0] of the \\dmg dealt\n</Help Description>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":226,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":701,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Mercury Poisoning","note":"<Category: Hex>\n<Help Description>\nFor \\c[4]5\\c[0] turns, unit will receive \\c[4]HP DMG\\c[0] equal to \\c[4]50%\\c[0] of the caster's \\c[4]INT\\c[0] at the time \\c[4]Mercury Poisoning\\c[0] was applied\n</Help Description>\n\n<Custom Apply Effect>\ntarget._mercuryPoison = Math.ceil(origin.mat * 0.50);\n</Custom Apply Effect>\n\n<Custom Remove Effect>\ntarget._mercuryPoison = undefined;\n</Custom Remove Effect>\n\n<Custom Regenerate Effect>\ntarget._mercuryPoison = target._mercuryPoison || Math.ceil(origin.mat * 0.50);\ntarget.startAnimation(12);\ntarget.gainHp(-target._mercuryPoison);\ntarget.startDamagePopup();\nif (target.isDead()) {\n  target.performCollapse();\n}\ntarget.clearResult();\n</Custom Regenerate Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":227,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Chaotic Energies","note":"<Custom Confirm Effect>\nvar validtypes = [];\n\n// Insert the ID's of the skill types you wish for this to affect.\nvalidtypes.push(22, 23, 24, 25);\n\nif (this.isMagical() && this.isSkill() && value > 0 && validtypes.contains(this.item().stypeId)) {\n  var bonus = Math.random() * 0.24;\n  value += value * bonus;\n  value = Math.ceil(value);\n}\n</Custom Confirm Effect>\n\n<Custom React Effect>\nif (this.isHpEffect() && value > 0) {\n  var bonus = Math.random() * 0.05;\n  value -= value * bonus;\n  value = Math.ceil(value);\n}\n</Custom React Effect>","overlay":0,"priority":100,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":228,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Berserker Power","note":"<Custom Confirm Effect>\nif (this.isPhysical() && this.isHpEffect() && value > 0) {\n  value *= 2.00 - user.hpRate();\n  value += (user.mhp - user.hp) * 0.50;\n  value = Math.ceil(value);\n}\n</Custom Confirm Effect>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":229,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":1347,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Lightning Rod","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]5\\c[0] turns, \\c[4]taunts\\c[0] will cease working against foes but unit will attract \\c[4]Volt\\c[0] actions; unit will take \\c[4]0% Volt DMG\\c[0] and buff \\c[4]INT\\c[0] each time unit is struck by \\c[4]Volt\\c[0]\n</Help Description>\n\n<Foe Aura: 230>\n<Ally Aura: 231>\n\n<State Animation: 233>\n\n<Custom React Effect>\nif (this.isHpEffect() && value > 0) {\n  var lightningId = 9;\n  var elements = this.getItemElements();\n  if (elements.contains(lightningId)) {\n    value = 0;\n    var paramId = 4;\n    var turns = 5;\n    target.addBuff(paramId, turns);\n    target.startAnimation(51);\n  }\n}\n</Custom React Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":230,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Rod Foes","note":"<Custom Action Start Effect>\nvar action = user.currentAction();\nif (action && action.isForOpponent()) {\n  var lightningId = 9;\n  var lightningRod = 229;\n  var elements = action.getItemElements();\n  if (elements.contains(lightningId)) {\n    var pool = [];\n    var group = user.opponentsUnit().aliveMembers();\n    for (var i = 0; i < group.length; ++i) {\n      var member = group[i];\n      if (member && member.isStateAffected(lightningRod)) {\n        pool.push(member);\n      }\n    }\n    if (pool.length > 0) {\n      var rod = pool[Math.floor(Math.random()* pool.length)]\n      action.setTarget(rod.index());\n    }\n  }\n}\n</Custom Action Start Effect>","overlay":0,"priority":100,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":231,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Rod Allies","note":"<Null Physical Taunt>\n<Null Magical Taunt>\n<Null Certain Taunt>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":232,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Ebon Aura Origin","note":"<Category: Enchant>\n<Category: Aura>\n<Help Description>\nFor \\c[4]5\\c[0] turns, unit's allies deal \\c[4]20%\\c[0] bonus \\dmg; \\c[4]Critical hits\\c[0] dealt by unit's allies deal a bonus \\c[4]+200\\c[0] \\dmg\n</Help Description>\n\n<Ally Aura: 233>\n<State Animation: 227>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":233,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":1250,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Ebon Aura","note":"<Help Description>\nFor \\c[4]5\\c[0] turns, unit deals \\c[4]20%\\c[0] bonus \\dmg; \\c[4]Critical hits\\c[0] dealt by unit deal a bonus \\c[4]+200\\c[0] \\dmg\n</Help Description>\n\n<Custom Confirm Effect>\nif (this.isHpEffect() && value > 0) {\n  var bonusRate = 0.20;\n  value += Math.ceil(value * bonusRate);\n  if (target.result().critical) {\n    value += 200;\n  }\n  target.startAnimation(2);\n}\n</Custom Confirm Effect>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":234,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":23,"dataId":4,"value":0.5}],"iconIndex":535,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Rapture","note":"<Category: Enchant>\n<Help Description>\nNext action unit uses that costs \\c[4]MP\\c[0] will be \\c[4]50%\\c[0] cost and this skill will remove itself\n</Help Description>\n\n<Custom Initiate Effect>\nif (this.isSkill() && user.skillMpCost(this.item()) > 0) {\n  user.removeState(stateId);\n}\n</Custom Initiate Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":235,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Trueshot Origin","note":"<Category: Aura>\n\n<Ally Aura: 236>\n\n<State Animation: 227>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":236,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":1197,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Trueshot Aura","note":"<Help Description>\nFor \\c[4]5\\c[0] turns, unit's ranged basic attacks will deal \\c[4]+30% DMG\\c[0].\n</Help Description>\n\n<Custom Confirm Effect>\nif (user.isActor()) {\n  var rangedTypes = [];\n  rangedTypes.push(7, 8, 9);\n\n  var weapon = user.weapons()[0];\n  if (weapon && this.isAttack()) {\n    if (rangedTypes.contains(weapon.wtypeId)) {\n      value += Math.ceil(value * 0.30);\n    }\n  }\n}\n</Custom Confirm Effect>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":237,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":21,"dataId":2,"value":1.1}],"iconIndex":97,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Weapon Mastery","note":"<Custom Passive Condition>\nvar weapons = user.weapons();\nvar swords = 2;\ncondition = false;\nfor (var i = 0; i < weapons.length; ++i) {\n  var weapon = weapons[i];\n  if (weapon && weapon.wtypeId === swords) {\n    condition = true;\n    break;\n  }\n}\n</Custom Passive Condition>\n\n<ATK Plus: +25>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":238,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":21,"dataId":6,"value":0.5}],"iconIndex":74,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Arcane Curse","note":"<Category: Hex>\n<Help Description>\nFor \\c[4]5 turns\\c[0], unit's \\c[4]AGI\\c[0] is reduced by \\c[4]50%\\c[0]; if unit performs a \\magical action, extend \\c[4]Arcane Curse\\c[4]'s duration by 4 turns\n</Help Description>\n\n<Reapply Add Turns>\n\n<Custom Action Start Effect>\nvar action = user.currentAction();\nif (action && action.isMagical()) {\n  var turns = user.stateTurns(stateId) + 4;\n  user.setStateTurns(stateId, turns);\n}\n</Custom Action Start Effect>","overlay":0,"priority":100,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":239,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Cauterize Passive","note":"<Custom Battle Effect>\nvar reraise = 240;\nuser.addState(reraise);\nuser._cauterizeCooldown = 0;\n</Custom Battle Effect>\n\n<Custom Regenerate Effect>\nuser._cauterizeCooldown = user._cauterizeCooldown || 0;\nif (user._cauterizeCooldown > 0) {\n  user._cauterizeCooldown -= 1;\n  if (user._cauterizeCooldown <= 0) {\n    var reraise = 240;\n    user.addState(reraise);\n  }\n}\n</Custom Regenerate Effect>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":240,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":10,"message1":" will revive upon dying.","message2":" will revive upon dying.","message3":"","message4":"","minTurns":10,"motion":0,"name":"Cauterize Reraise","note":"<Category: Bypass Death Removal>\n\n<Custom Deselect Effect>\nif (target.hp <= 0 || target.isDead()) {\n  target.startAnimation(49);\n  var rate = 0.35;\n  var heal = Math.floor(target.mhp * rate);\n  target.removeState(stateId);\n  target.gainHp(heal);\n  target.startDamagePopup();\n  target.clearResult();\n  var burningState = 241;\n  target.addState(burningState);\n  target._cauterizeCooldown = 10;\n}\n</Custom Deselect Effect>","overlay":0,"priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":241,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[{"code":22,"dataId":7,"value":-0.047},{"code":21,"dataId":6,"value":1.5}],"iconIndex":64,"maxTurns":6,"message1":"","message2":"","message3":"","message4":"","minTurns":6,"motion":0,"name":"Cauterize Burning","note":"<Custom Regenerate Effect>\nuser.startAnimation(13);\n</Custom Regenerate Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":242,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Gehenna Origin","note":"<Category: Aura>\n\n<Ally Aura: 243>\n\n<State Animation: 227>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":243,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":638,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Gehenna Aura","note":"<Help Description>\nFor \\c[4]5\\c[0] turns, unit receives \\c[4]-10%\\c[0] less incoming \\magic \\dmg and heals \\c[4]10%\\c[0] of \\dmg dealt as \\c[4]HP\\c[0]\n</Help Description>\n\n<Custom React Effect>\nif (this.isMagical() && this.isHpEffect() && value > 0) {\n  var reduce = Math.floor(value * 0.10);\n  value -= reduce;\n  target.gainHp(reduce);\n  target.startDamagePopup();\n  target.clearResult();\n}\n</Custom React Effect>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":244,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Guardian Origin","note":"<Category: Aura>\n\n<Ally Aura: 245>\n\n<State Animation: 227>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":245,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":128,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Guardian Aura","note":"<Help Description>\nFor \\c[4]5\\c[0] turns, unit redirects \\c[4]50%\\c[0] of received \\dmg to the \\c[4]Guardian Aura\\c[0]'s origin\n</Help Description>\n\n<Custom React Effect>\nif (this.isHpEffect() && value > 0) {\n  var members = target.friendsUnit().aliveMembers();\n  var auraOriginId = 244;\n  var auraOriginUser = undefined;\n  for (var i = 0; i < members.length; ++i) {\n    var member = members[i];\n    if (member && member !== target && member.isStateAffected(auraOriginId)) {\n      auraOriginUser = member;\n      break;\n    }\n  }\n  if (auraOriginUser) {\n    var reduction = Math.ceil(0.50 * value);\n    value -= reduction;\n    auraOriginUser.gainHp(-reduction);\n    auraOriginUser.startAnimation(2);\n    auraOriginUser.startDamagePopup();\n    if (auraOriginUser.isDead()) {\n      auraOriginUser.performCollapse();\n    }\n    auraOriginUser.clearResult();\n  }\n}\n</Custom React Effect>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":246,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Protector Origin","note":"<Category: Aura>\n\n<Ally Aura: 247>\n\n<State Animation: 227>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":247,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":132,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Protector Aura","note":"<Help Description>\nFor \\c[4]5\\c[0] turns, unit redirects \\c[4]100%\\c[0] of received \\dmg to the \\c[4]Protector Aura\\c[0]'s origin, who will receive only \\c[4]50%\\c[0] of the \\dmg\n</Help Description>\n\n<Custom React Effect>\nif (this.isHpEffect() && value > 0) {\n  var members = target.friendsUnit().aliveMembers();\n  var auraOriginId = 246;\n  var auraOriginUser = undefined;\n  for (var i = 0; i < members.length; ++i) {\n    var member = members[i];\n    if (member && member !== target && member.isStateAffected(auraOriginId)) {\n      auraOriginUser = member;\n      break;\n    }\n  }\n  if (auraOriginUser) {\n    var reduction = Math.ceil(0.50 * value);\n    value = 0;\n    auraOriginUser.gainHp(-reduction);\n    auraOriginUser.startAnimation(2);\n    auraOriginUser.startDamagePopup();\n    if (auraOriginUser.isDead()) {\n      auraOriginUser.performCollapse();\n    }\n    auraOriginUser.clearResult();\n  }\n}\n</Custom React Effect>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":248,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":639,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Spirit Shell","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]5\\c[0] turns, any \\c[4]Healing\\c[0] done by unit will be changed into a \\c[4]Shield\\c[0] for \\c[4]3\\c[0] turns instead\n</Help Description>\n\n<Custom Confirm Effect>\nif (this.isHpEffect() && this.isSkill() && value < 0) {\n  var turns = 3;\n  var rate = 1.00;\n  var barrier = Math.floor(value * rate * -1);\n  target.gainBarrier(barrier, turns);\n  value += barrier;\n}\n</Custom Confirm Effect>\n\n<Custom Establish Effect>\nvar result = target.result();\nif (result.hpDamage === 0) {\n  result.hpAffected = false;\n}\n</Custom Establish Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":249,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":1049,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Siphoning Strike","note":"<Category: Enchant>\n<Help Description>\nUnit's next \\c[4]basic attack\\c[0] deals \\dmg equal to \\c[4]Siphon x100\\c[0]; if target is killed from a \\c[4]basic attack\\c[0] while \\c[4]Siphoning Strike\\c[0] is active, unit permanently gains \\c[4]+1 Siphon\\c[0]\n</Help Description>\n\n<Custom Apply Effect>\nuser._siphonbonus = user._siphonbonus || 1;\nvar bonus = user._siphonbonus;\nuser.setStateCounter(stateId, 'x' + bonus);\n</Custom Apply Effect>\n\n<Custom Confirm Effect>\nif (this.isAttack()) {\n  user._siphonbonus = user._siphonbonus || 1;\n  value += user._siphonbonus * 100;\n  target.startAnimation(102);\n  target._lifeState = target.hp > 0;\n}\n</Custom Confirm Effect>\n\n<Custom Establish Effect>\nif (this.isAttack()) {\n  if (target._lifeState && target.hp <= 0) {\n    user._siphonbonus = user._siphonbonus || 1;\n    user._siphonbonus += 1;\n  }\n  user.removeState(stateId);\n  target._lifeState = undefined;\n}\n</Custom Establish Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":250,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":127,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Roaming Mend","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]5\\c[0] turns, if unit gets receives \\c[4]HP DMG\\c[0], \\c[4]heal\\c[0] unit for \\tier1 \\c[4]HP\\c[0] and move \\c[4]Roaming Mend\\c[0] from unit to a nearby ally; \\c[4]Roaming Mend\\c[0] can heal up to \\c[4]4\\c[0] allies this way\n</Help Description>\n\n<Custom Apply Effect>\nthis._roamingMendCharges = 4;\nthis._roamingMendHeal = origin.mat * 4;\nthis.setStateCounter(stateId, 'x' + 4);\n</Custom Apply Effect>\n\n<Custom Remove Effect>\nthis._roamingMendCharges = undefined;\nthis._roamingMendHeal = undefined;\n</Custom Remove Effect>\n\n<Custom Deselect Effect>\nif (this.isHpEffect() && this.isDamage() && target.hp > 0) {\n  var heal = target._roamingMendHeal || 1;\n  target.startAnimation(45);\n  target.gainHp(heal);\n  target.startDamagePopup();\n  target.clearResult();\n  var charges = target._roamingMendCharges - 1;\n  target.removeState(stateId);\n  if (charges > 0) {\n    var members = [];\n    for (var i = 0; i < target.friendsUnit().aliveMembers().length; ++i) {\n      var potential = target.friendsUnit().aliveMembers()[i];\n      if (!potential) continue;\n      if (potential === target) continue;\n      if (potential.isStateAffected(stateId)) continue;\n      if (potential.hp <= 0) continue;\n      members.push(potential);\n    }\n    var member = members[Math.floor(Math.random() * members.length)];\n    if (member) {\n      member.startAnimation(97);\n      member.addState(stateId);\n      member._roamingMendCharges = charges;\n      member._roamingMendHeal = heal;\n      member.setStateCounter(stateId, 'x' + charges);\n    }\n  }\n}\n</Custom Deselect Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":251,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":711,"maxTurns":4,"message1":"","message2":"","message3":"","message4":"","minTurns":4,"motion":0,"name":"Subjugate Drain","note":"<Category: Hex>\n<Help Description>\nFor \\c[4]4\\c[0] turns, \\c[4]4.4%\\c[0] of unit's \\c[4]MaxHP\\c[0] is drained\n</Help Description>\n\n<Custom Regenerate Effect>\nuser._subjugateDmg = user._subjugateDmg || 0;\nif (user.isAlive() && user._subjugateDmg > 0) {\n  var turns = Math.max(1, user.stateTurns(stateId));\n  var dmg = Math.ceil(user._subjugateDmg / turns);\n  user._subjugateDmg -= dmg;\n  user.gainHp(-dmg);\n  user.startAnimation(4);\n  user.startDamagePopup();\n  if (user.isDead()) {\n    user.performCollapse();\n  }\n  user.clearResult();\n  if (origin !== user && origin.isAlive()) {\n    origin.gainHp(dmg);\n    origin.startAnimation(46);\n    origin.startDamagePopup();\n    origin.clearResult();\n  }\n}\n</Custom Regenerate Effect>\n\n<Custom Remove Effect>\nuser._subjugateDmg = 0;\n</Custom Remove Effect>","overlay":0,"priority":30,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":252,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Overheat","note":"<Element Absorb: Fire>\n\n<Custom React Effect>\nif (this.isHpEffect()) {\n  var fireElementId = 7;\n  var elements = this.getItemElements();\n  if (elements.contains(fireElementId)) {\n    target.addBuff(0, 10);\n  }\n}\n</Custom React Effect>\n\n<Custom Respond Effect>\nif (target.hp >= target.paramBase(0) * 2.00) {\n  var dmg = target.hp;\n  target.startAnimation(107);\n  target.setHp(0);\n  target.removeImmortal();\n  var fireElementId = 7;\n  var members = user.friendsUnit().aliveMembers().concat(target.friendsUnit().aliveMembers());\n  for (var i = 0; i < members.length; ++i) {\n    var member = members[i];\n    if (member) {\n      member.gainHp(-1 * dmg * member.elementRate(fireElementId));\n      member.startDamagePopup();\n      if (member.isDead()) {\n        member.performCollapse();\n      }\n      member.clearResult();\n    }\n  }\n}\n</Custom Respond Effect>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":253,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Truthseeker","note":"<Custom Passive Condition>\ncondition = false;\nif ($gameParty.inBattle()) {\n  if (user.isActor()) {\n    var swordTypeId = 2;\n    var weapons = user.weapons();\n    for (var i = 0; i < weapons.length; ++i) {\n      var weapon = weapons[i];\n      if (weapon && weapon.wtypeId === swordTypeId) {\n        condition = true;\n      }\n    }\n  }\n}\n</Custom Passive Condition>\n\n<Custom Confirm Effect>\nif (this.isHpEffect() && value > 0) {\n  var bonus = Math.ceil(value * 0.40);\n  value += bonus;\n}\n</Custom Confirm Effect>","overlay":0,"priority":100,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":254,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":72,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Stock Heal","note":"<Category: Enchant>\n<Help Description>\nAdd \\c[4]+2,000 HP Stock\\c[0] to unit; restore any missing \\c[4]HP\\c[0] when unit regenerates \\c[4]HP\\c[0] or receives \\dmg directly\n</Help Description>\n\n<Custom Apply Effect>\nuser._stockHeal = user._stockHeal || 0;\nuser._stockHeal += 2000;\nuser.setStateCounter(stateId, user._stockHeal);\n</Custom Apply Effect>\n\n<Custom Remove Effect>\nuser._stockHeal = undefined;\nuser.setStateCounter(stateId, 0);\n</Custom Remove Effect>\n\n<Custom Regenerate Effect>\nuser._stockHeal = user._stockHeal || 0;\nif (user.isAlive() && user.hpRate() < 1) {\n  var missingHp = Math.min(user.mhp - user.hp, user._stockHeal);\n  user._stockHeal -= missingHp;\n  user.setStateCounter(stateId, user._stockHeal);\n  user.gainHp(missingHp);\n  user.startDamagePopup();\n  user.clearResult();\n}\nif (user._stockHeal <= 0) {\n  user.removeState(stateId);\n}\n</Custom Regenerate Effect>\n\n<Custom Deselect Effect>\ntarget._stockHeal = target._stockHeal || 0;\nif (target.isAlive() && target.hpRate() < 1) {\n  var missingHp = Math.min(target.mhp - target.hp, target._stockHeal);\n  target._stockHeal -= missingHp;\n  target.setStateCounter(stateId, target._stockHeal);\n  target.gainHp(missingHp);\n  target.startDamagePopup();\n  target.clearResult();\n}\nif (target._stockHeal <= 0) {\n  target.removeState(stateId);\n}\n</Custom Deselect Effect>","overlay":0,"priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":255,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Knight's Pride","note":"<Custom Passive Condition>\ncondition = false;\nif ($gameParty.inBattle()) {\n  condition = true;\n}\n</Custom Passive Condition>\n\n<Custom Confirm Effect>\nif (this.isSkill() && this.isHpEffect() && value > 0) {\n  var skillType = 8;\n  if (this.item().stypeId === skillType) {\n    var bonus = Math.ceil(value * 0.30);\n    value += bonus;\n  }\n}\n</Custom Confirm Effect>","overlay":0,"priority":100,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":256,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"----------","note":"<Physical Taunt>\n<Magical Taunt>\n<Certain Taunt>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":257,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":833,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Fire Barrier","note":"<Category: Enchant>\n<Category: Barrier>\n<Help Description>\nUnit blocks \\dmg less than \\c[4]10% MaxHP\\c[0]; if unit receives more \\dmg than \\c[4]10% MaxHP\\c[0] or \\c[4]Water\\c[0] or \\c[4]Air\\c[0] \\dmg, remove \\c[4]Fire Barrier\\c[0]\n</Help Description>\n\n<Custom Apply Effect>\nvar threshhold = Math.ceil(target.mhp * 0.10);\ntarget.setStateCounter(stateId, threshhold);\n\nvar text = '<CENTER>\\\\c[4]' + state.name + '\\\\c[0] blocks damage under \\\\c[4]' + threshhold + '\\\\c[0]!';\nvar wait = 60;\nBattleManager.addText(text, wait);\n\nvar pierceElements = [10, 12];\nvar elementNames = '';\nwhile (pierceElements.length > 0) {\n  var elementId = pierceElements.shift();\n  elementNames += '\\\\c[4]' + $dataSystem.elements[elementId] + '\\\\c[0]';\n  if (pierceElements.length > 0) {\n    elementNames += ', ';\n  }\n};\ntext = '<CENTER>Deal more than \\\\c[4]' + threshhold + '\\\\c[0] damage or ' + elementNames + ' damage to break barrier!'\nBattleManager.addText(text, 0);\n</Custom Apply Effect>\n\n<Custom Regenerate Effect>\nvar threshhold = Math.ceil(target.mhp * 0.10);\ntarget.setStateCounter(stateId, threshhold);\n</Custom Regenerate Effect>\n\n<Custom React Effect>\nif (this.isHpEffect() && value > 0) {\n  var pierceElements = [10, 12];\n  var threshhold = Math.ceil(target.mhp * 0.10);\n\n  var elements = this.getItemElements();\n  var pierced = value > threshhold;\n  var elementNames = '';\n\n  if (!pierced) {\n    while (pierceElements.length > 0) {\n      var elementId = pierceElements.shift();\n      if (elements.contains(elementId)) {\n        pierced = true;\n      }\n      elementNames += '\\\\c[4]' + $dataSystem.elements[elementId] + '\\\\c[0]';\n      if (pierceElements.length > 0) {\n        elementNames += ', ';\n      }\n    }\n  }\n\n  var text = '<CENTER>\\\\c[4]' + state.name + '\\\\c[0]';\n  var wait = 60;\n  if (pierced) {\n    target.removeState(stateId);\n    text += ' has been pierced!';\n    BattleManager.addText(text, wait);\n  } else {\n    value = 0;\n    target.startAnimation(53);\n    text += ' blocks damage under \\\\c[4]' + threshhold + '\\\\c[0]!';\n    BattleManager.addText(text, wait);\n    text = '<CENTER>Deal more than \\\\c[4]' + threshhold + '\\\\c[0] damage or ' + elementNames + ' damage to break barrier!'\n    BattleManager.addText(text, 0);\n  }\n}\n</Custom React Effect>","overlay":0,"priority":90,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":258,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":842,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Ice Barrier","note":"<Category: Enchant>\n<Category: Barrier>\n<Help Description>\nUnit blocks \\dmg less than \\c[4]10% MaxHP\\c[0]; if unit receives more \\dmg than \\c[4]10% MaxHP\\c[0] or \\c[4]Fire\\c[0] or \\c[4]Earth\\c[0] \\dmg, remove \\c[4]Ice Barrier\\c[0]\n</Help Description>\n\n<Custom Apply Effect>\nvar threshhold = Math.ceil(target.mhp * 0.10);\ntarget.setStateCounter(stateId, threshhold);\n\nvar text = '<CENTER>\\\\c[4]' + state.name + '\\\\c[0] blocks damage under \\\\c[4]' + threshhold + '\\\\c[0]!';\nvar wait = 60;\nBattleManager.addText(text, wait);\n\nvar pierceElements = [7, 11];\nvar elementNames = '';\nwhile (pierceElements.length > 0) {\n  var elementId = pierceElements.shift();\n  elementNames += '\\\\c[4]' + $dataSystem.elements[elementId] + '\\\\c[0]';\n  if (pierceElements.length > 0) {\n    elementNames += ', ';\n  }\n};\ntext = '<CENTER>Deal more than \\\\c[4]' + threshhold + '\\\\c[0] damage or ' + elementNames + ' damage to break barrier!'\nBattleManager.addText(text, 0);\n</Custom Apply Effect>\n\n<Custom Regenerate Effect>\nvar threshhold = Math.ceil(target.mhp * 0.10);\ntarget.setStateCounter(stateId, threshhold);\n</Custom Regenerate Effect>\n\n<Custom React Effect>\nif (this.isHpEffect() && value > 0) {\n  var pierceElements = [7, 11];\n  var threshhold = Math.ceil(target.mhp * 0.10);\n\n  var elements = this.getItemElements();\n  var pierced = value > threshhold;\n  var elementNames = '';\n\n  if (!pierced) {\n    while (pierceElements.length > 0) {\n      var elementId = pierceElements.shift();\n      if (elements.contains(elementId)) {\n        pierced = true;\n      }\n      elementNames += '\\\\c[4]' + $dataSystem.elements[elementId] + '\\\\c[0]';\n      if (pierceElements.length > 0) {\n        elementNames += ', ';\n      }\n    }\n  }\n\n  var text = '<CENTER>\\\\c[4]' + state.name + '\\\\c[0]';\n  var wait = 60;\n  if (pierced) {\n    target.removeState(stateId);\n    text += ' has been pierced!';\n    BattleManager.addText(text, wait);\n  } else {\n    value = 0;\n    target.startAnimation(53);\n    text += ' blocks damage under \\\\c[4]' + threshhold + '\\\\c[0]!';\n    BattleManager.addText(text, wait);\n    text = '<CENTER>Deal more than \\\\c[4]' + threshhold + '\\\\c[0] damage or ' + elementNames + ' damage to break barrier!'\n    BattleManager.addText(text, 0);\n  }\n}\n</Custom React Effect>","overlay":0,"priority":90,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":259,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":835,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Volt Barrier","note":"<Category: Enchant>\n<Category: Barrier>\n<Help Description>\nUnit blocks \\dmg less than \\c[4]10% MaxHP\\c[0]; if unit receives more \\dmg than \\c[4]10% MaxHP\\c[0] or \\c[4]Earth\\c[0] or \\c[4]Fire\\c[0] \\dmg, remove \\c[4]Volt Barrier\\c[0]\n</Help Description>\n\n<Custom Apply Effect>\nvar threshhold = Math.ceil(target.mhp * 0.10);\ntarget.setStateCounter(stateId, threshhold);\n\nvar text = '<CENTER>\\\\c[4]' + state.name + '\\\\c[0] blocks damage under \\\\c[4]' + threshhold + '\\\\c[0]!';\nvar wait = 60;\nBattleManager.addText(text, wait);\n\nvar pierceElements = [11, 7];\nvar elementNames = '';\nwhile (pierceElements.length > 0) {\n  var elementId = pierceElements.shift();\n  elementNames += '\\\\c[4]' + $dataSystem.elements[elementId] + '\\\\c[0]';\n  if (pierceElements.length > 0) {\n    elementNames += ', ';\n  }\n};\ntext = '<CENTER>Deal more than \\\\c[4]' + threshhold + '\\\\c[0] damage or ' + elementNames + ' damage to break barrier!'\nBattleManager.addText(text, 0);\n</Custom Apply Effect>\n\n<Custom Regenerate Effect>\nvar threshhold = Math.ceil(target.mhp * 0.10);\ntarget.setStateCounter(stateId, threshhold);\n</Custom Regenerate Effect>\n\n<Custom React Effect>\nif (this.isHpEffect() && value > 0) {\n  var pierceElements = [11, 7];\n  var threshhold = Math.ceil(target.mhp * 0.10);\n\n  var elements = this.getItemElements();\n  var pierced = value > threshhold;\n  var elementNames = '';\n\n  if (!pierced) {\n    while (pierceElements.length > 0) {\n      var elementId = pierceElements.shift();\n      if (elements.contains(elementId)) {\n        pierced = true;\n      }\n      elementNames += '\\\\c[4]' + $dataSystem.elements[elementId] + '\\\\c[0]';\n      if (pierceElements.length > 0) {\n        elementNames += ', ';\n      }\n    }\n  }\n\n  var text = '<CENTER>\\\\c[4]' + state.name + '\\\\c[0]';\n  var wait = 60;\n  if (pierced) {\n    target.removeState(stateId);\n    text += ' has been pierced!';\n    BattleManager.addText(text, wait);\n  } else {\n    value = 0;\n    target.startAnimation(53);\n    text += ' blocks damage under \\\\c[4]' + threshhold + '\\\\c[0]!';\n    BattleManager.addText(text, wait);\n    text = '<CENTER>Deal more than \\\\c[4]' + threshhold + '\\\\c[0] damage or ' + elementNames + ' damage to break barrier!'\n    BattleManager.addText(text, 0);\n  }\n}\n</Custom React Effect>","overlay":0,"priority":90,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":260,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":840,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Water Barrier","note":"<Category: Enchant>\n<Category: Barrier>\n<Help Description>\nUnit blocks \\dmg less than \\c[4]10% MaxHP\\c[0]; if unit receives more \\dmg than \\c[4]10% MaxHP\\c[0] or \\c[4]Volt\\c[0] or \\c[4]Ice\\c[0] \\dmg, remove \\c[4]Water Barrier\\c[0]\n</Help Description>\n\n<Custom Apply Effect>\nvar threshhold = Math.ceil(target.mhp * 0.10);\ntarget.setStateCounter(stateId, threshhold);\n\nvar text = '<CENTER>\\\\c[4]' + state.name + '\\\\c[0] blocks damage under \\\\c[4]' + threshhold + '\\\\c[0]!';\nvar wait = 60;\nBattleManager.addText(text, wait);\n\nvar pierceElements = [9, 8];\nvar elementNames = '';\nwhile (pierceElements.length > 0) {\n  var elementId = pierceElements.shift();\n  elementNames += '\\\\c[4]' + $dataSystem.elements[elementId] + '\\\\c[0]';\n  if (pierceElements.length > 0) {\n    elementNames += ', ';\n  }\n};\ntext = '<CENTER>Deal more than \\\\c[4]' + threshhold + '\\\\c[0] damage or ' + elementNames + ' damage to break barrier!'\nBattleManager.addText(text, 0);\n</Custom Apply Effect>\n\n<Custom Regenerate Effect>\nvar threshhold = Math.ceil(target.mhp * 0.10);\ntarget.setStateCounter(stateId, threshhold);\n</Custom Regenerate Effect>\n\n<Custom React Effect>\nif (this.isHpEffect() && value > 0) {\n  var pierceElements = [9, 8];\n  var threshhold = Math.ceil(target.mhp * 0.10);\n\n  var elements = this.getItemElements();\n  var pierced = value > threshhold;\n  var elementNames = '';\n\n  if (!pierced) {\n    while (pierceElements.length > 0) {\n      var elementId = pierceElements.shift();\n      if (elements.contains(elementId)) {\n        pierced = true;\n      }\n      elementNames += '\\\\c[4]' + $dataSystem.elements[elementId] + '\\\\c[0]';\n      if (pierceElements.length > 0) {\n        elementNames += ', ';\n      }\n    }\n  }\n\n  var text = '<CENTER>\\\\c[4]' + state.name + '\\\\c[0]';\n  var wait = 60;\n  if (pierced) {\n    target.removeState(stateId);\n    text += ' has been pierced!';\n    BattleManager.addText(text, wait);\n  } else {\n    value = 0;\n    target.startAnimation(53);\n    text += ' blocks damage under \\\\c[4]' + threshhold + '\\\\c[0]!';\n    BattleManager.addText(text, wait);\n    text = '<CENTER>Deal more than \\\\c[4]' + threshhold + '\\\\c[0] damage or ' + elementNames + ' damage to break barrier!'\n    BattleManager.addText(text, 0);\n  }\n}\n</Custom React Effect>","overlay":0,"priority":90,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":261,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":834,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Earth Barrier","note":"<Category: Enchant>\n<Category: Barrier>\n<Help Description>\nUnit blocks \\dmg less than \\c[4]10% MaxHP\\c[0]; if unit receives more \\dmg than \\c[4]10% MaxHP\\c[0] or \\c[4]Air\\c[0] or \\c[4]Water\\c[0] \\dmg, remove \\c[4]Earth Barrier\\c[0]\n</Help Description>\n\n<Custom Apply Effect>\nvar threshhold = Math.ceil(target.mhp * 0.10);\ntarget.setStateCounter(stateId, threshhold);\n\nvar text = '<CENTER>\\\\c[4]' + state.name + '\\\\c[0] blocks damage under \\\\c[4]' + threshhold + '\\\\c[0]!';\nvar wait = 60;\nBattleManager.addText(text, wait);\n\nvar pierceElements = [12, 10];\nvar elementNames = '';\nwhile (pierceElements.length > 0) {\n  var elementId = pierceElements.shift();\n  elementNames += '\\\\c[4]' + $dataSystem.elements[elementId] + '\\\\c[0]';\n  if (pierceElements.length > 0) {\n    elementNames += ', ';\n  }\n};\ntext = '<CENTER>Deal more than \\\\c[4]' + threshhold + '\\\\c[0] damage or ' + elementNames + ' damage to break barrier!'\nBattleManager.addText(text, 0);\n</Custom Apply Effect>\n\n<Custom Regenerate Effect>\nvar threshhold = Math.ceil(target.mhp * 0.10);\ntarget.setStateCounter(stateId, threshhold);\n</Custom Regenerate Effect>\n\n<Custom React Effect>\nif (this.isHpEffect() && value > 0) {\n  var pierceElements = [12, 10];\n  var threshhold = Math.ceil(target.mhp * 0.10);\n\n  var elements = this.getItemElements();\n  var pierced = value > threshhold;\n  var elementNames = '';\n\n  if (!pierced) {\n    while (pierceElements.length > 0) {\n      var elementId = pierceElements.shift();\n      if (elements.contains(elementId)) {\n        pierced = true;\n      }\n      elementNames += '\\\\c[4]' + $dataSystem.elements[elementId] + '\\\\c[0]';\n      if (pierceElements.length > 0) {\n        elementNames += ', ';\n      }\n    }\n  }\n\n  var text = '<CENTER>\\\\c[4]' + state.name + '\\\\c[0]';\n  var wait = 60;\n  if (pierced) {\n    target.removeState(stateId);\n    text += ' has been pierced!';\n    BattleManager.addText(text, wait);\n  } else {\n    value = 0;\n    target.startAnimation(53);\n    text += ' blocks damage under \\\\c[4]' + threshhold + '\\\\c[0]!';\n    BattleManager.addText(text, wait);\n    text = '<CENTER>Deal more than \\\\c[4]' + threshhold + '\\\\c[0] damage or ' + elementNames + ' damage to break barrier!'\n    BattleManager.addText(text, 0);\n  }\n}\n</Custom React Effect>","overlay":0,"priority":90,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":262,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":834,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Air Barrier","note":"<Category: Enchant>\n<Category: Barrier>\n<Help Description>\nUnit blocks \\dmg less than \\c[4]10% MaxHP\\c[0]; if unit receives more \\dmg than \\c[4]10% MaxHP\\c[0] or \\c[4]Volt\\c[0] or \\c[4]Ice\\c[0] \\dmg, remove \\c[4]Air Barrier\\c[0]\n</Help Description>\n\n<Custom Apply Effect>\nvar threshhold = Math.ceil(target.mhp * 0.10);\ntarget.setStateCounter(stateId, threshhold);\n\nvar text = '<CENTER>\\\\c[4]' + state.name + '\\\\c[0] blocks damage under \\\\c[4]' + threshhold + '\\\\c[0]!';\nvar wait = 60;\nBattleManager.addText(text, wait);\n\nvar pierceElements = [9, 8];\nvar elementNames = '';\nwhile (pierceElements.length > 0) {\n  var elementId = pierceElements.shift();\n  elementNames += '\\\\c[4]' + $dataSystem.elements[elementId] + '\\\\c[0]';\n  if (pierceElements.length > 0) {\n    elementNames += ', ';\n  }\n};\ntext = '<CENTER>Deal more than \\\\c[4]' + threshhold + '\\\\c[0] damage or ' + elementNames + ' damage to break barrier!'\nBattleManager.addText(text, 0);\n</Custom Apply Effect>\n\n<Custom Regenerate Effect>\nvar threshhold = Math.ceil(target.mhp * 0.10);\ntarget.setStateCounter(stateId, threshhold);\n</Custom Regenerate Effect>\n\n<Custom React Effect>\nif (this.isHpEffect() && value > 0) {\n  var pierceElements = [9, 8];\n  var threshhold = Math.ceil(target.mhp * 0.10);\n\n  var elements = this.getItemElements();\n  var pierced = value > threshhold;\n  var elementNames = '';\n\n  if (!pierced) {\n    while (pierceElements.length > 0) {\n      var elementId = pierceElements.shift();\n      if (elements.contains(elementId)) {\n        pierced = true;\n      }\n      elementNames += '\\\\c[4]' + $dataSystem.elements[elementId] + '\\\\c[0]';\n      if (pierceElements.length > 0) {\n        elementNames += ', ';\n      }\n    }\n  }\n\n  var text = '<CENTER>\\\\c[4]' + state.name + '\\\\c[0]';\n  var wait = 60;\n  if (pierced) {\n    target.removeState(stateId);\n    text += ' has been pierced!';\n    BattleManager.addText(text, wait);\n  } else {\n    value = 0;\n    target.startAnimation(53);\n    text += ' blocks damage under \\\\c[4]' + threshhold + '\\\\c[0]!';\n    BattleManager.addText(text, wait);\n    text = '<CENTER>Deal more than \\\\c[4]' + threshhold + '\\\\c[0] damage or ' + elementNames + ' damage to break barrier!'\n    BattleManager.addText(text, 0);\n  }\n}\n</Custom React Effect>","overlay":0,"priority":90,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":263,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":847,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Holy Barrier","note":"<Category: Enchant>\n<Category: Barrier>\n<Help Description>\nUnit blocks \\dmg less than \\c[4]10% MaxHP\\c[0]; if unit receives more \\dmg than \\c[4]5% MaxHP\\c[0] or \\c[4]Dark\\c[0] \\dmg, remove \\c[4]Holy Barrier\\c[0]\n</Help Description>\n\n<Custom Apply Effect>\nvar threshhold = Math.ceil(target.mhp * 0.05);\ntarget.setStateCounter(stateId, threshhold);\n\nvar text = '<CENTER>\\\\c[4]' + state.name + '\\\\c[0] blocks damage under \\\\c[4]' + threshhold + '\\\\c[0]!';\nvar wait = 60;\nBattleManager.addText(text, wait);\n\nvar pierceElements = [14];\nvar elementNames = '';\nwhile (pierceElements.length > 0) {\n  var elementId = pierceElements.shift();\n  elementNames += '\\\\c[4]' + $dataSystem.elements[elementId] + '\\\\c[0]';\n  if (pierceElements.length > 0) {\n    elementNames += ', ';\n  }\n};\ntext = '<CENTER>Deal more than \\\\c[4]' + threshhold + '\\\\c[0] damage or ' + elementNames + ' damage to break barrier!'\nBattleManager.addText(text, 0);\n</Custom Apply Effect>\n\n<Custom Regenerate Effect>\nvar threshhold = Math.ceil(target.mhp * 0.05);\ntarget.setStateCounter(stateId, threshhold);\n</Custom Regenerate Effect>\n\n<Custom React Effect>\nif (this.isHpEffect() && value > 0) {\n  var pierceElements = [14];\n  var threshhold = Math.ceil(target.mhp * 0.05);\n\n  var elements = this.getItemElements();\n  var pierced = value > threshhold;\n  var elementNames = '';\n\n  if (!pierced) {\n    while (pierceElements.length > 0) {\n      var elementId = pierceElements.shift();\n      if (elements.contains(elementId)) {\n        pierced = true;\n      }\n      elementNames += '\\\\c[4]' + $dataSystem.elements[elementId] + '\\\\c[0]';\n      if (pierceElements.length > 0) {\n        elementNames += ', ';\n      }\n    }\n  }\n\n  var text = '<CENTER>\\\\c[4]' + state.name + '\\\\c[0]';\n  var wait = 60;\n  if (pierced) {\n    target.removeState(stateId);\n    text += ' has been pierced!';\n    BattleManager.addText(text, wait);\n  } else {\n    value = 0;\n    target.startAnimation(53);\n    text += ' blocks damage under \\\\c[4]' + threshhold + '\\\\c[0]!';\n    BattleManager.addText(text, wait);\n    text = '<CENTER>Deal more than \\\\c[4]' + threshhold + '\\\\c[0] damage or ' + elementNames + ' damage to break barrier!'\n    BattleManager.addText(text, 0);\n  }\n}\n</Custom React Effect>","overlay":0,"priority":90,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":264,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":846,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Dark Barrier","note":"<Category: Enchant>\n<Category: Barrier>\n<Help Description>\nUnit blocks \\dmg less than \\c[4]5% MaxHP\\c[0]; if unit receives more \\dmg than \\c[4]5% MaxHP\\c[0] or \\c[4]Holy\\c[0] \\dmg, remove \\c[4]Dark Barrier\\c[0]\n</Help Description>\n\n<Custom Apply Effect>\nvar threshhold = Math.ceil(target.mhp * 0.05);\ntarget.setStateCounter(stateId, threshhold);\n\nvar text = '<CENTER>\\\\c[4]' + state.name + '\\\\c[0] blocks damage under \\\\c[4]' + threshhold + '\\\\c[0]!';\nvar wait = 60;\nBattleManager.addText(text, wait);\n\nvar pierceElements = [13];\nvar elementNames = '';\nwhile (pierceElements.length > 0) {\n  var elementId = pierceElements.shift();\n  elementNames += '\\\\c[4]' + $dataSystem.elements[elementId] + '\\\\c[0]';\n  if (pierceElements.length > 0) {\n    elementNames += ', ';\n  }\n};\ntext = '<CENTER>Deal more than \\\\c[4]' + threshhold + '\\\\c[0] damage or ' + elementNames + ' damage to break barrier!'\nBattleManager.addText(text, 0);\n</Custom Apply Effect>\n\n<Custom Regenerate Effect>\nvar threshhold = Math.ceil(target.mhp * 0.05);\ntarget.setStateCounter(stateId, threshhold);\n</Custom Regenerate Effect>\n\n<Custom React Effect>\nif (this.isHpEffect() && value > 0) {\n  var pierceElements = [13];\n  var threshhold = Math.ceil(target.mhp * 0.05);\n\n  var elements = this.getItemElements();\n  var pierced = value > threshhold;\n  var elementNames = '';\n\n  if (!pierced) {\n    while (pierceElements.length > 0) {\n      var elementId = pierceElements.shift();\n      if (elements.contains(elementId)) {\n        pierced = true;\n      }\n      elementNames += '\\\\c[4]' + $dataSystem.elements[elementId] + '\\\\c[0]';\n      if (pierceElements.length > 0) {\n        elementNames += ', ';\n      }\n    }\n  }\n\n  var text = '<CENTER>\\\\c[4]' + state.name + '\\\\c[0]';\n  var wait = 60;\n  if (pierced) {\n    target.removeState(stateId);\n    text += ' has been pierced!';\n    BattleManager.addText(text, wait);\n  } else {\n    value = 0;\n    target.startAnimation(53);\n    text += ' blocks damage under \\\\c[4]' + threshhold + '\\\\c[0]!';\n    BattleManager.addText(text, wait);\n    text = '<CENTER>Deal more than \\\\c[4]' + threshhold + '\\\\c[0] damage or ' + elementNames + ' damage to break barrier!'\n    BattleManager.addText(text, 0);\n  }\n}\n</Custom React Effect>","overlay":0,"priority":90,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":265,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":845,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Time Barrier","note":"<Category: Enchant>\n<Category: Barrier>\n<Help Description>\nUnit blocks \\dmg less than \\c[4]5% MaxHP\\c[0]; if unit receives more \\dmg than \\c[4]5% MaxHP\\c[0] or \\c[4]Chaos\\c[0] \\dmg, remove \\c[4]Time Barrier\\c[0]\n</Help Description>\n\n<Custom Apply Effect>\nvar threshhold = Math.ceil(target.mhp * 0.05);\ntarget.setStateCounter(stateId, threshhold);\n\nvar text = '<CENTER>\\\\c[4]' + state.name + '\\\\c[0] blocks damage under \\\\c[4]' + threshhold + '\\\\c[0]!';\nvar wait = 60;\nBattleManager.addText(text, wait);\n\nvar pierceElements = [16];\nvar elementNames = '';\nwhile (pierceElements.length > 0) {\n  var elementId = pierceElements.shift();\n  elementNames += '\\\\c[4]' + $dataSystem.elements[elementId] + '\\\\c[0]';\n  if (pierceElements.length > 0) {\n    elementNames += ', ';\n  }\n};\ntext = '<CENTER>Deal more than \\\\c[4]' + threshhold + '\\\\c[0] damage or ' + elementNames + ' damage to break barrier!'\nBattleManager.addText(text, 0);\n</Custom Apply Effect>\n\n<Custom Regenerate Effect>\nvar threshhold = Math.ceil(target.mhp * 0.05);\ntarget.setStateCounter(stateId, threshhold);\n</Custom Regenerate Effect>\n\n<Custom React Effect>\nif (this.isHpEffect() && value > 0) {\n  var pierceElements = [16];\n  var threshhold = Math.ceil(target.mhp * 0.05);\n\n  var elements = this.getItemElements();\n  var pierced = value > threshhold;\n  var elementNames = '';\n\n  if (!pierced) {\n    while (pierceElements.length > 0) {\n      var elementId = pierceElements.shift();\n      if (elements.contains(elementId)) {\n        pierced = true;\n      }\n      elementNames += '\\\\c[4]' + $dataSystem.elements[elementId] + '\\\\c[0]';\n      if (pierceElements.length > 0) {\n        elementNames += ', ';\n      }\n    }\n  }\n\n  var text = '<CENTER>\\\\c[4]' + state.name + '\\\\c[0]';\n  var wait = 60;\n  if (pierced) {\n    target.removeState(stateId);\n    text += ' has been pierced!';\n    BattleManager.addText(text, wait);\n  } else {\n    value = 0;\n    target.startAnimation(53);\n    text += ' blocks damage under \\\\c[4]' + threshhold + '\\\\c[0]!';\n    BattleManager.addText(text, wait);\n    text = '<CENTER>Deal more than \\\\c[4]' + threshhold + '\\\\c[0] damage or ' + elementNames + ' damage to break barrier!'\n    BattleManager.addText(text, 0);\n  }\n}\n</Custom React Effect>","overlay":0,"priority":90,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":266,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":843,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Chaos Barrier","note":"<Category: Enchant>\n<Category: Barrier>\n<Help Description>\nUnit blocks \\dmg less than \\c[4]5% MaxHP\\c[0]; if unit receives more \\dmg than \\c[4]5% MaxHP\\c[0] or \\c[4]Time\\c[0] \\dmg, remove \\c[4]Chaos Barrier\\c[0]\n</Help Description>\n\n<Custom Apply Effect>\nvar threshhold = Math.ceil(target.mhp * 0.05);\ntarget.setStateCounter(stateId, threshhold);\n\nvar text = '<CENTER>\\\\c[4]' + state.name + '\\\\c[0] blocks damage under \\\\c[4]' + threshhold + '\\\\c[0]!';\nvar wait = 60;\nBattleManager.addText(text, wait);\n\nvar pierceElements = [15];\nvar elementNames = '';\nwhile (pierceElements.length > 0) {\n  var elementId = pierceElements.shift();\n  elementNames += '\\\\c[4]' + $dataSystem.elements[elementId] + '\\\\c[0]';\n  if (pierceElements.length > 0) {\n    elementNames += ', ';\n  }\n};\ntext = '<CENTER>Deal more than \\\\c[4]' + threshhold + '\\\\c[0] damage or ' + elementNames + ' damage to break barrier!'\nBattleManager.addText(text, 0);\n</Custom Apply Effect>\n\n<Custom Regenerate Effect>\nvar threshhold = Math.ceil(target.mhp * 0.05);\ntarget.setStateCounter(stateId, threshhold);\n</Custom Regenerate Effect>\n\n<Custom React Effect>\nif (this.isHpEffect() && value > 0) {\n  var pierceElements = [15];\n  var threshhold = Math.ceil(target.mhp * 0.05);\n\n  var elements = this.getItemElements();\n  var pierced = value > threshhold;\n  var elementNames = '';\n\n  if (!pierced) {\n    while (pierceElements.length > 0) {\n      var elementId = pierceElements.shift();\n      if (elements.contains(elementId)) {\n        pierced = true;\n      }\n      elementNames += '\\\\c[4]' + $dataSystem.elements[elementId] + '\\\\c[0]';\n      if (pierceElements.length > 0) {\n        elementNames += ', ';\n      }\n    }\n  }\n\n  var text = '<CENTER>\\\\c[4]' + state.name + '\\\\c[0]';\n  var wait = 60;\n  if (pierced) {\n    target.removeState(stateId);\n    text += ' has been pierced!';\n    BattleManager.addText(text, wait);\n  } else {\n    value = 0;\n    target.startAnimation(53);\n    text += ' blocks damage under \\\\c[4]' + threshhold + '\\\\c[0]!';\n    BattleManager.addText(text, wait);\n    text = '<CENTER>Deal more than \\\\c[4]' + threshhold + '\\\\c[0] damage or ' + elementNames + ' damage to break barrier!'\n    BattleManager.addText(text, 0);\n  }\n}\n</Custom React Effect>","overlay":0,"priority":90,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":267,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"----------","note":"<Physical Taunt>\n<Magical Taunt>\n<Certain Taunt>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":268,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":14,"dataId":1,"value":1}],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Greater Undead","note":"<Custom Passive Condition>\ncondition = !user._undeadDeath;\n</Custom Passive Condition>\n\n<Custom React Effect>\nif (this.isHpRecover()) {\n  value = Math.abs(value);\n}\n</Custom React Effect>\n\n<Custom Respond Effect>\nif (target.hp <= 0) {\n  var elements = this.getItemElements();\n  var killingElements = [7, 13];\n  var killed = false;\n  while (killingElements.length > 0) {\n    var elementId = killingElements.shift();\n    if (elements.contains(elementId)) {\n      killed = true;\n    }\n  }\n  if (killed) {\n    target._undeadDeath = true;\n    target.refresh();\n  } else {\n    target.setHp(1);\n  }\n}\n</Custom Respond Effect>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":269,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":66,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Ball Lightning","note":"<Category: Hex>\n<Help Description>\nFor \\c[4]5\\c[0] turns, deal \\tier1 \\dmg to unit; if unit is \\ko'd before \\c[4]Ball Lightning\\c[0] expires, afflict a random target allied to unit; when \\c[4]Ball Lightning\\c[0] expires, deal \\tier2 \\dmg to all foes\n</Help Description>\n\n<Category: Bypass Death Removal>\n\n<Custom Apply Effect>\ntarget._ballLightningDmg = Math.ceil(origin.mat * 2);\n</Custom Apply Effect>\n\n<Custom Regenerate Effect>\nif (target.isAlive()) {\n  target._ballLightningDmg = target._ballLightningDmg || Math.ceil(origin.mat * 2);\n  target.startAnimation(5);\n  target.gainHp(-target._ballLightningDmg);\n  target.startDamagePopup();\n  if (target.isDead()) {\n    target.performCollapse();\n  }\n  target.clearResult();\n}\nvar turns = target.stateTurns(stateId) - 1;\nif (target.isDead() && turns > 0) {\n  var members = target.friendsUnit().aliveMembers();\n  var newMember = members[Math.floor(Math.random() * members.length)];\n  if (newMember) {\n    newMember.addState(stateId);\n    newMember.setStateTurns(stateId, turns);\n    newMember._ballLightningDmg = target._ballLightningDmg;\n  }\n}\n</Custom Regenerate Effect>\n\n<Custom Leave Effect>\ntarget._ballLightningDmg = Math.ceil(origin.mat * 2);\nvar dmg = target._ballLightningDmg * 2;\nvar allies = target.friendsUnit().aliveMembers();\nfor (var i = 0; i < allies.length; ++i) {\n  var member = allies[i];\n  if (member) {\n    member.gainHp(-dmg);\n    member.startAnimation(76);\n    member.startDamagePopup();\n    if (member.isDead()) {\n      member.performCollapse();\n    }\n    member.clearResult();\n  }\n}\n</Custom Leave Effect>\n\n<Custom Respond Effect>\nif (target.hp <= 0 || target.isDead()) {\n  var turns = target.stateTurns(stateId);\n  if (target.isDead() && turns > 0) {\n    var members = target.friendsUnit().aliveMembers();\n    var index = members.indexOf(target);\n    if (index >= 0) {\n      members.splice(index, 1);\n    }\n    var newMember = members[Math.floor(Math.random() * members.length)];\n    if (newMember) {\n      newMember.addState(stateId);\n      newMember.setStateTurns(stateId, turns);\n      newMember._ballLightningDmg = target._ballLightningDmg;\n    }\n  }\n}\n</Custom Respond Effect>","overlay":0,"priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":270,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Attunement","note":"<Custom Confirm Effect>\nif (this.isHpEffect() && value > 0) {\n  var elements = this.getItemElements();\n  for (var i = 0; i < elements.length; ++i) {\n    var elementId = elements[i];\n    if (target.elementRate(elementId) > 1.00) {\n      var rate = 1.30;\n      value = Math.ceil(value * rate);\n      break;\n    }\n  }\n}\n</Custom Confirm Effect>","overlay":0,"priority":85,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":271,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":118,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Death Nova","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]5\\c[0] turns, if unit dies, inflict \\tier3 \\dmg to all foes and \\c[4]afflict\\c[0] them with \\c[4]Poison\\c[0]\n</Help Description>\n\n<Category: Bypass Death Removal>","overlay":0,"priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":272,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Linken's Sphere","note":"<Custom Regenerate Effect>\nuser._linkenCooldown = user._linkenCooldown || 0;\nuser._linkenCooldown = Math.ceil(user._linkenCooldown - 1, 0);\n</Custom Regenerate Effect>\n\n<Custom Select Effect>\ntarget._linkenCooldown = target._linkenCooldown || 0;\nif (target._linkenCooldown <= 0) {\n  if (this.item() && DataManager.isSkill(this.item()) && this.isForOpponent()) {\n    // Create a pool of blocked Skill TYPES.\n    var blockedtypes = [];\n    // Add the skill type ID's to that pool.\n    blockedtypes.push(16, 17, 18, 19, 20, 21, 22, 23, 24, 25);\n\n    // Create a pool of blocked individual skills.\n    var blockedskills = [];\n    // Add the individual skill ID's to that pool.\n    blockedskills.push(8, 9, 10);\n\n    if (blockedtypes.contains(this.item().stypeId) || blockedskills.contains(this.item().id)) {\n      this._formerItemSuccessRate = this.item().successRate;\n      this.item().successRate = 0;\n      target.startAnimation(53);\n      target._linkenCooldown = 10;\n    }\n  }\n}\n</Custom Select Effect>\n\n<Custom Deselect Effect>\nif (this._formerItemSuccessRate !== undefined) {\n  this.item().successRate = this._formerItemSuccessRate;\n}\n</Custom Deselect Effect>","overlay":0,"priority":100,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":273,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Colossal Courage","note":"<Custom Initiate Effect>\nthis._targetStatesCount = 0;\nif (target) {\n  var states = target.states();\n  for (var i = 0; i < states.length; ++i) {\n    var checkState = states[i];\n    if (checkState && checkState.category.contains('AILMENT')) {\n      this._targetStatesCount += 1;\n    }\n  }\n}\n</Custom Initiate Effect>\n\n<Custom Conclude Effect>\nthis._targetStatesCount = this._targetStatesCount || 0;\nvar statesCount = 0;\nif (target) {\n  var states = target.states();\n  for (var i = 0; i < states.length; ++i) {\n    var checkState = states[i];\n    if (checkState && checkState.category.contains('AILMENT')) {\n      statesCount += 1;\n    }\n  }\n}\nif (!this._gainedCourageBarrier && (statesCount > this._targetStatesCount)) {\n  this._gainedCourageBarrier = true;\n  var barrier = user.level * 10;\n  barrier += Math.ceil(user.mhp * 0.07) * user.opponentsUnit().aliveMembers().length;\n  var turns = 5;\n  user.gainBarrier(barrier, turns);\n}\n</Custom Conclude Effect>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":274,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Maestro Origin","note":"<Category: Song>\n<Category: Aura>\n\n<Ally Aura: 275>\n\n<State Animation: 274>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":275,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":634,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Maestro Aura","note":"<Help Description>\nFor \\c[4]5\\c[0] turns, if unit receives \\magic \\dmg, \\c[4]buff\\c[0] unit's allies' \\c[4]INT\\c[0] for \\c[4]5\\c[0] turns\n</Help Description>\n\n<Custom React Effect>\nif (!this._maestrobuffed && this.isMagical() && this.isHpEffect() && value > 0) {\n  this._maestrobuffed = true;\n  var members = target.friendsUnit().aliveMembers();\n  for (var i = 0; i < members.length; ++i) {\n    var member = members[i];\n    if (member) {\n      var buffId = 4;\n      var turns = 5;\n      member.startAnimation(51);\n      member.addBuff(buffId, turns);\n    }\n  }\n}\n</Custom React Effect>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":276,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Forte Origin","note":"<Category: Song>\n<Category: Aura>\n\n<Ally Aura: 275>\n\n<State Animation: 274>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":277,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":625,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Forte Aura","note":"<Help Description>\nFor \\c[4]5\\c[0] turns, if unit receives \\phys \\dmg, \\c[4]buff\\c[0] unit's allies' \\c[4]ATK\\c[0] for \\c[4]5\\c[0] turns\n</Help Description>\n\n<Custom React Effect>\nif (!this._fortebuffed && this.isPhysical() && this.isHpEffect() && value > 0) {\n  this._fortebuffed = true;\n  var members = target.friendsUnit().aliveMembers();\n  for (var i = 0; i < members.length; ++i) {\n    var member = members[i];\n    if (member) {\n      var buffId = 2;\n      var turns = 5;\n      member.startAnimation(51);\n      member.addBuff(buffId, turns);\n    }\n  }\n}\n</Custom React Effect>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":278,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Adagio Origin","note":"<Category: Song>\n<Category: Aura>\n\n<Ally Aura: 279>\n\n<State Animation: 274>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":279,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":626,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Adagio Aura","note":"<Help Description>\nFor \\c[4]5\\c[0] turns, if unit receives \\phys \\dmg, \\c[4]buff\\c[0] unit's allies' \\c[4]DEF\\c[0] for \\c[4]5\\c[0] turns\n</Help Description>\n\n<Custom React Effect>\nif (!this._fortebuffed && this.isPhysical() && this.isHpEffect() && value > 0) {\n  this._fortebuffed = true;\n  var members = target.friendsUnit().aliveMembers();\n  for (var i = 0; i < members.length; ++i) {\n    var member = members[i];\n    if (member) {\n      var buffId = 3;\n      var turns = 5;\n      member.startAnimation(51);\n      member.addBuff(buffId, turns);\n    }\n  }\n}\n</Custom React Effect>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":280,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Mezzo Origin","note":"<Category: Song>\n<Category: Aura>\n\n<Ally Aura: 281>\n\n<State Animation: 274>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":281,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":632,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Mezzo Aura","note":"<Help Description>\nFor \\c[4]5\\c[0] turns, if unit receives \\magic \\dmg, \\c[4]buff\\c[0] unit's allies' \\c[4]RES\\c[0] for \\c[4]5\\c[0] turns\n</Help Description>\n\n<Custom React Effect>\nif (!this._fortebuffed && this.isMagical() && this.isHpEffect() && value > 0) {\n  this._fortebuffed = true;\n  var members = target.friendsUnit().aliveMembers();\n  for (var i = 0; i < members.length; ++i) {\n    var member = members[i];\n    if (member) {\n      var buffId = 5;\n      var turns = 5;\n      member.startAnimation(51);\n      member.addBuff(buffId, turns);\n    }\n  }\n}\n</Custom React Effect>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":282,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"----------","note":"<Physical Taunt>\n<Magical Taunt>\n<Certain Taunt>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":283,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":1041,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Fire Link","note":"<Category: Enchant>\n<Help Description>\nUnit's next \\c[4]Fire\\c[0] skill will be instant\n</Help Description>\n\n<Instant Skill: 601 to 640>\n\n<Custom Initiate Effect>\nif (this.isSkill() && this.item().stypeId === 16) {\n  user.removeState(stateId);\n}\n</Custom Initiate Effect>","overlay":0,"priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":284,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":1050,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Ice Link","note":"<Category: Enchant>\n<Help Description>\nUnit's next \\c[4]Ice\\c[0] skill will be instant\n</Help Description>\n\n<Instant Skill: 641 to 680>\n\n<Custom Initiate Effect>\nif (this.isSkill() && this.item().stypeId === 17) {\n  user.removeState(stateId);\n}\n</Custom Initiate Effect>","overlay":0,"priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":285,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":1043,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Volt Link","note":"<Category: Enchant>\n<Help Description>\nUnit's next \\c[4]Volt\\c[0] skill will be instant\n</Help Description>\n\n<Instant Skill: 681 to 720>\n\n<Custom Initiate Effect>\nif (this.isSkill() && this.item().stypeId === 18) {\n  user.removeState(stateId);\n}\n</Custom Initiate Effect>","overlay":0,"priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":286,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":1048,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Water Link","note":"<Category: Enchant>\n<Help Description>\nUnit's next \\c[4]Water\\c[0] skill will be instant\n</Help Description>\n\n<Instant Skill: 721 to 760>\n\n<Custom Initiate Effect>\nif (this.isSkill() && this.item().stypeId === 19) {\n  user.removeState(stateId);\n}\n</Custom Initiate Effect>","overlay":0,"priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":287,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":1042,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Earth Link","note":"<Category: Enchant>\n<Help Description>\nUnit's next \\c[4]Earth\\c[0] skill will be instant\n</Help Description>\n\n<Instant Skill: 761 to 800>\n\n<Custom Initiate Effect>\nif (this.isSkill() && this.item().stypeId === 20) {\n  user.removeState(stateId);\n}\n</Custom Initiate Effect>","overlay":0,"priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":288,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":1045,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Air Link","note":"<Category: Enchant>\n<Help Description>\nUnit's next \\c[4]Earth\\c[0] skill will be instant\n</Help Description>\n\n<Instant Skill: 801 to 840>\n\n<Custom Initiate Effect>\nif (this.isSkill() && this.item().stypeId === 21) {\n  user.removeState(stateId);\n}\n</Custom Initiate Effect>","overlay":0,"priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":289,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":1055,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Holy Link","note":"<Category: Enchant>\n<Help Description>\nUnit's next \\c[4]Holy\\c[0] skill will be instant\n</Help Description>\n\n<Instant Skill: 841 to 880>\n\n<Custom Initiate Effect>\nif (this.isSkill() && this.item().stypeId === 22) {\n  user.removeState(stateId);\n}\n</Custom Initiate Effect>","overlay":0,"priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":290,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":1054,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Dark Link","note":"<Category: Enchant>\n<Help Description>\nUnit's next \\c[4]Dark\\c[0] skill will be instant\n</Help Description>\n\n<Instant Skill: 881 to 920>\n\n<Custom Initiate Effect>\nif (this.isSkill() && this.item().stypeId === 23) {\n  user.removeState(stateId);\n}\n</Custom Initiate Effect>","overlay":0,"priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":291,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":1053,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Time Link","note":"<Category: Enchant>\n<Help Description>\nUnit's next \\c[4]Time\\c[0] skill will be instant\n</Help Description>\n\n<Instant Skill: 921 to 960>\n\n<Custom Initiate Effect>\nif (this.isSkill() && this.item().stypeId === 24) {\n  user.removeState(stateId);\n}\n</Custom Initiate Effect>","overlay":0,"priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":292,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":1052,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Chaos Link","note":"<Category: Enchant>\n<Help Description>\nUnit's next \\c[4]Chaos\\c[0] skill will be instant\n</Help Description>\n\n<Instant Skill: 961 to 1000>\n\n<Custom Initiate Effect>\nif (this.isSkill() && this.item().stypeId === 25) {\n  user.removeState(stateId);\n}\n</Custom Initiate Effect>","overlay":0,"priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":293,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"----------","note":"<Physical Taunt>\n<Magical Taunt>\n<Certain Taunt>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":294,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Bubble Passive","note":"<Custom Battle Effect>\nvar bubbleWrapId = 295;\nuser.addState(bubbleWrapId);\nuser._bubbleWrapCooldown = 0;\n</Custom Battle Effect>\n\n<Custom Regenerate Effect>\nuser._bubbleWrapCooldown = user._bubbleWrapCooldown || 0;\nif (user._bubbleWrapCooldown > 0) {\n  user._bubbleWrapCooldown -= 1;\n  if (user._bubbleWrapCooldown <= 0) {\n    var bubbleWrapId = 295;\n    user.startAnimation(82);\n    user.addState(bubbleWrapId);\n  }\n}\n</Custom Regenerate Effect>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":295,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":67,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Bubble Wrap","note":"<State Animation: 234>\n<Category: Enchant>\n<Help Description>\nEvery \\c[4]3\\c[0] turns, unit will block non-\\c[4]Volt DMG\\c[0]\n</Help Description>\n\n<Custom React Effect>\nif (this.isHpEffect() && value > 0) {\n  var elements = this.getItemElements();\n  var lightningElementId = 9;\n  if (!elements.contains(lightningElementId)) {\n    value = 0;\n  }\n  target.startAnimation(4);\n  target.removeState(stateId);\n}\n</Custom React Effect>\n\n<Custom Remove Effect>\nuser._bubbleWrapCooldown = 3;\n</Custom Remove Effect>","overlay":0,"priority":100,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":296,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":1000,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Memory Shield 1","note":"<Help Description>\nWhile \\c[4]Memory Shield\\c[0] is active, unit cannot take damage from skills unit was struck by this battle\n</Help Description>\n\n<Custom Apply Effect>\nuser._memoryShield = user._memoryShield || [];\nuser.setStateCounter(stateId, user._memoryShield.length);\n</Custom Apply Effect>\n\n<Custom Select Effect>\nif (this.isSkill() && !this.isAttack() && this.isForOpponent()) {\n  var skillId = this.item().id;\n  if (target._memoryShield.contains(skillId)) {\n    this._formerItemSuccessRateMS = this.item().successRate;\n    this.item().successRate = 0;\n  } else {\n    target._memoryShield.push(skillId);\n    target.setStateCounter(stateId, target._memoryShield.length);\n    var skill = $dataSkills[skillId];\n    var text = '<CENTER>\\\\c[4]\\\\i[' + skill.iconIndex + ']' + skill.name + '\\\\c[0] added to \\\\c[4]Memory Shield\\\\c[0]!';\n    var wait = 60;\n    BattleManager.addText(text, wait);\n  }\n}\n</Custom Select Effect>\n\n<Custom Deselect Effect>\nif (this._formerItemSuccessRate !== undefined) {\n  this.item().successRate = this._formerItemSuccessRateMS;\n}\n</Custom Deselect Effect>","overlay":0,"priority":100,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":297,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":1016,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Memory Shield 2","note":"<Help Description>\nWhile \\c[4]Memory Shield\\c[0] is active, unit cannot take damage from skills unit was struck by this battle\n</Help Description>\n\n<Custom Apply Effect>\nuser._memoryShield = user._memoryShield || [];\nuser.setStateCounter(stateId, user._memoryShield.length);\n</Custom Apply Effect>\n\n<Custom Select Effect>\nif (this.isSkill() && !this.isAttack() && this.isForOpponent()) {\n  var skillId = this.item().id;\n  if (target._memoryShield.contains(skillId)) {\n    this._formerItemSuccessRateMS = this.item().successRate;\n    this.item().successRate = 0;\n  } else {\n    target._memoryShield.push(skillId);\n    var skill = $dataSkills[skillId];\n    var text = '<CENTER>\\\\c[4]\\\\i[' + skill.iconIndex + ']' + skill.name + '\\\\c[0] added to \\\\c[4]Memory Shield\\\\c[0]!';\n    var wait = 60;\n    BattleManager.addText(text, wait);\n    for (;;) {\n      if (target._memoryShield.length > 8) {\n        var skill = $dataSkills[target._memoryShield.shift()];\n        target.startAnimation(5);\n        text = '<CENTER>\\\\c[4]\\\\i[' + skill.iconIndex + ']' + skill.name + '\\\\c[0] is removed from \\\\c[4]Memory Shield\\\\c[0]!';\n        BattleManager.addText(text);\n      } else {\n        break;\n      }\n    }\n    target.setStateCounter(stateId, target._memoryShield.length);\n  }\n}\n</Custom Select Effect>\n\n<Custom Deselect Effect>\nif (this._formerItemSuccessRate !== undefined) {\n  this.item().successRate = this._formerItemSuccessRateMS;\n}\n</Custom Deselect Effect>","overlay":0,"priority":100,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":298,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":920,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Memory Shield 3","note":"<Help Description>\nWhile \\c[4]Memory Shield\\c[0] is active, unit cannot take damage from skills unit was struck by this battle\n</Help Description>\n\n<Custom Apply Effect>\nuser._memoryShield = user._memoryShield || [];\nuser.setStateCounter(stateId, user._memoryShield.length);\n</Custom Apply Effect>\n\n<Custom Select Effect>\nif (this.isSkill() && !this.isAttack() && this.isForOpponent()) {\n  var skillId = this.item().id;\n  if (target._memoryShield.contains(skillId)) {\n    this._formerItemSuccessRateMS = this.item().successRate;\n    this.item().successRate = 0;\n  } else {\n    target._memoryShield.push(skillId);\n    var skill = $dataSkills[skillId];\n    var text = '<CENTER>\\\\c[4]\\\\i[' + skill.iconIndex + ']' + skill.name + '\\\\c[0] added to \\\\c[4]Memory Shield\\\\c[0]!';\n    var wait = 60;\n    BattleManager.addText(text, wait);\n    for (;;) {\n      if (target._memoryShield.length > 8) {\n        var skill = $dataSkills[target._memoryShield.shift()];\n        target.startAnimation(5);\n        text = '<CENTER>\\\\c[4]\\\\i[' + skill.iconIndex + ']' + skill.name + '\\\\c[0] is removed from \\\\c[4]Memory Shield\\\\c[0]!';\n        BattleManager.addText(text);\n      } else {\n        break;\n      }\n    }\n    target.setStateCounter(stateId, target._memoryShield.length);\n  }\n} else if (this.isAttack() && target._memoryShield.length > 0) {\n  var skill = $dataSkills[target._memoryShield.shift()];\n  text = '<CENTER>\\\\c[4]\\\\i[' + skill.iconIndex + ']' + skill.name + '\\\\c[0] is removed from \\\\c[4]Memory Shield\\\\c[0]!';\n  target.startAnimation(5);\n  target.setStateCounter(stateId, target._memoryShield.length);\n  var wait = 60;\n  BattleManager.addText(text, wait);\n}\n</Custom Select Effect>\n\n<Custom Deselect Effect>\nif (this._formerItemSuccessRate !== undefined) {\n  this.item().successRate = this._formerItemSuccessRateMS;\n}\n</Custom Deselect Effect>","overlay":0,"priority":100,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":299,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":1536,"maxTurns":8,"message1":"","message2":"","message3":"","message4":"","minTurns":8,"motion":0,"name":"Magic Resonance","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]8\\c[0] turns, unit deals more \\magic \\dmg relative to how many allies are \\c[4]enchanted\\c[0] with \\c[4]Magic Resonance\\c[0]\n</Help Description>\n\n<Custom Confirm Effect>\nif (this.isSkill() && this.isMagical() && this.isHpEffect() && value > 0) {\n  var skillTypes = [];\n  // Insert the skill types you want applied here:\n  skillTypes.push(16, 17, 18, 19, 20, 21, 22, 23, 24, 25);\n  if (skillTypes.contains(this.item().stypeId)) {\n    var count = 0;\n    var allies = user.friendsUnit().aliveMembers();\n    while (allies.length > 0) {\n      ally = allies.shift();\n      if (ally && ally.isStateAffected(stateId) && ally !== user) {\n        count += 1;\n      }\n    }\n    // No allies\n    if (count <= 0) {\n      var multiplier = 1.00;\n    // One ally\n    } else if (count === 1) {\n      var multiplier = 1.10;\n    // Two allies\n    } else if (count === 2) {\n      var multiplier = 1.15;\n    // Three or more\n    } else {\n      var multiplier = 1.20;\n    }\n    value *= multiplier;\n    value = Math.ceil(value);\n  }\n}\n</Custom Confirm Effect>","overlay":0,"priority":80,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":300,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Damage Dispersion","note":"<Custom React Effect>\nif (this.isHpEffect() && value > 0) {\n  var group = target.friendsUnit().aliveMembers();\n  var rate = 0.15;\n  rate = Math.min(rate, 1 / Math.max(1, group.length - 1));\n  var dmg = Math.floor(value * rate);\n  for (var i = 0; i < group.length; ++i) {\n    var member = group[i];\n    if (member && member !== target) {\n      value -= dmg;\n      member.startAnimation(2);\n      member.gainHp(-dmg);\n      member.startDamagePopup();\n      if (member.isDead()) {\n        member.performCollapse();\n      }\n      member.clearResult();\n    }\n  }\n  value = Math.max(value, 0);\n}\n</Custom React Effect>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":301,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":225,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Radiant Glory","note":"<Category: Enchant>\n<Help Description>\nLower \\c[4]25%\\c[0] of unit's current \\c[4]MP\\c[0]; \\c[4]2\\c[0] turns after unit is \\ko'd, revive unit with \\c[4]HP\\c[0] equal to \\c[4]400%\\c[0] of unit's \\c[4]MP\\c[0] used when \\c[4]Radiant Glory\\c[0] was applied, then remove \\c[4]Radiant Glory\\c[0]\n</Help Description>\n\n<Category: Bypass Death Removal>\n\n<Custom Apply Effect>\nuser._radiantGloryDeadTurns = 0;\nuser._radiantGloryMp = Math.ceil(user.mp / 4);\nuser.gainMp(-user._radiantGloryMp);\nuser.startDamagePopup();\nuser.clearResult();\n</Custom Apply Effect>\n\n<Custom Remove Effect>\nuser._radiantGloryDeadTurns = undefined;\nuser._radiantGloryHp = undefined;\n</Custom Remove Effect>\n\n<Custom Turn End Effect>\nif (user.isDead()) {\n  user._radiantGloryDeadTurns = user._radiantGloryDeadTurns || 0;\n  user._radiantGloryDeadTurns += 1;\n  if (user._radiantGloryDeadTurns >= 2) {\n    user._radiantGloryMp = user._radiantGloryMp || 1;\n    user.gainHp(user._radiantGloryMp * 4);\n    user.startDamagePopup();\n    user.clearResult();\n    user.startAnimation(49);\n    user.removeState(stateId);\n    var skillId = 863;\n    var turns = 10;\n    user.setCooldown(skillId, turns);\n  }\n}\n</Custom Turn End Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":302,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Beast Boost","note":"<Custom Establish Effect>\nif (!this._beastBoostApplied && (target.isDead() || target.hp <= 0)) {\n  this._beastBoostApplied = true;\n  var boostParam = 2;\n  for (var i = 3; i < 8; ++i) {\n    if (user.param(i) > user.param(boostParam)) {\n      boostParam = i;\n    }\n  }\n  var turns = 5;\n  user.addBuff(boostParam, turns);\n  user.startAnimation(51);\n}\n</Custom Establish Effect>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":303,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Cup of Life","note":"<Custom Confirm Effect>\nvar hpdiff = target.mhp - target.hp;\nif (this.isHpEffect() && target.isAlive() && value < 0 && (Math.abs(value) > hpdiff)) {\n  var difference = Math.abs(value) - hpdiff;\n  value = -hpdiff;\n  user.gainHp(difference);\n  user.startDamagePopup();\n  user.clearResult();\n  user.startAnimation(46);\n}\n</Custom Confirm Effect>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":304,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Daring Warrior","note":"<Custom Battle Effect>\nvar padawanStates = [305, 306, 307];\nfor (var i = 0; i < padawanStates.length; ++i) {\n  var bonusState = padawanStates[i];\n  user.addState(bonusState);\n}\n</Custom Battle Effect>\n\n<Custom React Effect>\nif (this.isHpEffect() && value > 0 && target.result().critical) {\n  var padawanStates = [305, 306, 307];\n  var currentStates = [];\n  for (var i = 0; i < padawanStates.length; ++i) {\n    var bonusState = padawanStates[i];\n    if (target.isStateAffected(bonusState)) {\n      currentStates.push(bonusState);\n    }\n  }\n  if (currentStates.length > 0) {\n    var removedState = currentStates[Math.floor(Math.random() * currentStates.length)];\n    target.removeState(removedState);\n  }\n}\n</Custom React Effect>\n\n<Custom Establish Effect>\nif (!this._regainPadawanStates && (target.isDead() || target.hp <= 0)) {\n  var padawanStates = [305, 306, 307];\n  for (var i = 0; i < padawanStates.length; ++i) {\n    var bonusState = padawanStates[i];\n    user.addState(bonusState);\n  }\n}\n</Custom Establish Effect>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":305,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":21,"dataId":2,"value":1.45}],"iconIndex":250,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Daring +45% ATK","note":"","overlay":0,"priority":52,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":306,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":21,"dataId":6,"value":1.45}],"iconIndex":254,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Daring +45% AGI","note":"","overlay":0,"priority":51,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":307,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":21,"dataId":7,"value":1.1}],"iconIndex":255,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Daring +10% LUK","note":"","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":308,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":658,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Exertion Rune","note":"<Help Description>\nUnit starts battle with an increase of \\c[4]20%\\c[0] \\dmg and increases by \\c[4]+20%\\c[0] each turn up to \\c[4]+120%\\c[0]\n</Help Description>\n\n<Custom Battle Effect>\nuser._exertionMultiplier = 0.20;\nvar text = '+' + Math.floor(user._exertionMultiplier * 100) + '%'\nuser.setStateCounter(stateId, text);\n</Custom Battle Effect>\n\n<Custom Confirm Effect>\nif (this.isMagical() && this.isHpEffect() && value > 0) {\n  user._exertionMultiplier = user._exertionMultiplier || 0.20;\n  value += Math.floor(value * user._exertionMultiplier);\n}\n</Custom Confirm Effect>\n\n<Custom Regenerate Effect>\nuser._exertionMultiplier = user._exertionMultiplier || 0.20;\nuser._exertionMultiplier = (user._exertionMultiplier + 0.20).clamp(0.20, 1.20);\nvar text = '+' + Math.floor(user._exertionMultiplier * 100) + '%'\nuser.setStateCounter(stateId, text);\n</Custom Regenerate Effect>","overlay":0,"priority":100,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":309,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Subdue Strike","note":"<Custom Turn End Effect>\nif (!user._subdueStruck) {\n  user.startAnimation(2);\n  var turns = 3;\n  if (user.isBuffAffected(6)) {\n    user.addBuff(2, turns);\n    user.addBuff(6, turns);\n  } else {\n    user.addBuff(6, turns);    \n  }\n}\nuser._subdueStruck = false;\n</Custom Turn End Effect>\n\n<Custom Respond Effect>\nif (target.result() && target.result().hpDamage > 0) {\n  target._subdueStruck = true;\n}\n</Custom Respond Effect>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":310,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":1363,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Stormflurry","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]5\\c[0] turns, if unit uses \\c[4]Volt\\c[0] skills, unit has a \\c[4]20%\\c[0] chance to strike an additional time for \\c[4]40%\\c[0] of damage dealt; This effect can chain off itself\n</Help Description>\n\n<Custom Establish Effect>\nvar skills = [];\nvar skillTypes = [];\n// Insert the skills this passive can be used with.\nskills.push(681, 689, 697, 705, 713, 719);\n// Insert the skill types this passive can be used with.\nskillTypes.push(18);\n\nif (this.isSkill() && (skills.contains(this.item().id)) || skillTypes.contains(this.item().stypeId)) {\n  if (target && target.result() && target.result().hpDamage > 0) {\n    var originalResult = JsonEx.makeDeepCopy(target._result);\n    target.clearResult();\n    var extraDmg = Math.ceil(0.40 * originalResult.hpDamage);\n    var successRate = 0.20;\n    var struck = 0;\n    var maxHits = 5;\n    for (;;) {\n      if (target.isAlive() && Math.random() < successRate) {\n        struck += 1;\n        target.gainHp(-extraDmg);\n        target.startDamagePopup();\n        if (target.isDead()) {\n          target.performCollapse();\n        }\n        target.clearResult();\n        if (struck >= maxHits) {\n          break;\n        }\n      } else {\n        break;\n      }\n    }\n    if (struck > 0) {\n      target.startAnimation(5);\n    }\n    target._result = originalResult;\n  }\n}\n</Custom Establish Effect>","overlay":0,"priority":100,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":311,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":1037,"maxTurns":2,"message1":"","message2":"","message3":"","message4":"","minTurns":2,"motion":0,"name":"Iron Skin","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]2\\c[0] turns, damage to be dealt to the unit is \\c[4]50%\\c[0]-added to the unit's \\c[4]Barrier\\c[0] instead for \\c[4]3\\c[0] turns\n</Help Description>\n\n<Custom React Effect>\nif (this.isHpEffect() && value > 0) {\n  var turns = 3;\n  var shieldGain = Math.ceil(value * 0.50);\n  target.gainBarrier(shieldGain, turns);\n  value = 0;\n}\n</Custom React Effect>","overlay":0,"priority":100,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":312,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":21,"dataId":3,"value":1.1},{"code":21,"dataId":5,"value":1.1}],"iconIndex":209,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Stockpile","note":"<Help Description>\nUnit gains \\c[4]+10% DEF\\c[0] & \\c[4]RES\\c[0] and has a \\c[4]Stockpile\\c[0] maximum of \\c[4]3\\c[0] times\n</Help Description>\n\n<Custom Apply Effect>\nuser._stockpile = user._stockpile || 0;\nuser._stockpile += 1;\nuser._stockpile = Math.min(user._stockpile, 3);\nuser.setStateCounter(stateId, user._stockpile);\n</Custom Apply Effect>\n\n<Custom Remove Effect>\nuser._stockpile = 0;\nuser.setStateCounter(stateId, user._stockpile);\n</Custom Remove Effect>","overlay":0,"priority":100,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":313,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Moody","note":"<Custom Regenerate Effect>\nvar turns = 5;\n\nvar allowedParams = [];\n// Insert Param ID's you want to randomly add here:\nallowedParams.push(2, 3, 4, 5, 6, 7);\n\nvar result = allowedParams.slice();\nvar paramId;\nwhile (result.length > 0) {\n  paramId = result[Math.floor(Math.random() * result.length)];\n  result.splice(result.indexOf(paramId), 1);\n  if (!user.isMaxBuffAffected(paramId)) {\n    user.addBuff(paramId, turns);\n    user.addBuff(paramId, turns);\n    break;\n  }\n}\n\nvar result = allowedParams.slice();\n\nif (paramId !== undefined) {\n  var index = result.indexOf(paramId);\n  if (index > -1) {\n    result.splice(index, 1);\n  }\n}\n\nwhile (result.length > 0) {\n  paramId = result[Math.floor(Math.random() * result.length)];\n  result = result.splice(result.indexOf(paramId), 1);\n  if (!user.isMaxDebuffAffected(paramId)) {\n    user.addDebuff(paramId, turns);\n    break;\n  }\n}\n</Custom Regenerate Effect>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":314,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":147,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Tinted Lens","note":"","overlay":0,"priority":25,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":315,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":75,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Warping Shield","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]5\\c[0] turns, any skills used by the unit's opponents against the unit will gain an additional \\c[4]2\\c[0] turns \\c[4]cooldown\\c[0]\n</Help Description>\n\n<Custom Deselect Effect>\nif (!this._warpingShield && user.isActor() !== target.isActor()) {\n  if (this.isSkill() && !this.isAttack()) {\n    this._warpingShield = true;\n    var turns = 2;\n    user.addCooldown(this.item().id, turns);\n  }\n}\n</Custom Deselect Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":316,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":999,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Memory Shield RD","note":"<Custom Apply Effect>\n$gameTemp._memorySkills = [];\nuser.setStateCounter(stateId, $gameTemp._memorySkills.length);\n</Custom Apply Effect>\n\n<Custom Select Effect>\nif (this.isSkill() && !this.isAttack() && this.isForOpponent()) {\n  var bypassedSkills = [];\n  bypassedSkills.push(122, 130, 138, 146, 154);\n  var skillId = this.item().id;\n  if (!bypassedSkills.contains(this.item().id)) {\n    $gameTemp._memorySkills.push(skillId);\n    target.setStateCounter(stateId, $gameTemp._memorySkills.length);\n    var skill = $dataSkills[skillId];\n    var text = '<CENTER>\\\\c[4]\\\\i[' + skill.iconIndex + ']' + skill.name + '\\\\c[0] added to \\\\c[4]Memory Shield\\\\c[0]!';\n    var wait = 60;\n    BattleManager.addText(text, wait);\n  }\n}\n</Custom Select Effect>\n\n<Custom Deselect Effect>\nif (!this._warpingShield && user.isActor() !== target.isActor()) {\n  var bypassedSkills = [];\n  bypassedSkills.push(122, 130, 138, 146, 154);\n  if (this.isSkill() && !this.isAttack() && !bypassedSkills.contains(this.item().id)) {\n    this._warpingShield = true;\n    var turns = 5;\n    var id = this.item().id;\n    user.addCooldown(id, turns);\n  }\n}\n</Custom Deselect Effect>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":317,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":120,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Calculated Strike","note":"<Help Description>\nEach time unit initiates a \\c[4]basic attack\\c[0], increase \\c[4]Calculated Strikes\\c[0] by \\c[4]1\\c[0] stack; if unit has \\c[4]3 Calculated Strike\\c[0] stacks, unit's next \\c[4]basic attack\\c[0] deals an additional \\c[4]+60%\\c[0] bonus \\dmg and \\c[4]+45\\c[0] true \\dmg\n</Help Description>\n\n<Custom Passive Condition>\ncondition = $gameParty.inBattle();\n</Custom Passive Condition>\n\n<Custom Battle Effect>\nuser._calculatedStrikeStack = 0;\nuser.setStateCounter(stateId, '0');\n</Custom Battle Effect>\n\n<Custom Initiate Effect>\nif (this.isAttack()) {\n  user._checkCalculatedStrike = true;\n}\n</Custom Initiate Effect>\n\n<Custom Action End Effect>\nif (user._checkCalculatedStrike) {\n  user._calculatedStrikeStack = user._calculatedStrikeStack || 0;\n  user._calculatedStrikeStack += 1;\n  if (user._calculatedStrikeStack >= 4) {\n    user._calculatedStrikeStack = 0;\n  }\n  user.setStateCounter(stateId, user._calculatedStrikeStack);\n  user._checkCalculatedStrike = false;\n}\n</Custom Action End Effect>\n\n<Custom Confirm Effect>\nuser._calculatedStrikeStack = user._calculatedStrikeStack || 0;\nif (user._calculatedStrikeStack === 3) {\n  if (this.isAttack() && this.isHpEffect() && value > 0) {\n    var trueDmg = 45;\n    target.gainHp(-trueDmg);\n    target.startDamagePopup();\n    target.clearResult();\n    var rate = 0.60;\n    var bonus = Math.ceil(rate * value);\n    value += bonus;\n    target.startAnimation(2);\n  }\n}\n</Custom Confirm Effect>","overlay":0,"priority":100,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":318,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Minion Barrier","note":"<Custom Passive Condition>\ncondition = user.friendsUnit().aliveMembers().length > 1;\n</Custom Passive Condition>\n\n<Custom React Effect>\nif (this.isHpEffect() && value > 0) {\n  var allies = target.friendsUnit().aliveMembers();\n  var dmg = Math.ceil(value / Math.max(1, allies.length - 1));\n  if (allies.length - 1 > 0) {\n    value = 0;\n  }\n  for (var i = 0; i < allies.length; ++i) {\n    var ally = allies[i];\n    if (ally && ally !== target) {\n      ally.gainHp(-dmg);\n      ally.startDamagePopup();\n      ally.startAnimation(12);\n      if (ally.isDead()) {\n        ally.performCollapse();\n      }\n      ally.clearResult();\n    }\n  }\n}\n</Custom React Effect>","overlay":0,"priority":100,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":319,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Total Casts","note":"<Custom Battle Effect>\nuser._totalSpellsCasted = 0;\n</Custom Battle Effect>\n\n<Custom Action Start Effect>\nuser._totalSpellsCasted = user._totalSpellsCasted || 0;\nvar action = user.currentAction();\nif (action.isSkill() && action.isMagical()) {\n  user._totalSpellsCasted += 1;\n}\n</Custom Action Start Effect>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":320,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":21,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Revenge","note":"<Help Description>\nThis unit will deal \\c[4]+10%\\c[0] \\dmg for each dead ally\n</Help Description>\n\n<Custom Passive Condition>\ncondition = user.friendsUnit().deadMembers().length > 1 && $gameParty.inBattle();\n</Custom Passive Condition>\n\n<Custom Confirm Effect>\nif (this.isHpEffect() && value > 0) {\n  var totalDeadAllies = user.friendsUnit().deadMembers().length;\n  var bonus = totalDeadAllies * 0.10;\n  value += Math.ceil(bonus * value);\n}\n</Custom Confirm Effect>","overlay":0,"priority":100,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":321,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":13,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Limit Breaker","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]5\\c[0] turns, user's maximum stat are increased by \\c[4]+100\\c[0] for each stat\n</Help Description>\n\n// Req Buffs & States Core\n// Req Base Parameter Control\n\n<Custom Apply Effect>\nvar affectedParams = [2, 3, 4, 5, 6, 7];\nwhile (affectedParams.length > 0) {\n  var paramId = affectedParams.shift();\n  var currentMax = user.paramMax(paramId);\n  currentMax += 100;\n  user.setCustomParamLimitMax(paramId, currentMax);\n}\n</Custom Apply Effect>\n\n<Custom Remove Effect>\nuser.clearCustomParamLimits();\n</Custom Remove Effect>","overlay":0,"priority":100,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":322,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":222,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Chaos Deflector","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]5\\c[0] turns, when unit takes direct \\dmg, \\c[4]80%\\c[0] chance to divert the \\dmg up to unit's \\c[4]DEF\\c[0] or \\c[4]RES\\c[0] (whichever is higher) to any number of random teammates evenly with diverted \\dmg\n</Help Description>\n\n<Custom React Effect>\nif (this.isHpEffect() && value > 0) {\n  var successRate = 0.80;\n  if (Math.random() < successRate) {\n    var allies = target.friendsUnit().aliveMembers();\n    if (allies.length > 1) {\n      allies.splice(allies.indexOf(target), 1);\n      var max = Math.min(allies.length, 4);\n      var min = 1;\n      var totalTargets = Math.floor(Math.random() * (max - min + 1) + min);\n      while (allies.length > totalTargets) {\n        allies.splice(Math.floor(Math.random() * allies.length), 1);\n      }\n\n      var redirectedDamage = Math.min(value, Math.max(target.def * 4, target.mdf * 4));\n      redirectedDamage = Math.ceil(redirectedDamage / totalTargets);\n      value = value - redirectedDamage;\n\n      while (allies.length > 0) {\n        var member = allies.shift();\n        if (member) {\n          member.gainHp(-redirectedDamage);\n          member.startDamagePopup();\n          member.startAnimation(2);\n          if (member.isDead()) {\n            member.performCollapse();\n          }\n          member.clearResult();\n        }\n      }\n    }\n  }\n}\n</Custom React Effect>","overlay":0,"priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":323,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":82,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Cicada Dodge","note":"<Category: Enchant>\n<Help Description>\nUnit will dodge the next \\c[4]3\\c[0] physical hits, then remove this state, and move back \\c[4]1\\c[0] row\n</Help Description>\n\n<Custom Apply Effect>\nuser._cicadaDodge = 3;\nuser.setStateCounter(stateId, user._cicadaDodge);\n</Custom Apply Effect>\n\n<Custom Remove Effect>\nuser._cicadaDodge = 0;\nuser.setStateCounter(stateId, user._cicadaDodge);\nuser.alterRow(1);\n</Custom Remove Effect>\n\n<Custom Select Effect>\nif (this.item() && this.isPhysical()) {\n  this._formerItemSuccessRate = this.item().successRate;\n  this.item().successRate = 0;\n}\n</Custom Select Effect>\n\n<Custom Deselect Effect>\nif (this._formerItemSuccessRate !== undefined) {\n  this.item().successRate = this._formerItemSuccessRate;\n  target._cicadaDodge = target._cicadaDodge || 3;\n  target._cicadaDodge -= 1;\n  target.setStateCounter(stateId, target._cicadaDodge);\n  if (target._cicadaDodge <= 0) {\n    target.removeState(stateId);\n  }\n}\n</Custom Deselect Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":324,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":118,"maxTurns":2,"message1":"","message2":"","message3":"","message4":"","minTurns":2,"motion":0,"name":"Demon Portal","note":"<Category: Enchant>\n<Help Description>\nFor \\c[4]2\\c[0] turns, unit receives \\c[4]50%\\c[0] incoming \\dmg; \\dmg will be stored as \\c[4]Demon Power\\c[0]; when Demon Portal expires, deal \\c[4]Dark\\c[0] \\dmg based on \\c[4]Demon Power\\c[0] to a random foe\n</Help Description>\n\n<Custom Apply Effect>\ntarget._demonPortalDmg = 0;\ntarget.setStateCounter(stateId, target._demonPortalDmg);\n</Custom Apply Effect>\n\n<Custom Leave Effect>\nvar dmg = target._demonPortalDmg;\ntarget._demonPortalDmg = 0;\ntarget.setStateCounter(stateId, target._demonPortalDmg);\nvar members = target.opponentsUnit().aliveMembers();\nvar member = members[Math.floor(Math.random() * members.length)];\nif (member) {\n  var darkId = 14;\n  dmg = Math.ceil(member.elementRate(darkId) * dmg);\n  member.startAnimation(102);\n  member.gainHp(-dmg);\n  member.startDamagePopup();\n  if (member.isDead()) {\n    member.performCollapse();\n  }\n  member.clearResult();\n}\n</Custom Leave Effect>\n\n<Custom React Effect>\nif (this.isHpEffect() && value > 0) {\n  target._demonPortalDmg = target._demonPortalDmg || 0;\n  value = Math.ceil(value * 0.50);\n  target._demonPortalDmg += value;\n  target.startAnimation(2);\n  target.setStateCounter(stateId, target._demonPortalDmg);\n}\n</Custom React Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":325,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":81,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Dragon Shield","note":"<Category: Enchant>\n<Help Description>\nLasts \\c[4]5\\c[0] turns; unit blocks \\dmg equal to \\c[4]Dragon Shield\\c[0], starting with \\c[4]1,000\\c[0], each turn gaining \\c[4]500\\c[0] up to a maximum of \\c[4]1,000 Dragon Shield\\c[0]\n</Help Description>\n\n<Custom Apply Effect>\ntarget._dragonBarrierShield = 1000;\ntarget.setStateCounter(stateId, this._dragonBarrierShield);\n</Custom Apply Effect>\n\n<Custom Regenerate Effect>\nvar max = 1000;\nvar min = 0;\nvar gained = 500;\ntarget._dragonBarrierShield += gained;\ntarget._dragonBarrierShield = target._dragonBarrierShield.clamp(min, max);\ntarget.setStateCounter(stateId, this._dragonBarrierShield);\ntarget.startAnimation(53);\n</Custom Regenerate Effect>\n\n<Custom React Effect>\nif (this.isHpEffect() && value > 0 && target._dragonBarrierShield > 0) {\n  var reduction = Math.min(value, target._dragonBarrierShield);\n  value -= reduction;\n  target._dragonBarrierShield -= reduction;\n  target.setStateCounter(stateId, target._dragonBarrierShield);\n  target.startAnimation(2);\n}\n</Custom React Effect>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":326,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":222,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Tetrakarn","note":"<Category: Enchant>\n<Help Description>\nRemove other \"karn\" enchantments; unit will reflect \\c[4]100%\\c[0] \\phys \\dmg to its next attacker, then remove Tetrakarn\n</Help Description>\n\n<Custom Apply Effect>\nvar removeStates = [];\nremoveStates.push(327);\n</Custom Apply Effect>\n\n<Custom React Effect>\nif (this.isPhysical() && this.isHpEffect() && value > 0) {\n  var reflectRate = 1.00;\n  var reflectDmg = Math.ceil(value * reflectRate);\n  user.startAnimation(2);\n  user.gainHp(-reflectDmg);\n  user.startDamagePopup();\n  if (user.isDead()) {\n    user.performCollapse();\n  }\n  user.clearResult();\n  value = 0;\n  this._activatedDmgReflect = true;\n}\n</Custom React Effect>\n\n<Custom Respond Effect>\nif (this._activatedDmgReflect) {\n  target.result().hpAffected = false;\n  target.removeState(stateId);\n}\n</Custom Respond Effect>","overlay":0,"priority":100,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":327,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":222,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Makarakarn","note":"<Category: Enchant>\n<Help Description>\nRemove other \"karn\" enchantments; unit will reflect \\c[4]100%\\c[0] \\magic \\dmg to its next attacker, then remove Makarakarn\n</Help Description>\n\n<Custom Apply Effect>\nvar removeStates = [];\nremoveStates.push(326);\n</Custom Apply Effect>\n\n<Custom React Effect>\nif (this.isMagical() && this.isHpEffect() && value > 0) {\n  var reflectRate = 1.00;\n  var reflectDmg = Math.ceil(value * reflectRate);\n  user.startAnimation(2);\n  user.gainHp(-reflectDmg);\n  user.startDamagePopup();\n  if (user.isDead()) {\n    user.performCollapse();\n  }\n  user.clearResult();\n  value = 0;\n  this._activatedDmgReflect = true;\n}\n</Custom React Effect>\n\n<Custom Respond Effect>\nif (this._activatedDmgReflect) {\n  target.result().hpAffected = false;\n  target.removeState(stateId);\n}\n</Custom Respond Effect>","overlay":0,"priority":100,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":328,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Celestial Fortune","note":"// Healer Passive\n\n<Custom Confirm Effect>\nif (this.isHpEffect() && value < 0) {\n  var chance = user.cri;\n  if (Math.random() < chance) {\n    value += Math.floor(value * 0.65);\n    this.critical = true;\n  }\n}\n</Custom Confirm Effect>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":329,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":72,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"Healing Effect","note":"<Regen Formula: a.hp>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":330,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":2,"maxTurns":5,"message1":"","message2":"","message3":"","message4":"","minTurns":5,"motion":0,"name":"DoT Effect","note":"<DoT Formula: a.mat>","overlay":0,"priority":50,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":331,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":70,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Critical","note":"<Custom Crit Rate: HP Pride 100%>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":332,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"---Cheats---","note":"<Physical Taunt>\n<Magical Taunt>\n<Certain Taunt>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":333,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":14,"dataId":1,"value":1}],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"God Mode","note":"<Custom Passive Condition>\ncondition = ConfigManager.CheatsEnabled &&\nConfigManager.CheatGodMode;\n</Custom Passive Condition>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":334,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":14,"dataId":21,"value":1},{"code":14,"dataId":22,"value":1},{"code":14,"dataId":26,"value":1},{"code":14,"dataId":31,"value":1},{"code":14,"dataId":36,"value":1},{"code":14,"dataId":37,"value":1},{"code":14,"dataId":38,"value":1},{"code":14,"dataId":41,"value":1},{"code":14,"dataId":42,"value":1},{"code":14,"dataId":43,"value":1},{"code":14,"dataId":46,"value":1},{"code":14,"dataId":51,"value":1},{"code":14,"dataId":56,"value":1},{"code":14,"dataId":57,"value":1},{"code":14,"dataId":58,"value":1},{"code":14,"dataId":60,"value":1},{"code":14,"dataId":66,"value":1},{"code":14,"dataId":67,"value":1}],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Resist Ailments","note":"<Custom Passive Condition>\ncondition = ConfigManager.CheatsEnabled &&\nConfigManager.CheatResistAilments;\n</Custom Passive Condition>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":335,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":12,"dataId":0,"value":0},{"code":12,"dataId":1,"value":0},{"code":12,"dataId":2,"value":0},{"code":12,"dataId":3,"value":0},{"code":12,"dataId":4,"value":0},{"code":12,"dataId":5,"value":0},{"code":12,"dataId":6,"value":0},{"code":12,"dataId":7,"value":0}],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Resist Debuffs","note":"<Custom Passive Condition>\ncondition = ConfigManager.CheatsEnabled &&\nConfigManager.CheatResistDebuffs;\n</Custom Passive Condition>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":336,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":64,"dataId":1,"value":1}],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"No Encounters","note":"<Custom Passive Condition>\ncondition = ConfigManager.CheatsEnabled &&\nConfigManager.CheatNoEncounters;\n</Custom Passive Condition>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":337,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[{"code":64,"dataId":2,"value":1}],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"No Surprise Attacks","note":"<Custom Passive Condition>\ncondition = ConfigManager.CheatsEnabled &&\nConfigManager.CheatNoSurpriseAttacks;\n</Custom Passive Condition>","overlay":0,"priority":0,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":338,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":339,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":340,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100}
]